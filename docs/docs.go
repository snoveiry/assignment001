// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Zeipt API Support",
            "email": "support@zeipt.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/app/user/delete": {
            "post": {
                "description": "Handles delete of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 User"
                ],
                "summary": "user delete",
                "parameters": [
                    {
                        "description": "payload to delete a user",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userv2.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/app/user/identifications/delete": {
            "post": {
                "description": "Handles the deletion of an Value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 User"
                ],
                "summary": "identification delete",
                "parameters": [
                    {
                        "description": "payload to delete an Value",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/identificationv2.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/app/user/identifications/register": {
            "post": {
                "description": "Handles the registration of an Value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 User"
                ],
                "summary": "identification registration",
                "parameters": [
                    {
                        "description": "payload to register an identifier for a user",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/identificationv2.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/identificationv2.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/app/user/identifications/verify/{token}": {
            "get": {
                "description": "Handles the verification of identifications for users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 User"
                ],
                "summary": "identification verification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The token used to verify the identification",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/app/user/info": {
            "post": {
                "description": "Handles getting information of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 User"
                ],
                "summary": "user information",
                "parameters": [
                    {
                        "description": "payload to get information of a user",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userv2.InfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/userv2.InfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/app/user/receipt/delete/timestamp": {
            "post": {
                "description": "deletes receipts based on timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Receipt"
                ],
                "summary": "deletes receipts based on timestamp",
                "parameters": [
                    {
                        "description": "json payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delete.TimestampRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/app/user/receipt/delete/transnr": {
            "post": {
                "description": "deletes receipts based on transnr(s)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Receipt"
                ],
                "summary": "deletes receipts based on transnr(s)",
                "parameters": [
                    {
                        "description": "json payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/delete.TransnrRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/app/user/receipt/fetch/timestamp": {
            "post": {
                "description": "returns receipts based on timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Receipt"
                ],
                "summary": "returns receipts based on timestamp",
                "parameters": [
                    {
                        "description": "json payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_receiptv2_appuser_fetch.TimestampRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fetch.TimestampResponse"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/app/user/receipt/fetch/transnr": {
            "post": {
                "description": "returns receipts based on transaction number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Receipt"
                ],
                "summary": "returns receipts based on transaction number",
                "parameters": [
                    {
                        "description": "json payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_receiptv2_appuser_fetch.TransactionNumberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/app/user/register": {
            "post": {
                "description": "Handles the registration of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 User"
                ],
                "summary": "user registration",
                "parameters": [
                    {
                        "description": "payload to register a user",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userv2.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/auth/dashboard": {
            "post": {
                "description": "Accepts an email and password and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Auth"
                ],
                "summary": "accepts an email and password",
                "parameters": [
                    {
                        "description": "payload with email and password",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authv2.DashboardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/auth/provider": {
            "post": {
                "description": "Use an authenticated JWT to authenticate as a provider and receive a new JWT to be used for the provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Auth"
                ],
                "summary": "authenticate as a demo provider",
                "parameters": [
                    {
                        "description": "payload with api key",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authv2.ProviderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/auth/public": {
            "post": {
                "description": "Use an authenticated JWT to authenticate as a public provider and receive a new JWT to be used for the provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Auth"
                ],
                "summary": "authenticate as a public provider",
                "parameters": [
                    {
                        "description": "payload with api key and provider_gcid",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authv2.PublicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/auth/user": {
            "post": {
                "description": "Use an authenticated JWT to authenticate as a provider user and receive a new JWT to be used for the provider user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Auth"
                ],
                "summary": "authenticate as a provider user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "JWT Access token for dashboard user",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload with a provider_gcid",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authv2.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/activate": {
            "post": {
                "description": "Handles the activation of a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "Client activation",
                "parameters": [
                    {
                        "description": "payload to activate a client",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientv2.ActivateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/app/permission/grant": {
            "post": {
                "description": "Handles permission granting for application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "permission granting",
                "parameters": [
                    {
                        "description": "payload to grant permission",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_permissionv2.GrantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/app/permission/remove": {
            "post": {
                "description": "Handles permission removing for application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "permission removing",
                "parameters": [
                    {
                        "description": "payload to remove permission",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_permissionv2.RemoveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/app/settings/default": {
            "post": {
                "description": "Handles settings for application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "default settings for application",
                "parameters": [
                    {
                        "description": "payload set defaults for application settings",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.DefaultRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/app/settings/info": {
            "post": {
                "description": "Handles settings information for application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "settings information for application",
                "parameters": [
                    {
                        "description": "payload to get application information",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/app/settings/input": {
            "post": {
                "description": "Handles settings for application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "settings for application",
                "parameters": [
                    {
                        "description": "payload for application settings",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InputRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/credit/logic/activate": {
            "post": {
                "description": "Handles the activation of a credit logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Credit"
                ],
                "summary": "Activate credit template so the logic can be triggered when sending receipt",
                "parameters": [
                    {
                        "description": "payload to activate a credit logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/creditv2.UpdateCredit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/credit/logic/create": {
            "post": {
                "description": "Handles the creation of a credit logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Credit"
                ],
                "summary": "Create credit template with logic to be used when processing request on send receipt or initiate credit endpoints",
                "parameters": [
                    {
                        "description": "payload to create a credit logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/creditv2.CreateCredit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/credit/logic/deactivate": {
            "post": {
                "description": "Handles the deactivation of a credit logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Credit"
                ],
                "summary": "Deactivate credit template so the logic can't be triggered when sending receipt",
                "parameters": [
                    {
                        "description": "payload to deactivate a credit logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/creditv2.UpdateCredit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/credit/logic/delete": {
            "post": {
                "description": "Handles delete of a credit logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Credit"
                ],
                "summary": "Delete credit template of the client",
                "parameters": [
                    {
                        "description": "payload to delete a credit logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/creditv2.UpdateCredit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/credit/logic/fetch": {
            "post": {
                "description": "Handles fetch of a credit logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Credit"
                ],
                "summary": "Fetch credit template of the client",
                "parameters": [
                    {
                        "description": "payload to fetch a credit logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/creditv2.UpdateCredit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/creditv2.ResponseCreditFetch"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/credit/logic/update": {
            "post": {
                "description": "Handles update of a credit logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Credit"
                ],
                "summary": "Update existing credit template",
                "parameters": [
                    {
                        "description": "payload to update a credit logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/creditv2.UpdateCredit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/deactivate": {
            "post": {
                "description": "Handles the deactivation of a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "Client deactivation",
                "parameters": [
                    {
                        "description": "payload to deactivate a client",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientv2.DeactivateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/delete": {
            "post": {
                "description": "Handles the deletion of a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "Client deletion",
                "parameters": [
                    {
                        "description": "payload to delete a client",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientv2.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/discount/logic/activate": {
            "post": {
                "description": "Handles the activation of a discount logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Discount"
                ],
                "summary": "Activate discount template so the logic can be triggered when sending receipt",
                "parameters": [
                    {
                        "description": "payload to activate a discount logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logicv2.ActivateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/discount/logic/create": {
            "post": {
                "description": "Handles the creation of a discount logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Discount"
                ],
                "summary": "Create discount template with logic to be used when processing request on send receipt or initiate discount endpoints",
                "parameters": [
                    {
                        "description": "payload to create a discount logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logicv2.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/discount/logic/deactivate": {
            "post": {
                "description": "Handles the activation of a discount logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Discount"
                ],
                "summary": "Deactivate discount template so the logic can't be triggered when sending receipt",
                "parameters": [
                    {
                        "description": "payload to activate a discount logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logicv2.DeactivateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/discount/logic/delete": {
            "post": {
                "description": "Handles delete of a discount logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Discount"
                ],
                "summary": "Delete discount template of the client",
                "parameters": [
                    {
                        "description": "payload to delete a discount logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logicv2.DeleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/discount/logic/fetch": {
            "post": {
                "description": "Handles fetch of a discount logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Discount"
                ],
                "summary": "Fetch discount template of the client",
                "parameters": [
                    {
                        "description": "payload to fetch a discount logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logicv2.FetchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/logicv2.FetchResponse"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/discount/logic/update": {
            "post": {
                "description": "Handles update of a discount logic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Discount"
                ],
                "summary": "Update existing discount template",
                "parameters": [
                    {
                        "description": "payload to update a discount logic",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logicv2.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/merchant/permission/grant": {
            "post": {
                "description": "Handles permission granting for merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "permission granting",
                "parameters": [
                    {
                        "description": "payload grant permission",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_permissionv2.GrantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/merchant/permission/remove": {
            "post": {
                "description": "Handles permission removing for merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "permission removing",
                "parameters": [
                    {
                        "description": "payload remove permission",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_permissionv2.RemoveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/merchant/settings/default": {
            "post": {
                "description": "Handles default settings for merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "default settings",
                "parameters": [
                    {
                        "description": "payload default settings",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.DefaultRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/merchant/settings/follow/default": {
            "post": {
                "description": "Handles default follow settings for merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "default follow settings",
                "parameters": [
                    {
                        "description": "payload default follow settings",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/followv2.DefaultRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/merchant/settings/follow/set": {
            "post": {
                "description": "Handles follow settings for merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "follow settings",
                "parameters": [
                    {
                        "description": "payload set follow settings",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/followv2.SetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/merchant/settings/info": {
            "post": {
                "description": "Handles getting merchant information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "get merchant information",
                "parameters": [
                    {
                        "description": "payload get merchant info",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/merchant/settings/input": {
            "post": {
                "description": "Handles input settings for merchant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "input settings",
                "parameters": [
                    {
                        "description": "payload default settings",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InputRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/register": {
            "post": {
                "security": [
                    {
                        "JWT_PID": []
                    },
                    {
                        "JWT_DGCID": []
                    },
                    {
                        "APIKey": []
                    }
                ],
                "description": "Handles the registration of a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "Client registration",
                "parameters": [
                    {
                        "description": "payload to register a client",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientv2.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/clientv2.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/client/update": {
            "post": {
                "description": "Handles the update of a client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "Client Update",
                "parameters": [
                    {
                        "description": "payload to update a client",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientv2.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/activate/{token}": {
            "get": {
                "description": "Takes a token and activates a user account if a matching token is found",
                "tags": [
                    "V2 Auth"
                ],
                "summary": "Activate a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid user activation token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/client/{client_number}/users": {
            "get": {
                "description": "returns all users with permission to perform actions on specific client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Client"
                ],
                "summary": "get all users that has permission to perform actions on specific client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid client number value",
                        "name": "client_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UsersResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/fetch/client": {
            "get": {
                "description": "Returns clients for authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Dashboard"
                ],
                "summary": "Returns clients for authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/fetchv2.ClientResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/fetch/pid": {
            "get": {
                "description": "Returns providers for authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Dashboard"
                ],
                "summary": "Returns providers for authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/fetchv2.PidResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/invite": {
            "post": {
                "description": "Handles sending invitationof for a dashboarduser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Invite"
                ],
                "summary": "invite a dashboarduser",
                "parameters": [
                    {
                        "description": "payload to send invitation for a dashboarduser",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/invite.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/invite.PostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/invite/{id}": {
            "put": {
                "tags": [
                    "V2 Invite"
                ],
                "summary": "update a specific invite row",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid invite ulid value",
                        "name": "invite_ulid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload to accept or decline an invitation",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/invite.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "V2 Invite"
                ],
                "summary": "delete a specific invite row",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid invite ulid value",
                        "name": "invite_ulid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/invites": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Invite"
                ],
                "summary": "get all invites for a dashboarduser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/invite.ResponseData"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/invites/:id": {
            "get": {
                "description": "get an invite",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Invite"
                ],
                "summary": "get an invite",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/invite.ResponseData"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/invites/token": {
            "post": {
                "description": "will generate an invite token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Token"
                ],
                "summary": "generate invite token",
                "parameters": [
                    {
                        "description": "payload to generate an invite token",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tokens.TokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tokens.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/invites/token/{invite_token}": {
            "get": {
                "description": "Takes a token and start invitation if a matching token is found",
                "tags": [
                    "V2 Invite"
                ],
                "summary": "matching token and start invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid invite starting token",
                        "name": "invite_token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/password/reset": {
            "post": {
                "description": "Requests a reset password email. The link is valid for 1 hour.",
                "tags": [
                    "V2 Auth"
                ],
                "summary": "Requests a reset password email",
                "parameters": [
                    {
                        "description": "payload to request a reset a password email",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.PasswordResetRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/password/reset/{token}": {
            "post": {
                "description": "Takes a token and if valid, changes the users password",
                "tags": [
                    "V2 Auth"
                ],
                "summary": "Changes the users password",
                "parameters": [
                    {
                        "description": "payload to reset a password",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.PasswordResetTokenRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "a valid password reset token",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/permissions": {
            "get": {
                "description": "return all permissions we have with name and description",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Permission"
                ],
                "summary": "get all permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/permissions.Permission"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/pid/delete": {
            "post": {
                "description": "Handles the deletion of a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Provider"
                ],
                "summary": "Provider deletion",
                "parameters": [
                    {
                        "description": "payload to delete a provider",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.DeleteProviderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/pid/generate/apikey": {
            "post": {
                "description": "Handles the generation of apikey",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Auth"
                ],
                "summary": "Apikey generation",
                "parameters": [
                    {
                        "description": "payload to generate an apikey",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.GenerateApikeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.RegisterProviderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/pid/register": {
            "post": {
                "description": "Handles the registration of a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Provider"
                ],
                "summary": "Provider registration",
                "parameters": [
                    {
                        "description": "payload to register a provider",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.RegisterProviderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.RegisterProviderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/pid/update": {
            "post": {
                "description": "Handles the registration of a provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Provider"
                ],
                "summary": "Provider updatation",
                "parameters": [
                    {
                        "description": "payload to update a provider",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.UpdateProviderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/provider/{pid}/users": {
            "get": {
                "description": "returns all users with permission to perform action on specific provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Provider"
                ],
                "summary": "get all users that has permission to perform actions on specific provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid pid value",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UsersResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/register": {
            "post": {
                "description": "Handles the registration of a dashboard user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Auth"
                ],
                "summary": "Dashboard user registration",
                "parameters": [
                    {
                        "description": "payload to register a user",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/role/{role_ulid}": {
            "get": {
                "description": "return a specific role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Role"
                ],
                "summary": "get a specific role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid role ulid value",
                        "name": "role_ulid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/roles": {
            "get": {
                "description": "return all roles we have",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Role"
                ],
                "summary": "get all roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/roles.Role"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/user": {
            "get": {
                "description": "Retrieve the registered info about the dashboard user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Dashboard"
                ],
                "summary": "get dashboard user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the dashboard user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Dashboard"
                ],
                "summary": "Update the dashboard user.",
                "parameters": [
                    {
                        "description": "payload to get a user",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dashboardv2.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/user/{dgcid}/permission/{permission_ulid}": {
            "post": {
                "description": "Handles adding permission to a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 User"
                ],
                "summary": "add permission to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid dashboarduser global customer identifier value",
                        "name": "dgcid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "a valid permission ulid value",
                        "name": "permission_ulid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload that contain clients and providers who are subject of permission",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PermissionRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove permission for user",
                "tags": [
                    "V2 User"
                ],
                "summary": "remove permission for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid dashboarduser global customer identifier value",
                        "name": "dgcid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "a valid permission ulid value",
                        "name": "permission_ulid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload that contain clients and providers who are subject of delete permission",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PermissionRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/dashboard/user/{dgcid}/role/{role_ulid}": {
            "post": {
                "description": "Handles adding role to a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 User"
                ],
                "summary": "add role to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid dashboarduser global customer identifier value",
                        "name": "dgcid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "a valid role ulid value",
                        "name": "role_ulid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload that contain clients and providers who are subject of role",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PermissionRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove the users associated role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 User"
                ],
                "summary": "Remove the users associated roler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid dashboarduser global customer identifier value",
                        "name": "dgcid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "a valid role ulid value",
                        "name": "role_ulid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload that contain clients and providers who are subject of role",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PermissionRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/echo": {
            "get": {
                "description": "Sending a get request to the echo endpoint should always return a response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Global"
                ],
                "summary": "Uptime endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/monolith.echoResponse"
                        }
                    }
                }
            }
        },
        "/file/{id}": {
            "get": {
                "description": "Retrieves a file",
                "produces": [
                    "image/*"
                ],
                "tags": [
                    "V2 Files"
                ],
                "summary": "Retrieve file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the file",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "security": [
                    {
                        "JWT_PID": []
                    },
                    {
                        "JWT_DGCID": []
                    },
                    {
                        "APIKey": []
                    }
                ],
                "description": "Lists files for the authorized provider(s)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Files"
                ],
                "summary": "List files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/files.FileMetaData"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "APIKey": []
                    }
                ],
                "description": "Handles the uploading of files",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Files"
                ],
                "summary": "File upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File you would like to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The pid the file should belong to",
                        "name": "pid",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "The client the file should belong to",
                        "name": "client_number",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/files.UploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/merchant/extended/lookup": {
            "post": {
                "description": "Handles getting merchant extended objects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Extended-Objects"
                ],
                "summary": "get extended objects",
                "parameters": [
                    {
                        "description": "payload get merchant extended objects",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/extendedv2.LookupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extendedv2.LookupResponse"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/merchant/receipt/fetch/timestamp": {
            "post": {
                "description": "returns receipts based on timestamp",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Receipt"
                ],
                "summary": "returns receipts based on timestamp",
                "parameters": [
                    {
                        "description": "json payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_receiptv2_merchant_fetch.TimestampRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/fetch.TimestampResponse"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/merchant/receipt/fetch/transnr": {
            "post": {
                "description": "returns receipts based on transaction number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Receipt"
                ],
                "summary": "returns receipts based on transaction number",
                "parameters": [
                    {
                        "description": "json payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_receiptv2_merchant_fetch.TransactionNumberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/merchant/receipt/lookup": {
            "post": {
                "description": "Checks if identifiers of a user are able to receive a receipt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Receipt"
                ],
                "summary": "Check receivable identifiers",
                "parameters": [
                    {
                        "description": "json payload with identifiers used for lookup",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/receiptv2.LookupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/receiptv2.LookupResponse"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/merchant/receipt/send": {
            "post": {
                "description": "Accepts a receipt object from a merchant client and attaches it to a provider user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Receipt"
                ],
                "summary": "Accepts a receipt object",
                "parameters": [
                    {
                        "description": "json payload representing a Zeipt receipt object",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/receiptv2.SendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/receiptv2.SendResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/pid/webhook/info": {
            "post": {
                "description": "Lists webhooks for the provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Webhook"
                ],
                "summary": "Lists webhooks for the provider",
                "parameters": [
                    {
                        "description": "payload get webhooks",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhookv2.InfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/webhookv2.WebhookResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/pid/webhook/message": {
            "post": {
                "description": "Fetches webhook messages from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Webhook"
                ],
                "summary": "Fetches webhook messages",
                "parameters": [
                    {
                        "description": "payload get webhook messages",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhookv2.MessageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/pid/webhook/register": {
            "post": {
                "description": "Creates a new webhook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Webhook"
                ],
                "summary": "Creates a new webhook",
                "parameters": [
                    {
                        "description": "payload to create a webhook",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhookv2.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/pid/webhook/test": {
            "post": {
                "description": "Test is an endpoint for testing webhooks which just outputs the data in the log",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "V2 Webhook"
                ],
                "summary": "Test webhook requests",
                "parameters": [
                    {
                        "description": "payload to get webhooks",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/pid/webhook/update": {
            "post": {
                "description": "Performs CRUD operations on webhooks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Webhook"
                ],
                "summary": "Performs CRUD operations on webhooks",
                "parameters": [
                    {
                        "description": "payload to update webhooks",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/webhookv2.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/public/locations": {
            "get": {
                "description": "Gets all active purchase locations for merchants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Location"
                ],
                "summary": "Gets all active purchase locations for merchants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/locationv2.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/statistics": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "APIKey": []
                    }
                ],
                "description": "fetches statistics for the authenticated provider or dashboard user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Statistics"
                ],
                "summary": "fetches statistics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The provider ULID of the provider to fetch statistics for",
                        "name": "provider",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The client number of the client to fetch statistics for",
                        "name": "client",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "NOW - 1 month",
                        "description": "The YYYY-MM-DD date you would like statistics to be fetched from",
                        "name": "from",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "NOW",
                        "description": "The YYYY-MM-DD date you would like statistics to be fetched to",
                        "name": "to",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "day",
                            "month",
                            "year",
                            "detailed",
                            "count"
                        ],
                        "type": "string",
                        "description": "This will adapt the output accordingly",
                        "name": "segment",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "lookup",
                            "identification",
                            "receipt"
                        ],
                        "type": "string",
                        "description": "The service to fetch statistics for.",
                        "name": "service",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "extended",
                            "email",
                            "sms",
                            "send",
                            "matched"
                        ],
                        "type": "string",
                        "description": "The action to fetch statistics for.",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "one or more comma seperated keys to further segment the statistics, for example 'bank_token,email'",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statisticsv2.SegmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/statistics/client/segment/{client}/{from}/{to}/{segment}/{service}/{action}": {
            "get": {
                "security": [
                    {
                        "JWT_PID": []
                    },
                    {
                        "JWT_DGCID": []
                    },
                    {
                        "APIKey": []
                    }
                ],
                "description": "fetches statistics for the authenticated provider or dashboard user \u003cbr/\u003e\u003cbr/\u003eUse /statistics with query parameters instead.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Statistics"
                ],
                "summary": "fetches statistics for a client",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "The client number of the client to fetch statistics for",
                        "name": "client",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The YYYY-MM-DD date you would like statistics to be fetched from",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The YYYY-MM-DD date you would like statistics to be fetched to",
                        "name": "to",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "day",
                            "month",
                            "year",
                            "detailed",
                            "count"
                        ],
                        "type": "string",
                        "description": "This will adapt the output accordingly",
                        "name": "segment",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The service to fetch statistics for. This can be 'receipt' for example.",
                        "name": "service",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The action to fetch statistics for. This can be 'send' for example.",
                        "name": "action",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "one or more comma seperated keys to further segment the statistics, example ?key=bank_token,email",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statisticsv2.SegmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/statistics/provider/segment/{provider}/{from}/{to}/{segment}/{service}/{action}": {
            "get": {
                "security": [
                    {
                        "JWT_PID": []
                    },
                    {
                        "JWT_DGCID": []
                    },
                    {
                        "APIKey": []
                    }
                ],
                "description": "fetches statistics for the authenticated provider or dashboard user \u003cbr/\u003e\u003cbr/\u003eUse /statistics with query parameters instead.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Statistics"
                ],
                "summary": "fetches statistics for a provider",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "The provider ULID of the provider to fetch statistics for",
                        "name": "provider",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The YYYY-MM-DD date you would like statistics to be fetched from",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The YYYY-MM-DD date you would like statistics to be fetched to",
                        "name": "to",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "day",
                            "month",
                            "year",
                            "detailed",
                            "count"
                        ],
                        "type": "string",
                        "description": "This will adapt the output accordingly",
                        "name": "segment",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The service to fetch statistics for. This can be 'receipt' for example.",
                        "name": "service",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The action to fetch statistics for. This can be 'send' for example.",
                        "name": "action",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "one or more comma seperated keys to further segment the statistics, example ?key=bank_token,email",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statisticsv2.SegmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/statistics/segment/{from}/{to}/{segment}/{service}/{action}": {
            "get": {
                "security": [
                    {
                        "JWT_PID": []
                    },
                    {
                        "JWT_DGCID": []
                    },
                    {
                        "APIKey": []
                    }
                ],
                "description": "fetches statistics for the authenticated provider or dashboard user \u003cbr/\u003e\u003cbr/\u003eUse /statistics with query parameters instead.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V2 Statistics"
                ],
                "summary": "fetches statistics for a specific segment",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "The YYYY-MM-DD date you would like statistics to be fetched from",
                        "name": "from",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The YYYY-MM-DD date you would like statistics to be fetched to",
                        "name": "to",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "day",
                            "month",
                            "year",
                            "detailed",
                            "count"
                        ],
                        "type": "string",
                        "description": "This will adapt the output accordingly",
                        "name": "segment",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The service to fetch statistics for. This can be 'receipt' for example.",
                        "name": "service",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The action to fetch statistics for. This can be 'send' for example.",
                        "name": "action",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "one or more comma seperated keys to further segment the statistics, example ?key=bank_token,email",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/statisticsv2.SegmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/clients": {
            "get": {
                "description": "Returns clients for authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Client"
                ],
                "summary": "Returns clients for authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/clients.ClientsResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/clients/{client_number}/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "returns all users with permission to perform actions on specific client",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Client"
                ],
                "summary": "get all users that has permission to perform actions on specific client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid client id value",
                        "name": "client_number",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UsersResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/invites": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Invite"
                ],
                "summary": "get all invites for a dashboarduser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/invite.ResponseData"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Handles sending invitationof for a dashboarduser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Invite"
                ],
                "summary": "invite a dashboarduser",
                "parameters": [
                    {
                        "description": "payload to send invitation for a dashboarduser",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/invite.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/invite.PostResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/invites/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "get an invite",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Invite"
                ],
                "summary": "get an invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid invite id value",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/invite.ResponseData"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "V3 Invite"
                ],
                "summary": "update a specific invite row",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid invite id value",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload to accept or decline an invitation",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/invite.UpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "tags": [
                    "V3 Invite"
                ],
                "summary": "delete a specific invite row",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid invite id value",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/locations": {
            "get": {
                "description": "Gets all active purchase locations for merchants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Location"
                ],
                "summary": "Gets all active purchase locations for merchants",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/locationv2.Response"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/permissions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "return all permissions we have with name and description",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Permission"
                ],
                "summary": "get all permissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/permissions.Permission"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/providers": {
            "get": {
                "description": "Returns providers for authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Provider"
                ],
                "summary": "Returns providers for authenticated user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/fetchv2.PidResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/providers/{pid}/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "returns all users with permission to perform action on specific provider",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Provider"
                ],
                "summary": "get all users that has permission to perform actions on specific provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid pid value",
                        "name": "pid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.UsersResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/receipts": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "APIKey": []
                    }
                ],
                "description": "Accepts a receipt object from a merchant client and attaches it to a provider user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Receipt"
                ],
                "summary": "Accepts a receipt object",
                "parameters": [
                    {
                        "description": "json payload representing a Zeipt object",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/receipt.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/v3.0/roles": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "return all roles we have",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Role"
                ],
                "summary": "get all roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/roles.Role"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/roles/{role_ulid}": {
            "get": {
                "description": "return a specific role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Role"
                ],
                "summary": "get a specific role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid role ulid value",
                        "name": "role_ulid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/roles.Role"
                        }
                    },
                    "204": {
                        "description": ""
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/sessions": {
            "post": {
                "description": "Creates a session based on the username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Sessions"
                ],
                "summary": "Creates a session based on the username and password",
                "parameters": [
                    {
                        "description": "payload with username and password",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/session.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    },
                    {
                        "APIKey": []
                    }
                ],
                "description": "Deletes the authenticated session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Sessions"
                ],
                "summary": "Deletes the authenticated session",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/tokens": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "will generate an invite token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 Token"
                ],
                "summary": "generate invite token",
                "parameters": [
                    {
                        "description": "payload to generate an invite token",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tokens.TokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tokens.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/tokens/{invite_token}": {
            "get": {
                "description": "Takes a token and start invitation if a matching token is found",
                "tags": [
                    "V3 Invite"
                ],
                "summary": "matching token and start invite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid invite starting token",
                        "name": "invite_token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/users": {
            "post": {
                "description": "Handles the registration of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 User"
                ],
                "summary": "User registration",
                "parameters": [
                    {
                        "description": "payload to register a user",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/users.CreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/users/{dgcid}/permissions/{permission_ulid}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Handles adding permissions to a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 User"
                ],
                "summary": "add permissions to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid dashboarduser global customer identifier value",
                        "name": "dgcid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "a valid permission ulid value",
                        "name": "permission_ulid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload that contain clients and providers who are subject of permission",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PermissionRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove permission for user",
                "tags": [
                    "V3 User"
                ],
                "summary": "remove permission for user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid dashboarduser global customer identifier value",
                        "name": "dgcid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "a valid permission ulid value",
                        "name": "permission_ulid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload that contain clients and providers who are subject of delete permission",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PermissionRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        },
        "/v3.0/users/{dgcid}/roles/{role_ulid}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Handles adding role to a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "V3 User"
                ],
                "summary": "add role to a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid dashboarduser global customer identifier value",
                        "name": "dgcid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "a valid role ulid value",
                        "name": "role_ulid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload that contain clients and providers who are subject of role",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PermissionRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            },
            "delete": {
                "description": "DeleteRole removes a role of a user",
                "tags": [
                    "V3 User"
                ],
                "summary": "removes a role of a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "a valid dashboarduser global customer identifier value",
                        "name": "dgcid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "a valid role ulid value",
                        "name": "role_ulid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "payload that contain clients and providers who are subject of delete permission",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.PermissionRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/general.ValidationError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/error.Default"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authv2.DashboardRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "useremail@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "PLAsdje4U301aoiA"
                }
            }
        },
        "authv2.ProviderRequest": {
            "type": "object",
            "required": [
                "api_key"
            ],
            "properties": {
                "api_key": {
                    "type": "string",
                    "example": "ff629c91-7158-4abb-a4e0-de915f159573"
                }
            }
        },
        "authv2.PublicRequest": {
            "type": "object",
            "required": [
                "api_key",
                "provider_gcid"
            ],
            "properties": {
                "api_key": {
                    "type": "string",
                    "example": "ff629c91-7158-4abb-a4e0-de915f159573"
                },
                "provider_gcid": {
                    "type": "string",
                    "example": "ff629c91-7158-4acb-a4e0-de815f159573"
                }
            }
        },
        "authv2.UserRequest": {
            "type": "object",
            "required": [
                "provider_gcid"
            ],
            "properties": {
                "provider_gcid": {
                    "type": "string",
                    "example": "user_1"
                }
            }
        },
        "clients.ClientInfo": {
            "type": "object",
            "properties": {
                "gcid": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "org_number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "clients.ClientsResponse": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clients.ClientInfo"
                    }
                }
            }
        },
        "clientv2.ActivateRequest": {
            "type": "object",
            "properties": {
                "caas": {
                    "type": "boolean",
                    "example": true
                },
                "client": {
                    "$ref": "#/definitions/clientv2.ClientActivate"
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "daas": {
                    "type": "boolean",
                    "example": true
                },
                "edaas": {
                    "type": "boolean",
                    "example": true
                },
                "evaas": {
                    "type": "boolean",
                    "example": true
                },
                "iaas": {
                    "type": "boolean",
                    "example": true
                },
                "psaas": {
                    "type": "boolean",
                    "example": true
                },
                "raas": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "clientv2.Client": {
            "type": "object",
            "required": [
                "client_gcid",
                "client_type"
            ],
            "properties": {
                "client_gcid": {
                    "type": "string",
                    "example": "client_1"
                },
                "client_type": {
                    "type": "string",
                    "enum": [
                        "merchant",
                        "application",
                        "brand"
                    ],
                    "example": "merchant"
                }
            }
        },
        "clientv2.ClientActivate": {
            "type": "object",
            "properties": {
                "client_gcid": {
                    "type": "string",
                    "example": "client_1"
                },
                "client_type": {
                    "type": "string",
                    "enum": [
                        "merchant",
                        "application",
                        "brand"
                    ],
                    "example": "merchant"
                }
            }
        },
        "clientv2.ClientDeactivate": {
            "type": "object",
            "properties": {
                "client_gcid": {
                    "type": "string",
                    "example": "client_1"
                },
                "client_type": {
                    "type": "string",
                    "enum": [
                        "merchant",
                        "application",
                        "brand"
                    ],
                    "example": "merchant"
                }
            }
        },
        "clientv2.ClientOutput": {
            "type": "object",
            "properties": {
                "client_number": {
                    "type": "string"
                },
                "client_type": {
                    "type": "string"
                }
            }
        },
        "clientv2.ClientUpdate": {
            "type": "object",
            "properties": {
                "client_gcid": {
                    "type": "string",
                    "example": "client_1"
                },
                "client_type": {
                    "type": "string",
                    "enum": [
                        "merchant",
                        "application",
                        "brand"
                    ],
                    "example": "merchant"
                }
            }
        },
        "clientv2.ContactInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "contact_person": {
                    "$ref": "#/definitions/clientv2.ContactPerson"
                },
                "country_code": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "useremail@example.com"
                },
                "telephone": {
                    "$ref": "#/definitions/clientv2.Telephone"
                },
                "website": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "clientv2.ContactPerson": {
            "type": "object",
            "properties": {
                "contact_first_name": {
                    "type": "string"
                },
                "contact_surname": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "useremail@example.com"
                },
                "telephone": {
                    "$ref": "#/definitions/clientv2.Telephone"
                }
            }
        },
        "clientv2.DeactivateRequest": {
            "type": "object",
            "properties": {
                "caas": {
                    "type": "boolean",
                    "example": false
                },
                "client": {
                    "$ref": "#/definitions/clientv2.ClientDeactivate"
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "daas": {
                    "type": "boolean",
                    "example": false
                },
                "edaas": {
                    "type": "boolean",
                    "example": false
                },
                "evaas": {
                    "type": "boolean",
                    "example": false
                },
                "iaas": {
                    "type": "boolean",
                    "example": false
                },
                "psaas": {
                    "type": "boolean",
                    "example": false
                },
                "raas": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "clientv2.DeleteRequest": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "object",
                    "properties": {
                        "client_gcid": {
                            "type": "string",
                            "example": "client_1"
                        },
                        "client_type": {
                            "type": "string",
                            "enum": [
                                "merchant",
                                "application",
                                "brand"
                            ],
                            "example": "merchant"
                        }
                    }
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                }
            }
        },
        "clientv2.RegisterRequest": {
            "type": "object",
            "properties": {
                "client": {
                    "$ref": "#/definitions/clientv2.Client"
                },
                "common_name": {
                    "type": "string",
                    "example": "Zeipt Receipts"
                },
                "country_code": {
                    "type": "string",
                    "example": "NO"
                },
                "demo": {
                    "type": "boolean",
                    "example": false
                },
                "org_name": {
                    "type": "string",
                    "example": "Zeipt"
                },
                "org_number": {
                    "type": "string",
                    "example": "915271383MVA"
                },
                "org_suffix": {
                    "type": "string",
                    "example": "AS"
                },
                "pid": {
                    "description": "RegisterResponse",
                    "type": "string",
                    "example": "01AN4Z07BY79KA1307SR9X4MV3"
                }
            }
        },
        "clientv2.RegisterResponse": {
            "type": "object",
            "properties": {
                "client": {
                    "$ref": "#/definitions/clientv2.ClientOutput"
                },
                "common_name": {
                    "type": "string",
                    "example": "Zeipt Receipts"
                },
                "country_code": {
                    "type": "string",
                    "example": "NO"
                },
                "demo": {
                    "type": "boolean",
                    "example": false
                },
                "org_name": {
                    "type": "string",
                    "example": "Zeipt"
                },
                "org_number": {
                    "type": "string",
                    "example": "915271383MVA"
                },
                "org_suffix": {
                    "type": "string",
                    "example": "AS"
                }
            }
        },
        "clientv2.Telephone": {
            "type": "object",
            "properties": {
                "country_calling_code": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "clientv2.UpdateRequest": {
            "type": "object",
            "properties": {
                "add_demo": {
                    "type": "boolean",
                    "example": false
                },
                "client": {
                    "$ref": "#/definitions/clientv2.ClientUpdate"
                },
                "client_logo": {
                    "type": "string"
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "common_name": {
                    "type": "string",
                    "example": "Zeipt Receipts"
                },
                "contact_info": {
                    "$ref": "#/definitions/clientv2.ContactInfo"
                },
                "country_code": {
                    "type": "string",
                    "example": "NO"
                },
                "integration_lvl": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "org_name": {
                    "type": "string",
                    "example": "Zeipt"
                },
                "org_number": {
                    "type": "string"
                },
                "org_suffix": {
                    "type": "string",
                    "example": "AS"
                },
                "remove_demo": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "creditv2.CreateCredit": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "client": {
                    "type": "object",
                    "properties": {
                        "client_gcid": {
                            "type": "string"
                        },
                        "client_type": {
                            "type": "string",
                            "enum": [
                                "brand",
                                "merchant",
                                "application"
                            ]
                        }
                    }
                },
                "client_number": {
                    "type": "string"
                },
                "credit_logic_name": {
                    "type": "string"
                },
                "triggers": {
                    "type": "object",
                    "properties": {
                        "all_of_article_numbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "any_of_article_numbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "general_triggers": {
                            "type": "object",
                            "properties": {
                                "art_final_price_triggers": {
                                    "type": "object",
                                    "properties": {
                                        "above_art_final_price": {
                                            "type": "integer"
                                        },
                                        "total_currency": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "art_quantity": {
                                    "type": "integer"
                                },
                                "art_quantity_objects": {
                                    "type": "integer"
                                },
                                "final_price_triggers": {
                                    "type": "object",
                                    "properties": {
                                        "above_final_price": {
                                            "type": "integer"
                                        },
                                        "total_currency": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "payment_method_types": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "timestamp_trigger": {
                            "type": "object",
                            "properties": {
                                "after_time_of_day": {
                                    "type": "string"
                                },
                                "before_time_of_day": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "view_text": {
                    "type": "string"
                },
                "view_title": {
                    "type": "string"
                },
                "write_logic": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "integer"
                        },
                        "art_description": {
                            "type": "string"
                        },
                        "art_name": {
                            "type": "string"
                        },
                        "background_image_uri": {
                            "type": "string"
                        },
                        "bar_code": {
                            "type": "object",
                            "required": [
                                "encoding"
                            ],
                            "properties": {
                                "display_value": {
                                    "type": "string"
                                },
                                "encoding": {
                                    "type": "string",
                                    "enum": [
                                        "code_128",
                                        "code_39",
                                        "ean_13",
                                        "ean_8",
                                        "interleaved_2_of_5",
                                        "qr"
                                    ]
                                }
                            }
                        },
                        "box_image_uri": {
                            "type": "string"
                        },
                        "currency": {
                            "type": "string"
                        },
                        "generate_ticket": {
                            "type": "boolean"
                        },
                        "geographic": {
                            "type": "object",
                            "properties": {
                                "arrival_reference": {
                                    "type": "string"
                                },
                                "departure_reference": {
                                    "type": "string"
                                },
                                "distance_value": {
                                    "type": "integer"
                                },
                                "distance_value_definition": {
                                    "type": "string",
                                    "enum": [
                                        "km",
                                        "miles"
                                    ]
                                },
                                "end_location": {
                                    "type": "object",
                                    "required": [
                                        "country_code"
                                    ],
                                    "properties": {
                                        "address": {
                                            "type": "string"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "country_code": {
                                            "type": "string"
                                        },
                                        "zip_code": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "start_location": {
                                    "type": "object",
                                    "required": [
                                        "country_code"
                                    ],
                                    "properties": {
                                        "address": {
                                            "type": "string"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "country_code": {
                                            "type": "string"
                                        },
                                        "zip_code": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "handling_uri": {
                            "type": "string"
                        },
                        "html_template": {
                            "type": "string"
                        },
                        "manual_uri": {
                            "type": "string"
                        },
                        "specified": {
                            "type": "object",
                            "properties": {
                                "entrance": {
                                    "type": "string"
                                },
                                "event_ending": {
                                    "type": "string"
                                },
                                "event_start": {
                                    "type": "string"
                                },
                                "floor_number": {
                                    "type": "string"
                                },
                                "room_number": {
                                    "type": "string"
                                },
                                "row_number": {
                                    "type": "string"
                                },
                                "seat_number": {
                                    "type": "string"
                                },
                                "ttl_in_minutes": {
                                    "type": "integer"
                                }
                            }
                        },
                        "thumbnail_image_uri": {
                            "type": "string"
                        },
                        "ticket_reference": {
                            "type": "string"
                        },
                        "vat_amount": {
                            "type": "integer"
                        },
                        "vat_percentage": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "creditv2.ResponseCreditFetch": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "credit_logic_name": {
                    "type": "string"
                },
                "triggers": {
                    "type": "object",
                    "properties": {
                        "all_of_article_numbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "any_of_article_numbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "general_triggers": {
                            "type": "object",
                            "properties": {
                                "art_final_price_triggers": {
                                    "type": "object",
                                    "properties": {
                                        "above_art_final_price": {
                                            "type": "number"
                                        },
                                        "total_currency": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "art_quantity": {
                                    "type": "number"
                                },
                                "art_quantity_objects": {
                                    "type": "integer"
                                },
                                "final_price_triggers": {
                                    "type": "object",
                                    "properties": {
                                        "above_final_price": {
                                            "type": "number"
                                        },
                                        "total_currency": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "payment_method_types": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "timestamp_trigger": {
                            "type": "object",
                            "properties": {
                                "after_time_of_day": {
                                    "type": "string"
                                },
                                "before_time_of_day": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "view_text": {
                    "type": "string"
                },
                "view_title": {
                    "type": "string"
                },
                "write_logic": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number"
                        },
                        "background_image_uri": {
                            "type": "string"
                        },
                        "bar_code": {
                            "type": "object",
                            "required": [
                                "encoding"
                            ],
                            "properties": {
                                "display_value": {
                                    "type": "string"
                                },
                                "encoding": {
                                    "type": "string",
                                    "enum": [
                                        "code_128",
                                        "code_39",
                                        "ean_13",
                                        "ean_8",
                                        "interleaved_2_of_5",
                                        "qr"
                                    ]
                                }
                            }
                        },
                        "box_image_uri": {
                            "type": "string"
                        },
                        "creator_logo": {
                            "type": "string"
                        },
                        "credit_logic": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string"
                        },
                        "expiration_date": {
                            "type": "string"
                        },
                        "percentage": {
                            "type": "number"
                        },
                        "thumbnail_uri": {
                            "type": "string"
                        },
                        "title": {
                            "type": "string"
                        },
                        "total_currency": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "creditv2.UpdateCredit": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "client": {
                    "type": "object",
                    "properties": {
                        "client_gcid": {
                            "type": "string"
                        },
                        "client_type": {
                            "type": "string",
                            "enum": [
                                "brand",
                                "merchant",
                                "application"
                            ]
                        }
                    }
                },
                "client_number": {
                    "type": "string"
                },
                "credit_logic": {
                    "type": "string"
                },
                "credit_logic_name": {
                    "type": "string"
                },
                "triggers": {
                    "type": "object",
                    "properties": {
                        "all_of_article_numbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "any_of_article_numbers": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "general_triggers": {
                            "type": "object",
                            "properties": {
                                "art_final_price_triggers": {
                                    "type": "object",
                                    "properties": {
                                        "above_art_final_price": {
                                            "type": "integer"
                                        },
                                        "total_currency": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "art_quantity": {
                                    "type": "integer"
                                },
                                "art_quantity_objects": {
                                    "type": "integer"
                                },
                                "final_price_triggers": {
                                    "type": "object",
                                    "properties": {
                                        "above_final_price": {
                                            "type": "integer"
                                        },
                                        "total_currency": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "payment_method_types": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "bankaxept",
                                    "visa",
                                    "mastercard",
                                    "amex",
                                    "point_scheme",
                                    "gift_card",
                                    "other"
                                ]
                            }
                        },
                        "timestamp_trigger": {
                            "type": "object",
                            "properties": {
                                "after_time_of_day": {
                                    "type": "string"
                                },
                                "before_time_of_day": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "view_text": {
                    "type": "string"
                },
                "view_title": {
                    "type": "string"
                },
                "write_logic": {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "integer"
                        },
                        "art_description": {
                            "type": "string"
                        },
                        "art_name": {
                            "type": "string"
                        },
                        "background_image_uri": {
                            "type": "string"
                        },
                        "bar_code": {
                            "type": "object",
                            "required": [
                                "encoding"
                            ],
                            "properties": {
                                "display_value": {
                                    "type": "string"
                                },
                                "encoding": {
                                    "type": "string",
                                    "enum": [
                                        "code_128",
                                        "code_39",
                                        "ean_13",
                                        "ean_8",
                                        "interleaved_2_of_5",
                                        "qr"
                                    ]
                                }
                            }
                        },
                        "box_image_uri": {
                            "type": "string"
                        },
                        "currency": {
                            "type": "string"
                        },
                        "generate_ticket": {
                            "type": "boolean"
                        },
                        "geographic": {
                            "type": "object",
                            "properties": {
                                "arrival_reference": {
                                    "type": "string"
                                },
                                "departure_reference": {
                                    "type": "string"
                                },
                                "distance_value": {
                                    "type": "integer"
                                },
                                "distance_value_definition": {
                                    "type": "string",
                                    "enum": [
                                        "km",
                                        "miles"
                                    ]
                                },
                                "end_location": {
                                    "type": "object",
                                    "required": [
                                        "country_code"
                                    ],
                                    "properties": {
                                        "address": {
                                            "type": "string"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "country_code": {
                                            "type": "string"
                                        },
                                        "zip_code": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "start_location": {
                                    "type": "object",
                                    "required": [
                                        "country_code"
                                    ],
                                    "properties": {
                                        "address": {
                                            "type": "string"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "country_code": {
                                            "type": "string"
                                        },
                                        "zip_code": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "handling_uri": {
                            "type": "string"
                        },
                        "html_template": {
                            "type": "string"
                        },
                        "manual_uri": {
                            "type": "string"
                        },
                        "specified": {
                            "type": "object",
                            "properties": {
                                "entrance": {
                                    "type": "string"
                                },
                                "event_ending": {
                                    "type": "string"
                                },
                                "event_start": {
                                    "type": "string"
                                },
                                "floor_number": {
                                    "type": "string"
                                },
                                "room_number": {
                                    "type": "string"
                                },
                                "row_number": {
                                    "type": "string"
                                },
                                "seat_number": {
                                    "type": "string"
                                },
                                "ttl_in_minutes": {
                                    "type": "integer"
                                }
                            }
                        },
                        "thumbnail_image_uri": {
                            "type": "string"
                        },
                        "ticket_reference": {
                            "type": "string"
                        },
                        "vat_amount": {
                            "type": "integer"
                        },
                        "vat_percentage": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "dashboardv2.DeleteProviderRequest": {
            "type": "object",
            "required": [
                "pid"
            ],
            "properties": {
                "pid": {
                    "type": "string"
                }
            }
        },
        "dashboardv2.GenerateApikeyRequest": {
            "type": "object",
            "required": [
                "pid"
            ],
            "properties": {
                "delete": {
                    "type": "boolean"
                },
                "delete_timestamp": {
                    "type": "string"
                },
                "pid": {
                    "type": "string",
                    "example": "01AN4Z07BY79KA1307SR9X4MV3"
                },
                "zeipt_api_key_transnr": {
                    "type": "string"
                }
            }
        },
        "dashboardv2.PasswordResetRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "useremail@example.com"
                }
            }
        },
        "dashboardv2.PasswordResetTokenRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "example": "PLAsdje4U301aoiA"
                }
            }
        },
        "dashboardv2.RegisterProviderRequest": {
            "type": "object",
            "properties": {
                "common_name": {
                    "type": "string",
                    "example": "Zeipt Receipts"
                },
                "country_code": {
                    "type": "string",
                    "example": "NO"
                },
                "org_name": {
                    "type": "string",
                    "example": "Zeipt"
                },
                "org_number": {
                    "type": "string",
                    "example": "915271383MVA"
                },
                "org_suffix": {
                    "type": "string",
                    "example": "AS"
                }
            }
        },
        "dashboardv2.RegisterProviderResponse": {
            "type": "object",
            "properties": {
                "common_name": {
                    "type": "string",
                    "example": "Zeipt Receipts"
                },
                "country_code": {
                    "type": "string",
                    "example": "NO"
                },
                "org_name": {
                    "type": "string",
                    "example": "Zeipt"
                },
                "org_number": {
                    "type": "string",
                    "example": "915271383MVA"
                },
                "org_suffix": {
                    "type": "string",
                    "example": "AS"
                },
                "pid": {
                    "type": "string",
                    "example": "01AN4Z07BY79KA1307SR9X4MV3"
                }
            }
        },
        "dashboardv2.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "application": {
                    "type": "boolean",
                    "example": false
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "useremail@example.com"
                },
                "merchant": {
                    "type": "boolean",
                    "example": false
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "example": "PLAsdje4U301aoiA"
                }
            }
        },
        "dashboardv2.Telephone": {
            "type": "object",
            "properties": {
                "country_calling_code": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "dashboardv2.UpdateProviderRequest": {
            "type": "object",
            "required": [
                "country_code",
                "org_name",
                "org_number",
                "org_suffix",
                "pid"
            ],
            "properties": {
                "common_name": {
                    "type": "string"
                },
                "contact_info": {
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string"
                        },
                        "city": {
                            "type": "string"
                        },
                        "contact_person": {
                            "type": "object",
                            "properties": {
                                "contact_first_name": {
                                    "type": "string"
                                },
                                "contact_surname": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "useremail@example.com"
                                },
                                "telephone": {
                                    "$ref": "#/definitions/dashboardv2.Telephone"
                                }
                            }
                        },
                        "country_code": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string",
                            "format": "email",
                            "example": "useremail@example.com"
                        },
                        "telephone": {
                            "$ref": "#/definitions/dashboardv2.Telephone"
                        },
                        "website": {
                            "type": "string"
                        },
                        "zip_code": {
                            "type": "string"
                        }
                    }
                },
                "country_code": {
                    "type": "string"
                },
                "org_name": {
                    "type": "string"
                },
                "org_number": {
                    "type": "string"
                },
                "org_suffix": {
                    "type": "string"
                },
                "pid": {
                    "type": "string"
                },
                "provider_logo": {
                    "type": "string"
                }
            }
        },
        "dashboardv2.UserRequest": {
            "type": "object",
            "properties": {
                "application": {
                    "type": "boolean",
                    "example": false
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "useremail@example.com"
                },
                "guide_progression": {
                    "type": "object"
                },
                "merchant": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Petra Johanssen"
                },
                "new_password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "example": "PLAsdje4U301aoiA"
                },
                "old_password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "example": "PLAsdje4U301aoiA"
                },
                "org_role": {
                    "type": "string",
                    "example": "Developer"
                },
                "state": {
                    "type": "object",
                    "additionalProperties": true
                },
                "telephone": {
                    "$ref": "#/definitions/receiptv2.Phone"
                }
            }
        },
        "dashboardv2.UserResponse": {
            "type": "object",
            "properties": {
                "activated_at": {
                    "type": "string"
                },
                "application": {
                    "type": "boolean",
                    "example": false
                },
                "dgcid": {
                    "type": "string"
                },
                "disabled_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "guide_progression": {},
                "inserted_at": {
                    "type": "string"
                },
                "merchant": {
                    "type": "boolean",
                    "example": false
                },
                "name": {
                    "type": "string",
                    "example": "Petra Johanssen"
                },
                "org_role": {
                    "type": "string",
                    "example": "Developer"
                },
                "state": {
                    "type": "object",
                    "additionalProperties": true
                },
                "telephone": {
                    "$ref": "#/definitions/receiptv2.Phone"
                }
            }
        },
        "delete.TimestampRequest": {
            "type": "object",
            "required": [
                "provider_gcid"
            ],
            "properties": {
                "delete_all_receipts": {
                    "type": "boolean",
                    "example": true
                },
                "delete_receipt_timeframe": {
                    "$ref": "#/definitions/fetch.AllData"
                },
                "provider_gcid": {
                    "type": "string",
                    "example": "user_1"
                }
            }
        },
        "delete.TransnrRequest": {
            "type": "object",
            "required": [
                "provider_gcid",
                "zeipt_receipt_transnrs"
            ],
            "properties": {
                "provider_gcid": {
                    "type": "string",
                    "example": "user_1"
                },
                "zeipt_receipt_transnrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "01AN4Z07BY79KA1307SR9X4MV3"
                    ]
                }
            }
        },
        "error.Default": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/error.E"
                    }
                },
                "reference": {
                    "type": "string",
                    "example": "PROD01FXKSPD0G1Q6VCJZED41WHXEE"
                }
            }
        },
        "error.E": {
            "type": "object",
            "properties": {
                "docs": {
                    "type": "string",
                    "example": "https://www.zeipt.com/api-doc/#/"
                },
                "error": {
                    "type": "string",
                    "example": "A description explaining  the error may be shown here."
                },
                "field": {
                    "type": "string",
                    "example": "FirstName"
                },
                "rule": {
                    "type": "string",
                    "example": "name_validator"
                },
                "type": {
                    "type": "string",
                    "example": "BAD_VALUE"
                }
            }
        },
        "extendedv2.CustomerDelivery": {
            "type": "object",
            "properties": {
                "application_number": {
                    "type": "string"
                },
                "custom_customer_reference": {
                    "type": "string"
                },
                "email": {
                    "$ref": "#/definitions/extendedv2.Email"
                },
                "payment_medium_reference": {
                    "$ref": "#/definitions/extendedv2.PaymentMediumReference"
                },
                "telephone": {
                    "$ref": "#/definitions/extendedv2.Telephone"
                }
            }
        },
        "extendedv2.Email": {
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "email_delivery": {
                    "type": "boolean"
                }
            }
        },
        "extendedv2.LookupRequest": {
            "type": "object",
            "properties": {
                "customer_delivery": {
                    "$ref": "#/definitions/extendedv2.CustomerDelivery"
                },
                "merchant_gcid": {
                    "type": "string"
                }
            }
        },
        "extendedv2.LookupResponse": {
            "type": "object",
            "properties": {
                "credit_references": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "discount_references": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "point_references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/extendedv2.PointReferences"
                    }
                }
            }
        },
        "extendedv2.PaymentMediumReference": {
            "type": "object",
            "properties": {
                "token_provider": {
                    "type": "string"
                },
                "zeipt_card_token": {
                    "type": "string"
                }
            }
        },
        "extendedv2.PointReferences": {
            "type": "object",
            "properties": {
                "point_scheme": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "extendedv2.Telephone": {
            "type": "object",
            "properties": {
                "country_calling_code": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "sms_delivery": {
                    "type": "boolean"
                }
            }
        },
        "fetch.AllData": {
            "type": "object",
            "properties": {
                "from_timestamp": {
                    "type": "string"
                },
                "to_timestamp": {
                    "type": "string"
                }
            }
        },
        "fetch.TimestampResponse": {
            "type": "object",
            "properties": {
                "only_transnrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zeipt_receipt_objects": {
                    "type": "string"
                }
            }
        },
        "fetchv2.APIKey": {
            "type": "object",
            "properties": {
                "expiration_date": {
                    "type": "string"
                },
                "last_characters": {
                    "type": "string"
                },
                "zeipt_api_key_transnr": {
                    "type": "string"
                }
            }
        },
        "fetchv2.ClientResponse": {
            "type": "object",
            "properties": {
                "client_gcid": {
                    "type": "string"
                },
                "client_logo": {
                    "type": "string"
                },
                "client_number": {
                    "type": "string"
                },
                "client_type": {
                    "type": "string"
                },
                "common_name": {
                    "type": "string"
                },
                "contact_info": {
                    "$ref": "#/definitions/fetchv2.ContactInfo"
                },
                "country_code": {
                    "type": "string"
                },
                "dashboard_client": {
                    "type": "boolean"
                },
                "demo_client": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "org_name": {
                    "type": "string"
                },
                "org_number": {
                    "type": "string"
                },
                "org_suffix": {
                    "type": "string"
                },
                "pid": {
                    "type": "string"
                }
            }
        },
        "fetchv2.Contact": {
            "type": "object",
            "properties": {
                "contact_first_name": {
                    "type": "string"
                },
                "contact_surname": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "telephone": {
                    "$ref": "#/definitions/receiptv2.Phone"
                }
            }
        },
        "fetchv2.ContactInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "contact_person": {
                    "$ref": "#/definitions/fetchv2.Contact"
                },
                "country_code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "telephone": {
                    "$ref": "#/definitions/receiptv2.Phone"
                },
                "website": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "fetchv2.PidResponse": {
            "type": "object",
            "properties": {
                "common_name": {
                    "type": "string"
                },
                "contact_info": {
                    "$ref": "#/definitions/fetchv2.ContactInfo"
                },
                "country_code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "org_name": {
                    "type": "string"
                },
                "org_number": {
                    "type": "string"
                },
                "org_suffix": {
                    "type": "string"
                },
                "pid": {
                    "type": "string"
                },
                "provider_logo": {
                    "type": "string"
                },
                "registered_api_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/fetchv2.APIKey"
                    }
                }
            }
        },
        "files.FileMetaData": {
            "type": "object",
            "properties": {
                "byte_size": {
                    "type": "integer"
                },
                "client_number": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pid": {
                    "type": "string"
                }
            }
        },
        "files.UploadResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "followv2.DefaultRequest": {
            "type": "object",
            "properties": {
                "follow_assigned_point_scheme": {
                    "type": "boolean"
                },
                "follow_group_default_encoding": {
                    "type": "boolean"
                },
                "follow_group_email_sms_message": {
                    "type": "boolean"
                },
                "follow_group_filter": {
                    "type": "boolean"
                },
                "follow_group_permission": {
                    "type": "boolean"
                },
                "follow_group_receipt_logo": {
                    "type": "boolean"
                },
                "follow_group_receipt_storage": {
                    "type": "boolean"
                },
                "follow_group_thirdparty": {
                    "type": "boolean"
                },
                "merchant_gcid": {
                    "type": "string",
                    "example": "merchant01"
                },
                "merchant_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                }
            }
        },
        "followv2.MerchantFollowSettings": {
            "type": "object",
            "properties": {
                "follow_group_default_encoding": {
                    "type": "string"
                },
                "follow_group_email_sms_message": {
                    "type": "string"
                },
                "follow_group_filter": {
                    "type": "string"
                },
                "follow_group_permission": {
                    "type": "string"
                },
                "follow_group_receipt_logo": {
                    "type": "string"
                },
                "follow_group_receipt_storage": {
                    "type": "string"
                },
                "follow_group_thirdparty": {
                    "type": "string"
                },
                "follow_point_scheme": {
                    "type": "string"
                }
            }
        },
        "followv2.SetRequest": {
            "type": "object",
            "properties": {
                "merchant_follow_settings": {
                    "$ref": "#/definitions/followv2.MerchantFollowSettings"
                },
                "merchant_gcid": {
                    "type": "string",
                    "example": "merchant01"
                },
                "merchant_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                }
            }
        },
        "general.FieldError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Validation for 'email' failed on the 'email' tag"
                },
                "field": {
                    "type": "string",
                    "example": "email"
                },
                "rule": {
                    "type": "string",
                    "example": "email"
                }
            }
        },
        "general.ValidationError": {
            "type": "object",
            "properties": {
                "field_errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/general.FieldError"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_permissionv2.GrantRequest": {
            "type": "object",
            "properties": {
                "application_gcid": {
                    "type": "string",
                    "example": "app01"
                },
                "application_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "grant_permission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/permissionv2.GrantPermission"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_permissionv2.RemoveRequest": {
            "type": "object",
            "properties": {
                "application_gcid": {
                    "type": "string",
                    "example": "app01"
                },
                "application_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "remove_permission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/permissionv2.RemovePermission"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ActivatedPointLogics": {
            "type": "object",
            "properties": {
                "point_logic": {
                    "type": "string"
                },
                "point_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.CreditLogics": {
            "type": "object",
            "properties": {
                "credit_logic": {
                    "type": "string"
                },
                "credit_logic_activated": {
                    "type": "boolean"
                },
                "credit_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.DefaultRequest": {
            "type": "object",
            "properties": {
                "accepted_thirdparty_settings": {
                    "type": "boolean"
                },
                "application_gcid": {
                    "type": "string"
                },
                "application_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "barcode_settings": {
                    "type": "boolean"
                },
                "card_register_settings": {
                    "$ref": "#/definitions/settingv2.CardRegisterSettings"
                },
                "delete_after_read_settings": {
                    "type": "boolean"
                },
                "extended_filter_settings": {
                    "$ref": "#/definitions/settingv2.ExtendedFilterSettings"
                },
                "external_url_message_settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLMessageSettings"
                    }
                },
                "filter_settings": {
                    "type": "boolean"
                },
                "initiation_message_settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InitiationMessageSettings"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.DiscountLogics": {
            "type": "object",
            "properties": {
                "discount_logic": {
                    "type": "string"
                },
                "discount_logic_activated": {
                    "type": "boolean"
                },
                "discount_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLLogicActivated": {
            "type": "object",
            "properties": {
                "external_url_address": {
                    "type": "string"
                },
                "external_url_type": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLLogics": {
            "type": "object",
            "properties": {
                "external_url_logic": {
                    "type": "string"
                },
                "external_url_logic_activated": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLLogicActivated"
                    }
                },
                "external_url_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLMessageSettings": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "boolean"
                },
                "email_message": {
                    "type": "boolean"
                },
                "email_subject": {
                    "type": "boolean"
                },
                "initiation_type": {
                    "type": "string",
                    "enum": [
                        "invite",
                        "finance",
                        "survey",
                        "consent",
                        "insurance"
                    ],
                    "example": "invite"
                },
                "telephone_message": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLMessages": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "initiation_type": {
                    "type": "string"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.FilterSettings": {
            "type": "object",
            "properties": {
                "client_number_exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "global_filter_setting": {
                    "$ref": "#/definitions/settingv2.ResponseGlobalFilterSetting"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GlobalFilterSetting": {
            "type": "object",
            "properties": {
                "blacklist_all": {
                    "type": "boolean"
                },
                "whitelist_all": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GrantedPermissions": {
            "type": "object",
            "properties": {
                "client_number": {
                    "type": "string"
                },
                "trusted_third_party": {
                    "type": "boolean"
                },
                "user_lookup": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GrantingPermissions": {
            "type": "object",
            "properties": {
                "client_number": {
                    "type": "string"
                },
                "trusted_third_party": {
                    "type": "boolean"
                },
                "user_lookup": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InfoRequest": {
            "type": "object",
            "properties": {
                "application_gcid": {
                    "type": "string",
                    "example": "application01"
                },
                "application_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "logic_list": {
                    "type": "boolean"
                },
                "permission_list": {
                    "type": "boolean"
                },
                "service_activation": {
                    "type": "boolean"
                },
                "settings_list": {
                    "type": "boolean"
                },
                "share_data_number_list": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InfoResponse": {
            "type": "object",
            "properties": {
                "accepted_thirdparty_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "application_number": {
                    "type": "string"
                },
                "barcode_default_encoding": {
                    "type": "string"
                },
                "card_register_url": {
                    "$ref": "#/definitions/settingv2.CardRegisterURL"
                },
                "credit_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.CreditLogics"
                    }
                },
                "delete_receipt_object_after_read": {
                    "type": "boolean"
                },
                "discount_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.DiscountLogics"
                    }
                },
                "extended_filter": {
                    "$ref": "#/definitions/settingv2.ExtendedFilter"
                },
                "external_url_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLLogics"
                    }
                },
                "external_url_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLMessages"
                    }
                },
                "filter_settings": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.FilterSettings"
                },
                "granted_permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GrantedPermissions"
                    }
                },
                "granting_permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GrantingPermissions"
                    }
                },
                "initiation_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InitiationMessages"
                    }
                },
                "point_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.PointLogics"
                    }
                },
                "point_schemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.PointSchemes"
                    }
                },
                "service_activation": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ServiceActivation"
                },
                "share_data_objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ShareDataObjects"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InitiationMessageSettings": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "boolean"
                },
                "email_message": {
                    "type": "boolean"
                },
                "email_subject": {
                    "type": "boolean"
                },
                "initiation_type": {
                    "type": "string",
                    "enum": [
                        "discount",
                        "credit",
                        "create_point",
                        "add_point",
                        "invoice"
                    ],
                    "example": "discount"
                },
                "telephone_message": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InitiationMessages": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "initiation_type": {
                    "type": "string"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InputRequest": {
            "type": "object",
            "properties": {
                "application_gcid": {
                    "type": "string"
                },
                "application_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "set_accepted_thirdparty_values": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetAcceptedThirdpartyValues"
                },
                "set_barcode_default": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetBarcodeDefault"
                },
                "set_card_register_url": {
                    "$ref": "#/definitions/settingv2.SetCardRegisterURL"
                },
                "set_extended_filter": {
                    "$ref": "#/definitions/settingv2.SetExtendedFilter"
                },
                "set_external_url_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetExternalURLMessages"
                    }
                },
                "set_filter_settings": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetFilterSettings"
                },
                "set_initiation_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetInitiationMessages"
                    }
                },
                "set_receipt_storage_settings": {
                    "$ref": "#/definitions/settingv2.SetReceiptStorageSettings"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.PointLogics": {
            "type": "object",
            "properties": {
                "point_logic": {
                    "type": "string"
                },
                "point_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.PointSchemes": {
            "type": "object",
            "properties": {
                "activated_point_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ActivatedPointLogics"
                    }
                },
                "allow_create": {
                    "type": "boolean"
                },
                "assigned_scheme": {
                    "type": "boolean"
                },
                "point_scheme": {
                    "type": "string"
                },
                "point_scheme_name": {
                    "type": "string"
                },
                "set_public": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ServiceActivation": {
            "type": "object",
            "properties": {
                "caas": {
                    "type": "boolean"
                },
                "daas": {
                    "type": "boolean"
                },
                "edaas": {
                    "type": "boolean"
                },
                "evaas": {
                    "type": "boolean"
                },
                "iaas": {
                    "type": "boolean"
                },
                "psaas": {
                    "type": "boolean"
                },
                "raas": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetAcceptedThirdpartyValues": {
            "type": "object",
            "properties": {
                "add_accepted_thirdparty_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "remove_accepted_thirdparty_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetBarcodeDefault": {
            "type": "object",
            "properties": {
                "barcode_encoding": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetExternalURLMessages": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "initiation_type": {
                    "type": "string",
                    "enum": [
                        "invite",
                        "finance",
                        "survey",
                        "consent",
                        "insurance"
                    ],
                    "example": "invite"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetFilterSettings": {
            "type": "object",
            "properties": {
                "add_client_number_exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "global_filter_setting": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GlobalFilterSetting"
                },
                "remove_client_number_exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetInitiationMessages": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "initiation_type": {
                    "type": "string",
                    "enum": [
                        "discount",
                        "credit",
                        "create_point",
                        "add_point",
                        "invoice"
                    ],
                    "example": "discount"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ShareDataObjects": {
            "type": "object",
            "properties": {
                "share_data_number": {
                    "type": "string"
                },
                "share_data_number_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_permissionv2.GrantRequest": {
            "type": "object",
            "properties": {
                "grant_permission": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "client_number": {
                                "type": "string",
                                "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                            },
                            "trusted_third_party": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "merchant_gcid": {
                    "type": "string",
                    "example": "merchant01"
                },
                "merchant_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_permissionv2.RemoveRequest": {
            "type": "object",
            "properties": {
                "merchant_gcid": {
                    "type": "string",
                    "example": "merchant01"
                },
                "merchant_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "remove_permission": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "client_number": {
                                "type": "string",
                                "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                            },
                            "trusted_third_party": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ActivatedPointLogics": {
            "type": "object",
            "properties": {
                "point_logic": {
                    "type": "string"
                },
                "point_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.CreditLogics": {
            "type": "object",
            "properties": {
                "credit_logic": {
                    "type": "string"
                },
                "credit_logic_activated": {
                    "type": "boolean"
                },
                "credit_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.DefaultRequest": {
            "type": "object",
            "properties": {
                "accepted_thirdparty_settings": {
                    "type": "boolean"
                },
                "barcode_settings": {
                    "type": "boolean"
                },
                "delete_after_process_settings": {
                    "type": "boolean"
                },
                "external_url_message_settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLMessageSettings"
                    }
                },
                "filter_settings": {
                    "type": "boolean"
                },
                "initiation_message_settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InitiationMessageSettings"
                    }
                },
                "merchant_gcid": {
                    "type": "string",
                    "example": "merchant01"
                },
                "merchant_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "receipt_email_sms_settings": {
                    "$ref": "#/definitions/settingv2.ReceiptEmailSmsSettings"
                },
                "receipt_images": {
                    "$ref": "#/definitions/settingv2.ReceiptImages"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.DiscountLogics": {
            "type": "object",
            "properties": {
                "discount_logic": {
                    "type": "string"
                },
                "discount_logic_activated": {
                    "type": "boolean"
                },
                "discount_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLLogicActivated": {
            "type": "object",
            "properties": {
                "external_url_address": {
                    "type": "string"
                },
                "external_url_type": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLLogics": {
            "type": "object",
            "properties": {
                "external_url_logic": {
                    "type": "string"
                },
                "external_url_logic_activated": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLLogicActivated"
                    }
                },
                "external_url_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLMessageSettings": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "boolean"
                },
                "email_message": {
                    "type": "boolean"
                },
                "email_subject": {
                    "type": "boolean"
                },
                "initiation_type": {
                    "type": "string",
                    "enum": [
                        "invite",
                        "finance",
                        "survey",
                        "consent",
                        "insurance"
                    ],
                    "example": "invite"
                },
                "telephone_message": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLMessages": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "initiation_type": {
                    "type": "string"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.FilterSettings": {
            "type": "object",
            "properties": {
                "client_number_exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "global_filter_setting": {
                    "$ref": "#/definitions/settingv2.InfoGlobalFilterSetting"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GlobalFilterSetting": {
            "type": "object",
            "properties": {
                "blacklist_all": {
                    "type": "boolean"
                },
                "whitelist_all": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GrantedPermissions": {
            "type": "object",
            "properties": {
                "client_number": {
                    "type": "string"
                },
                "trusted_third_party": {
                    "type": "boolean"
                },
                "user_lookup": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GrantingPermissions": {
            "type": "object",
            "properties": {
                "client_number": {
                    "type": "string"
                },
                "trusted_third_party": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InfoRequest": {
            "type": "object",
            "properties": {
                "follow_policy": {
                    "type": "boolean"
                },
                "logic_list": {
                    "type": "boolean"
                },
                "merchant_gcid": {
                    "type": "string",
                    "example": "merchant01"
                },
                "merchant_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "permission_list": {
                    "type": "boolean"
                },
                "raw_receipt_list": {
                    "type": "boolean"
                },
                "service_activation": {
                    "type": "boolean"
                },
                "settings_list": {
                    "type": "boolean"
                },
                "share_data_number_list": {
                    "type": "boolean"
                },
                "sharing_policy": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InfoResponse": {
            "type": "object",
            "properties": {
                "accepted_thirdparty_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "assigned_to_brand": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "barcode_default_encoding": {
                    "type": "string"
                },
                "credit_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.CreditLogics"
                    }
                },
                "delete_receipt_object_after_processing": {
                    "type": "boolean"
                },
                "discount_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.DiscountLogics"
                    }
                },
                "external_url_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLLogics"
                    }
                },
                "external_url_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLMessages"
                    }
                },
                "filter_settings": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.FilterSettings"
                },
                "follow_policy": {
                    "$ref": "#/definitions/settingv2.FollowPolicy"
                },
                "granted_permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GrantedPermissions"
                    }
                },
                "granting_permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GrantingPermissions"
                    }
                },
                "initiation_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InitiationMessages"
                    }
                },
                "merchant_number": {
                    "type": "string"
                },
                "point_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.PointLogics"
                    }
                },
                "point_schemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.PointSchemes"
                    }
                },
                "raw_receipt_input_examples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/settingv2.RawReceiptInputExamples"
                    }
                },
                "raw_receipt_templates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/settingv2.RawReceiptTemplates"
                    }
                },
                "receipt_email_sms_message": {
                    "$ref": "#/definitions/settingv2.ReceiptEmailSmsMessage"
                },
                "receipt_images": {
                    "$ref": "#/definitions/settingv2.InfoReceiptImages"
                },
                "service_activation": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ServiceActivation"
                },
                "share_data_objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ShareDataObjects"
                    }
                },
                "sharing_policy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/settingv2.SharingPolicy"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InitiationMessageSettings": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "boolean"
                },
                "email_message": {
                    "type": "boolean"
                },
                "email_subject": {
                    "type": "boolean"
                },
                "initiation_type": {
                    "type": "string",
                    "enum": [
                        "discount",
                        "credit",
                        "create_point",
                        "add_point",
                        "invoice"
                    ],
                    "example": "discount"
                },
                "telephone_message": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InitiationMessages": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "initiation_type": {
                    "type": "string"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InputRequest": {
            "type": "object",
            "properties": {
                "merchant_gcid": {
                    "type": "string",
                    "example": "merchant01"
                },
                "merchant_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "set_accepted_thirdparty_values": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetAcceptedThirdpartyValues"
                },
                "set_barcode_default": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetBarcodeDefault"
                },
                "set_delete_receipt_object_after_processing": {
                    "type": "boolean"
                },
                "set_external_url_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetExternalURLMessages"
                    }
                },
                "set_filter_settings": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetFilterSettings"
                },
                "set_initiation_messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetInitiationMessages"
                    }
                },
                "set_receipt_email_sms_message": {
                    "$ref": "#/definitions/settingv2.SetReceiptEmailSmsMessage"
                },
                "set_receipt_images": {
                    "$ref": "#/definitions/settingv2.SetReceiptImages"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.PointLogics": {
            "type": "object",
            "properties": {
                "point_logic": {
                    "type": "string"
                },
                "point_logic_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.PointSchemes": {
            "type": "object",
            "properties": {
                "activated_point_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ActivatedPointLogics"
                    }
                },
                "allow_create": {
                    "type": "boolean"
                },
                "assigned_scheme": {
                    "type": "boolean"
                },
                "point_scheme": {
                    "type": "string"
                },
                "point_scheme_name": {
                    "type": "string"
                },
                "set_public": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ServiceActivation": {
            "type": "object",
            "properties": {
                "caas": {
                    "type": "boolean"
                },
                "daas": {
                    "type": "boolean"
                },
                "edaas": {
                    "type": "boolean"
                },
                "evaas": {
                    "type": "boolean"
                },
                "iaas": {
                    "type": "boolean"
                },
                "psaas": {
                    "type": "boolean"
                },
                "raas": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetAcceptedThirdpartyValues": {
            "type": "object",
            "properties": {
                "add_accepted_thirdparty_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "remove_accepted_thirdparty_strings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetBarcodeDefault": {
            "type": "object",
            "properties": {
                "barcode_encoding": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetExternalURLMessages": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "initiation_type": {
                    "type": "string",
                    "enum": [
                        "invite",
                        "finance",
                        "survey",
                        "consent",
                        "insurance"
                    ],
                    "example": "invite"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetFilterSettings": {
            "type": "object",
            "properties": {
                "add_client_number_exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "global_filter_setting": {
                    "$ref": "#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GlobalFilterSetting"
                },
                "remove_client_number_exceptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetInitiationMessages": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "initiation_type": {
                    "type": "string",
                    "enum": [
                        "discount",
                        "credit",
                        "create_point",
                        "add_point",
                        "invoice"
                    ],
                    "example": "discount"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ShareDataObjects": {
            "type": "object",
            "properties": {
                "share_data_number": {
                    "type": "string"
                },
                "share_data_number_name": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_receiptv2_appuser_fetch.TimestampRequest": {
            "type": "object",
            "properties": {
                "all_data": {
                    "$ref": "#/definitions/fetch.AllData"
                },
                "only_transnrs": {
                    "type": "boolean"
                },
                "provider_gcid": {
                    "type": "string"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_receiptv2_appuser_fetch.TransactionNumberRequest": {
            "type": "object",
            "properties": {
                "provider_gcid": {
                    "type": "string"
                },
                "zeipt_receipt_transnrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_receiptv2_merchant_fetch.TimestampRequest": {
            "type": "object",
            "properties": {
                "all_data": {
                    "$ref": "#/definitions/fetch.AllData"
                },
                "merchant_gcid": {
                    "type": "string"
                },
                "only_transnrs": {
                    "type": "boolean"
                }
            }
        },
        "github.com_zeipts_monolith_v2_models_receiptv2_merchant_fetch.TransactionNumberRequest": {
            "type": "object",
            "properties": {
                "merchant_gcid": {
                    "type": "string"
                },
                "zeipt_receipt_transnrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "identificationv2.BankAccount": {
            "type": "object",
            "properties": {
                "bank_account_number": {
                    "type": "string"
                },
                "zeipt_bank_account_transnr": {
                    "type": "string"
                }
            }
        },
        "identificationv2.BankAccountToken": {
            "type": "object",
            "properties": {
                "bank_account_token": {
                    "type": "string"
                },
                "token_provider": {
                    "type": "string"
                },
                "zeipt_bank_account_transnr": {
                    "type": "string"
                }
            }
        },
        "identificationv2.Card": {
            "type": "object",
            "properties": {
                "card_type": {
                    "type": "string"
                },
                "last_digits": {
                    "type": "string"
                },
                "token_expiration_date": {
                    "type": "string"
                },
                "token_provider": {
                    "type": "string",
                    "enum": [
                        "verifone",
                        "nets"
                    ]
                },
                "zeipt_card_token": {
                    "type": "string"
                },
                "zeipt_card_transnr": {
                    "type": "string"
                }
            }
        },
        "identificationv2.DeleteRequest": {
            "type": "object",
            "required": [
                "provider_gcid"
            ],
            "properties": {
                "custom_customer_reference": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "delete_all_bank_accounts": {
                    "type": "boolean"
                },
                "delete_all_cards": {
                    "type": "boolean"
                },
                "delete_all_custom_customer_references": {
                    "type": "boolean"
                },
                "delete_all_emails": {
                    "type": "boolean"
                },
                "delete_all_telephones": {
                    "type": "boolean"
                },
                "email_addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider_gcid": {
                    "type": "string",
                    "example": "user_1"
                },
                "telephones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/identificationv2.Telephone"
                    }
                },
                "zeipt_bank_account_transnr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zeipt_card_transnr": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "identificationv2.RegisterRequest": {
            "type": "object",
            "required": [
                "provider_gcid"
            ],
            "properties": {
                "bank_account": {
                    "$ref": "#/definitions/identificationv2.BankAccount"
                },
                "bank_account_token": {
                    "$ref": "#/definitions/identificationv2.BankAccountToken"
                },
                "card": {
                    "$ref": "#/definitions/identificationv2.Card"
                },
                "custom_customer_reference": {
                    "type": "string"
                },
                "dynamic_customer_reference": {
                    "type": "boolean"
                },
                "email_address": {
                    "type": "string",
                    "format": "email",
                    "example": "useremail@example.com"
                },
                "generate_custom_customer_reference": {
                    "type": "boolean"
                },
                "provider_gcid": {
                    "type": "string",
                    "example": "user_1"
                },
                "telephone": {
                    "$ref": "#/definitions/identificationv2.Telephone"
                }
            }
        },
        "identificationv2.RegisterResponse": {
            "type": "object",
            "properties": {
                "bank_account": {
                    "$ref": "#/definitions/identificationv2.ResponseBankAccount"
                },
                "bank_account_token": {
                    "$ref": "#/definitions/identificationv2.ResponseBankAccountToken"
                },
                "custom_customer_reference": {
                    "type": "string"
                },
                "dynamic_customer_reference": {
                    "type": "string"
                },
                "zeipt_card_transnr": {
                    "type": "string"
                }
            }
        },
        "identificationv2.ResponseBankAccount": {
            "type": "object",
            "properties": {
                "zeipt_bank_account_transnr": {
                    "type": "string"
                }
            }
        },
        "identificationv2.ResponseBankAccountToken": {
            "type": "object",
            "properties": {
                "zeipt_bank_account_transnr": {
                    "type": "string"
                }
            }
        },
        "identificationv2.Telephone": {
            "type": "object",
            "properties": {
                "country_calling_code": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "invite.Permission": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ulid": {
                    "type": "string"
                }
            }
        },
        "invite.PostResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "ulid": {
                    "type": "string"
                }
            }
        },
        "invite.Request": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "client_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "123",
                        "456",
                        "01G2ZG7JXDZZCRBC6X7CDAYY0Q"
                    ]
                },
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "useremail@example.com"
                },
                "permission_ids": {
                    "description": "Permission and client ids can be strings or ints",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "123",
                        "456",
                        "01G2ZG7JXDZZCRBC6X7CDAYY0Q"
                    ]
                },
                "provider_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "123",
                        "456",
                        "01G2ZG7JXDZZCRBC6X7CDAYY0Q"
                    ]
                },
                "role_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "123",
                        "456",
                        "01G2ZG7JXDZZCRBC6X7CDAYY0Q"
                    ]
                }
            }
        },
        "invite.ResponseData": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string",
                    "example": "received"
                },
                "client_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 8493
                },
                "organization_name": {
                    "type": "string"
                },
                "organization_number": {
                    "type": "string"
                },
                "organization_suffix": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invite.Permission"
                    }
                },
                "provider_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "01FK07P4QC26RMKYBA77XA0W1X"
                    ]
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invite.Role"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "pending"
                },
                "token": {
                    "type": "string"
                },
                "token_created": {
                    "type": "string"
                },
                "ulid": {
                    "type": "string",
                    "example": "01FK07P4QC26RMKYBA77XA0W1X"
                }
            }
        },
        "invite.Role": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "ulid": {
                    "type": "string"
                }
            }
        },
        "invite.UpdateRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "enum": [
                        "accepted",
                        "declined"
                    ],
                    "example": "accepted"
                }
            }
        },
        "locationv2.Response": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Øvre Slottsgate 18"
                },
                "city": {
                    "type": "string",
                    "example": "Oslo"
                },
                "coords": {
                    "description": "0 is Longitude, 1 is Latitude",
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "example": [
                        10.74274,
                        59.91318
                    ]
                },
                "country_code": {
                    "type": "string",
                    "example": "NO"
                },
                "id": {
                    "type": "integer",
                    "example": 6786
                },
                "identification_levels": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2
                    ]
                },
                "settings": {
                    "description": "The filter settings of the retailer, if there are any whitelisted or blacklisted applications and the application_numbers of these",
                    "$ref": "#/definitions/locationv2.Settings"
                },
                "store_name": {
                    "type": "string",
                    "example": "Sebastian's Gulebøjer"
                },
                "zip_code": {
                    "type": "string",
                    "example": "0157"
                }
            }
        },
        "locationv2.Settings": {
            "type": "object",
            "properties": {
                "exceptions_to_global_filter": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "81945843-f79e-412b-af80-8f7bda69c5ae",
                        "81945855-f79e-412b-af80-8f7bda69c5ae"
                    ]
                },
                "global_filter_whitelist_all": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "logicv2.ActivateRequest": {
            "type": "object",
            "required": [
                "discount_logic"
            ],
            "properties": {
                "client": {
                    "$ref": "#/definitions/logicv2.Client"
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "discount_logic": {
                    "type": "string",
                    "example": "01AN4Z07BY79KA1307SR9X4MV3"
                }
            }
        },
        "logicv2.ArtFinalPriceTriggers": {
            "type": "object",
            "properties": {
                "above_art_final_price": {
                    "type": "integer"
                },
                "total_currency": {
                    "type": "string"
                }
            }
        },
        "logicv2.BarCode": {
            "type": "object",
            "properties": {
                "display_value": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string"
                }
            }
        },
        "logicv2.Client": {
            "type": "object",
            "properties": {
                "client_gcid": {
                    "type": "string"
                },
                "client_type": {
                    "type": "string",
                    "enum": [
                        "merchant",
                        "application",
                        "brand"
                    ],
                    "example": "merchant"
                }
            }
        },
        "logicv2.CreateRequest": {
            "type": "object",
            "required": [
                "discount_logic_name"
            ],
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "client": {
                    "$ref": "#/definitions/logicv2.Client"
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "discount_logic_name": {
                    "type": "string",
                    "example": "logic01"
                },
                "triggers": {
                    "$ref": "#/definitions/logicv2.Triggers"
                },
                "view_text": {
                    "type": "string"
                },
                "view_title": {
                    "type": "string"
                },
                "write_logic": {
                    "$ref": "#/definitions/logicv2.WriteLogic"
                }
            }
        },
        "logicv2.DeactivateRequest": {
            "type": "object",
            "required": [
                "discount_logic"
            ],
            "properties": {
                "client": {
                    "$ref": "#/definitions/logicv2.Client"
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "discount_logic": {
                    "type": "string",
                    "example": "01AN4Z07BY79KA1307SR9X4MV3"
                }
            }
        },
        "logicv2.DeleteRequest": {
            "type": "object",
            "required": [
                "discount_logic"
            ],
            "properties": {
                "client": {
                    "$ref": "#/definitions/logicv2.Client"
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "discount_logic": {
                    "type": "string",
                    "example": "01AN4Z07BY79KA1307SR9X4MV3"
                }
            }
        },
        "logicv2.FetchRequest": {
            "type": "object",
            "required": [
                "discount_logic"
            ],
            "properties": {
                "client": {
                    "$ref": "#/definitions/logicv2.Client"
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "discount_logic": {
                    "type": "string",
                    "example": "01AN4Z07BY79KA1307SR9X4MV3"
                }
            }
        },
        "logicv2.FetchResponse": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "discount_logic_name": {
                    "type": "string"
                },
                "triggers": {
                    "$ref": "#/definitions/logicv2.Triggers"
                },
                "view_text": {
                    "type": "string"
                },
                "view_title": {
                    "type": "string"
                },
                "write_logic": {
                    "$ref": "#/definitions/logicv2.WriteLogic"
                }
            }
        },
        "logicv2.FinalPriceTriggers": {
            "type": "object",
            "properties": {
                "above_final_price": {
                    "type": "integer"
                },
                "total_currency": {
                    "type": "string"
                }
            }
        },
        "logicv2.GeneralTriggers": {
            "type": "object",
            "properties": {
                "art_final_price_triggers": {
                    "$ref": "#/definitions/logicv2.ArtFinalPriceTriggers"
                },
                "art_quantity": {
                    "type": "integer"
                },
                "art_quantity_objects": {
                    "type": "integer"
                },
                "final_price_triggers": {
                    "$ref": "#/definitions/logicv2.FinalPriceTriggers"
                }
            }
        },
        "logicv2.TimestampTrigger": {
            "type": "object",
            "properties": {
                "after_time_of_day": {
                    "type": "string"
                },
                "before_time_of_day": {
                    "type": "string"
                }
            }
        },
        "logicv2.Triggers": {
            "type": "object",
            "properties": {
                "all_of_article_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "any_of_article_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "general_triggers": {
                    "$ref": "#/definitions/logicv2.GeneralTriggers"
                },
                "payment_method_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp_trigger": {
                    "$ref": "#/definitions/logicv2.TimestampTrigger"
                }
            }
        },
        "logicv2.UpdateRequest": {
            "type": "object",
            "required": [
                "discount_logic",
                "discount_logic_name"
            ],
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "client": {
                    "$ref": "#/definitions/logicv2.Client"
                },
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "discount_logic": {
                    "type": "string",
                    "example": "01AN4Z07BY79KA1307SR9X4MV3"
                },
                "discount_logic_name": {
                    "type": "string",
                    "example": "logic01"
                },
                "triggers": {
                    "$ref": "#/definitions/logicv2.Triggers"
                },
                "view_text": {
                    "type": "string"
                },
                "view_title": {
                    "type": "string"
                },
                "write_logic": {
                    "$ref": "#/definitions/logicv2.WriteLogic"
                }
            }
        },
        "logicv2.WriteLogic": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "art_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "background_image_uri": {
                    "type": "string"
                },
                "bar_code": {
                    "$ref": "#/definitions/logicv2.BarCode"
                },
                "box_image_uri": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "discount_logic": {
                    "type": "string"
                },
                "html_template": {
                    "type": "string"
                },
                "percentage": {
                    "type": "integer"
                },
                "thumbnail_uri": {
                    "type": "string"
                },
                "ttl_in_minutes": {
                    "type": "integer"
                }
            }
        },
        "monolith.echoResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Welcome to Zeipt services"
                }
            }
        },
        "permissions.Permission": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ulid": {
                    "type": "string"
                }
            }
        },
        "permissionv2.GrantPermission": {
            "type": "object",
            "properties": {
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "trusted_third_party": {
                    "type": "boolean"
                },
                "user_lookup": {
                    "type": "boolean"
                }
            }
        },
        "permissionv2.RemovePermission": {
            "type": "object",
            "properties": {
                "client_number": {
                    "type": "string",
                    "example": "81945843-f79e-412b-af80-8f7bda69c5ae"
                },
                "trusted_third_party": {
                    "type": "boolean"
                },
                "user_lookup": {
                    "type": "boolean"
                }
            }
        },
        "receipt.CreateRequest": {
            "type": "object",
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Article"
                    }
                },
                "customer_deliveries": {
                    "description": "TODO validation at least 1 MISSING CUSTOMER Value",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.CustomerDelivery"
                    }
                },
                "extended_receipt_logic": {
                    "$ref": "#/definitions/receiptv2.ExtendedLogic"
                },
                "extra_receipt_view": {
                    "$ref": "#/definitions/receiptv2.ExtraView"
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Invoice"
                    }
                },
                "merchant": {
                    "$ref": "#/definitions/receiptv2.Merchant"
                },
                "payments": {
                    "description": "TODO at least one payment or invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Payment"
                    }
                },
                "total": {
                    "$ref": "#/definitions/receiptv2.Total"
                }
            }
        },
        "receiptv2.AddSchemePoint": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "no_addition": {
                    "type": "boolean"
                },
                "point_scheme": {
                    "type": "string"
                },
                "points": {
                    "type": "number",
                    "minimum": 0
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Addition": {
            "type": "object",
            "properties": {
                "total_recycling": {
                    "type": "number",
                    "minimum": 0
                },
                "total_tip": {
                    "type": "number",
                    "minimum": 0
                },
                "total_vat": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "receiptv2.Addition2": {
            "type": "object",
            "properties": {
                "art_recycling_fee": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity_recycling_fee": {
                    "type": "number",
                    "minimum": 0
                },
                "vat_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.VatGroup"
                    }
                }
            }
        },
        "receiptv2.ArtOriginalValues": {
            "type": "object",
            "properties": {
                "art_original_price": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity_original_price": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "receiptv2.Article": {
            "type": "object",
            "required": [
                "art_final_price"
            ],
            "properties": {
                "additions": {
                    "$ref": "#/definitions/receiptv2.Addition2"
                },
                "art_description": {
                    "type": "string"
                },
                "art_final_price": {
                    "type": "number",
                    "minimum": 0
                },
                "art_name": {
                    "type": "string"
                },
                "art_number": {
                    "type": "string"
                },
                "art_original_values": {
                    "$ref": "#/definitions/receiptv2.ArtOriginalValues"
                },
                "art_price_with_vat": {
                    "type": "number",
                    "minimum": 0
                },
                "art_price_without_vat": {
                    "type": "number",
                    "minimum": 0
                },
                "art_saft_articlegroup_id": {
                    "type": "string"
                },
                "bar_codes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.BarCodeWithValue"
                    }
                },
                "button_text": {
                    "type": "string"
                },
                "credit": {
                    "$ref": "#/definitions/receiptv2.Credit"
                },
                "geographic": {
                    "$ref": "#/definitions/receiptv2.Geographic"
                },
                "html_styling": {
                    "type": "string"
                },
                "marketing_text": {
                    "type": "string"
                },
                "merchant_reference": {
                    "type": "string"
                },
                "merchant_sorting": {
                    "type": "string"
                },
                "quantity": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity_final_price": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity_price_with_vat": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity_price_without_vat": {
                    "type": "number",
                    "minimum": 0
                },
                "quantity_type": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 1
                },
                "reference_of_origin": {
                    "$ref": "#/definitions/receiptv2.ReferenceOfOrigin"
                },
                "return": {
                    "type": "boolean"
                },
                "specified": {
                    "$ref": "#/definitions/receiptv2.Specified"
                },
                "subtractions": {
                    "$ref": "#/definitions/receiptv2.Subtraction"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "credit",
                        "ticket"
                    ]
                }
            }
        },
        "receiptv2.AssignedCredit": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "amount_remaining": {
                    "type": "number",
                    "minimum": 0
                },
                "logic": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "ticket": {
                    "type": "boolean"
                }
            }
        },
        "receiptv2.AssignedReferences": {
            "type": "object",
            "properties": {
                "credits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.AssignedCredit"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Discount5"
                    }
                },
                "point_schemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.PointScheme2"
                    }
                }
            }
        },
        "receiptv2.BarCodeWithValue": {
            "type": "object",
            "required": [
                "encoding",
                "value"
            ],
            "properties": {
                "display_value": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string",
                    "enum": [
                        "code_128",
                        "code_39",
                        "ean_13",
                        "ean_8",
                        "interleaved_2_of_5",
                        "qr"
                    ]
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "receiptv2.CompanyBuyer": {
            "type": "object",
            "properties": {
                "company_common_name": {
                    "type": "string"
                },
                "company_country_code": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "company_number": {
                    "type": "string"
                },
                "company_suffix": {
                    "type": "string"
                }
            }
        },
        "receiptv2.ContactInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "telephone": {
                    "$ref": "#/definitions/receiptv2.Phone"
                },
                "website": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "receiptv2.CreatePointScheme": {
            "type": "object",
            "properties": {
                "allready_created": {
                    "type": "boolean"
                },
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bar_code": {
                    "$ref": "#/definitions/receiptv2.BarCodeWithValue"
                },
                "point_scheme": {
                    "type": "string"
                },
                "points": {
                    "type": "number",
                    "minimum": 0
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.CreatePointScheme2": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "button_text": {
                    "type": "string"
                },
                "generate": {
                    "type": "boolean"
                },
                "html_styling": {
                    "type": "string"
                },
                "marketing_text": {
                    "type": "string"
                },
                "merchant_reference": {
                    "type": "string"
                },
                "merchant_sorting": {
                    "type": "string"
                },
                "point_scheme": {
                    "type": "string"
                },
                "points": {
                    "type": "number",
                    "minimum": 0
                },
                "points_name": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Credit": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generate": {
                    "type": "boolean"
                },
                "logic": {
                    "type": "string"
                }
            }
        },
        "receiptv2.CreditReference": {
            "type": "object",
            "properties": {
                "bar_code": {
                    "$ref": "#/definitions/receiptv2.BarCodeWithValue"
                },
                "credit_logic": {
                    "type": "string"
                },
                "logic_group": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "ticket": {
                    "type": "boolean"
                },
                "ticket_reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.CreditWithBarCodeValue": {
            "type": "object",
            "properties": {
                "bar_code_value": {
                    "type": "string"
                },
                "logic": {
                    "type": "string"
                },
                "merchant_reference": {
                    "type": "string"
                },
                "merchant_sorting": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.CustomerBuyer": {
            "type": "object",
            "properties": {
                "customer_first_name": {
                    "type": "string"
                },
                "customer_surname": {
                    "type": "string"
                },
                "customer_telephone": {
                    "$ref": "#/definitions/receiptv2.Phone"
                }
            }
        },
        "receiptv2.CustomerDelivery": {
            "type": "object",
            "properties": {
                "application_number": {
                    "type": "string"
                },
                "custom_customer_reference": {
                    "type": "string"
                },
                "email": {
                    "$ref": "#/definitions/receiptv2.Email"
                },
                "payment_medium_reference": {
                    "$ref": "#/definitions/receiptv2.PaymentMediumReference"
                },
                "telephone": {
                    "$ref": "#/definitions/receiptv2.PhoneWithSMS"
                }
            }
        },
        "receiptv2.Discount3": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "art_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bar_code": {
                    "$ref": "#/definitions/receiptv2.BarCodeWithValue"
                },
                "button_text": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "generate": {
                    "type": "boolean"
                },
                "html_styling": {
                    "type": "string"
                },
                "logic": {
                    "type": "string"
                },
                "marketing_text": {
                    "type": "string"
                },
                "merchant_reference": {
                    "type": "string"
                },
                "merchant_sorting": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "receiptv2.Discount4": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "cashier_reference": {
                    "type": "string"
                },
                "logic_group": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number",
                    "minimum": 0
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Discount5": {
            "type": "object",
            "properties": {
                "logic_group": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Discount6": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bar_code": {
                    "$ref": "#/definitions/receiptv2.GeneratedBarCode"
                },
                "discount_logic": {
                    "type": "string"
                },
                "logic_group": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Email": {
            "type": "object",
            "required": [
                "email_address"
            ],
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "email_delivery": {
                    "type": "boolean"
                }
            }
        },
        "receiptv2.ExtendedLogic": {
            "type": "object",
            "properties": {
                "add_scheme_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.PointScheme"
                    }
                },
                "create_point_scheme": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.CreatePointScheme2"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Discount3"
                    }
                },
                "external_view_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.ExternalViewLogic"
                    }
                }
            }
        },
        "receiptv2.ExtendedObject": {
            "type": "object",
            "properties": {
                "add_scheme_points": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.AddSchemePoint"
                    }
                },
                "create_point_scheme": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.CreatePointScheme"
                    }
                },
                "credits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.ResponseCredit"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Discount6"
                    }
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Invoice2"
                    }
                }
            }
        },
        "receiptv2.ExtendedReference": {
            "type": "object",
            "required": [
                "extended_object_type",
                "reference"
            ],
            "properties": {
                "extended_object_type": {
                    "type": "string",
                    "enum": [
                        "discount",
                        "credit",
                        "create_point",
                        "add_point",
                        "invoice"
                    ]
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.ExtendedViewLogic": {
            "type": "object",
            "properties": {
                "add_scheme_points": {
                    "$ref": "#/definitions/receiptv2.PointScheme2"
                },
                "create_point_scheme": {
                    "$ref": "#/definitions/receiptv2.PointScheme3"
                },
                "credit_logic": {
                    "type": "string"
                },
                "discount_logic": {
                    "type": "string"
                },
                "external_url_address": {
                    "type": "string"
                },
                "external_url_type": {
                    "type": "string"
                },
                "share_data_number": {
                    "type": "string"
                }
            }
        },
        "receiptv2.ExternalViewLogic": {
            "type": "object",
            "required": [
                "logic"
            ],
            "properties": {
                "add_scheme_points": {
                    "$ref": "#/definitions/receiptv2.PointSchemeWithReference"
                },
                "logic": {
                    "type": "string"
                }
            }
        },
        "receiptv2.ExtraSumValue": {
            "type": "object",
            "properties": {
                "final_price_rounded": {
                    "type": "number",
                    "minimum": 0
                },
                "total_discount": {
                    "type": "number",
                    "minimum": 0
                },
                "total_return": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "receiptv2.ExtraView": {
            "type": "object",
            "properties": {
                "bar_code": {
                    "$ref": "#/definitions/receiptv2.BarCodeWithValue"
                },
                "cashier_goodbye_message": {
                    "type": "string",
                    "maxLength": 200
                },
                "company_buyers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.CompanyBuyer"
                    }
                },
                "customer_buyers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.CustomerBuyer"
                    }
                },
                "opening_hours": {
                    "type": "string",
                    "maxLength": 200
                },
                "operator_id": {
                    "type": "string"
                },
                "operator_name": {
                    "type": "string"
                },
                "operator_text": {
                    "type": "string",
                    "maxLength": 200
                },
                "return_policy": {
                    "$ref": "#/definitions/receiptv2.ReturnPolicy"
                },
                "seller_id": {
                    "type": "string"
                },
                "seller_name": {
                    "type": "string"
                }
            }
        },
        "receiptv2.GeneratedBarCode": {
            "type": "object",
            "properties": {
                "display_value": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string"
                },
                "generated_by_zeipt": {
                    "type": "boolean"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Geographic": {
            "type": "object",
            "properties": {
                "arrival_reference": {
                    "type": "string"
                },
                "departure_reference": {
                    "type": "string"
                },
                "distance_value": {
                    "type": "number",
                    "minimum": 0
                },
                "distance_value_definition": {
                    "type": "string",
                    "enum": [
                        "km",
                        "mi"
                    ]
                },
                "end_location": {
                    "$ref": "#/definitions/receiptv2.Location"
                },
                "start_location": {
                    "$ref": "#/definitions/receiptv2.Location"
                }
            }
        },
        "receiptv2.InviteItem": {
            "type": "object",
            "required": [
                "one_time_key"
            ],
            "properties": {
                "custom_customer_references": {
                    "type": "boolean"
                },
                "emails": {
                    "type": "boolean"
                },
                "one_time_key": {
                    "type": "string",
                    "example": "01AN4Z07BY79KA1307SR9X4MV3"
                },
                "payment_medium_references": {
                    "type": "boolean"
                },
                "telephones": {
                    "type": "boolean"
                }
            }
        },
        "receiptv2.Invoice": {
            "type": "object",
            "required": [
                "account_number",
                "due_date",
                "invoice_number"
            ],
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "button_text": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "due_date": {
                    "type": "string"
                },
                "generate": {
                    "type": "boolean"
                },
                "html_styling": {
                    "type": "string"
                },
                "invoice_number": {
                    "type": "string"
                },
                "marketing_text": {
                    "type": "string"
                },
                "national_customer_invoice_number": {
                    "type": "string"
                },
                "payment_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "seller": {
                    "$ref": "#/definitions/receiptv2.Seller"
                },
                "vat_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "vat_percentage": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "receiptv2.Invoice2": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "invoice_number": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Location": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country_code": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "receiptv2.LookupRequest": {
            "type": "object",
            "properties": {
                "application_number": {
                    "type": "string"
                },
                "custom_customer_reference": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "issuer": {
                    "type": "string"
                },
                "merchant_gcid": {
                    "type": "string"
                },
                "payment_medium_reference": {
                    "$ref": "#/definitions/receiptv2.PaymentMediumReference"
                },
                "telephone": {
                    "$ref": "#/definitions/receiptv2.Phone"
                }
            }
        },
        "receiptv2.LookupResponse": {
            "type": "object",
            "properties": {
                "identification_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "receiptv2.Merchant": {
            "type": "object",
            "required": [
                "merchant_country_code",
                "merchant_gcid",
                "org_number"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "merchant_country_code": {
                    "type": "string"
                },
                "merchant_gcid": {
                    "type": "string"
                },
                "org_number": {
                    "type": "string"
                },
                "purchase_location": {
                    "$ref": "#/definitions/receiptv2.PurchaseLocation"
                },
                "telephone": {
                    "$ref": "#/definitions/receiptv2.Phone"
                },
                "travel_reference": {
                    "$ref": "#/definitions/receiptv2.TravelReference"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "receiptv2.OneTimeKeys": {
            "type": "object",
            "required": [
                "otk",
                "otk_type"
            ],
            "properties": {
                "otk": {
                    "type": "string"
                },
                "otk_type": {
                    "type": "string",
                    "enum": [
                        "invite",
                        "finance",
                        "survey",
                        "consent",
                        "insurance"
                    ]
                }
            }
        },
        "receiptv2.Payment": {
            "type": "object",
            "required": [
                "payment_method",
                "timestamp"
            ],
            "properties": {
                "aid_nr": {
                    "type": "string"
                },
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "bank_terminal_id": {
                    "type": "string"
                },
                "credit": {
                    "$ref": "#/definitions/receiptv2.CreditWithBarCodeValue"
                },
                "currency": {
                    "type": "string"
                },
                "exchange_rate": {
                    "type": "number",
                    "minimum": 0
                },
                "identification": {
                    "type": "boolean"
                },
                "issuer": {
                    "type": "string"
                },
                "masked_pan": {
                    "type": "string"
                },
                "moneyback": {
                    "type": "boolean"
                },
                "national_merchant_number": {
                    "type": "string"
                },
                "payment_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "payment_method": {
                    "type": "string",
                    "enum": [
                        "credit_card",
                        "debit_card",
                        "cash",
                        "credit_bank",
                        "debit_bank",
                        "own_defined"
                    ]
                },
                "payment_method_owner": {
                    "type": "string"
                },
                "payment_method_type": {
                    "type": "string",
                    "enum": [
                        "bankaxept",
                        "visa",
                        "mastercard",
                        "amex",
                        "point_scheme",
                        "gift_card",
                        "other"
                    ]
                },
                "point_scheme": {
                    "$ref": "#/definitions/receiptv2.PaymentPointScheme"
                },
                "ref_nr": {
                    "type": "string"
                },
                "response_code": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "tip_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "tsi_nr": {
                    "type": "string"
                },
                "tvr_nr": {
                    "type": "string"
                }
            }
        },
        "receiptv2.PaymentMediumReference": {
            "type": "object",
            "properties": {
                "token_provider": {
                    "type": "string"
                },
                "zeipt_card_token": {
                    "type": "string"
                }
            }
        },
        "receiptv2.PaymentPointScheme": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "merchant_reference": {
                    "type": "string"
                },
                "merchant_sorting": {
                    "type": "string"
                },
                "point_scheme": {
                    "type": "string"
                },
                "points": {
                    "type": "number",
                    "minimum": 0
                },
                "points_name": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Phone": {
            "type": "object",
            "properties": {
                "country_calling_code": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "receiptv2.PhoneWithSMS": {
            "type": "object",
            "properties": {
                "country_calling_code": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "sms_delivery": {
                    "type": "boolean"
                }
            }
        },
        "receiptv2.PointScheme": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "button_text": {
                    "type": "string"
                },
                "generate": {
                    "type": "boolean"
                },
                "html_styling": {
                    "type": "string"
                },
                "marketing_text": {
                    "type": "string"
                },
                "merchant_reference": {
                    "type": "string"
                },
                "merchant_sorting": {
                    "type": "string"
                },
                "point_scheme": {
                    "type": "string"
                },
                "points": {
                    "type": "number",
                    "minimum": 0
                },
                "points_name": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.PointScheme2": {
            "type": "object",
            "properties": {
                "point_scheme": {
                    "type": "string"
                },
                "points": {
                    "type": "number",
                    "minimum": 0
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.PointScheme3": {
            "type": "object",
            "properties": {
                "point_scheme": {
                    "type": "string"
                },
                "points": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "receiptv2.PointSchemeWithReference": {
            "type": "object",
            "required": [
                "point_scheme"
            ],
            "properties": {
                "point_scheme": {
                    "type": "string"
                },
                "points": {
                    "type": "number",
                    "minimum": 0
                },
                "points_name": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.PurchaseLocation": {
            "type": "object",
            "required": [
                "address",
                "city",
                "purchase_country_code",
                "store_name",
                "zip_code"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "cashier_number": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "purchase_country_code": {
                    "type": "string"
                },
                "store_name": {
                    "type": "string"
                },
                "store_number": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "receiptv2.ReferenceOfOrigin": {
            "type": "object",
            "required": [
                "reference_of_origin_receipt"
            ],
            "properties": {
                "reason_for_return": {
                    "type": "string"
                },
                "reference_of_origin_receipt": {
                    "type": "string"
                }
            }
        },
        "receiptv2.ResponseCredit": {
            "type": "object",
            "properties": {
                "application_ownerships": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.CreditReference"
                    }
                }
            }
        },
        "receiptv2.ReturnPolicy": {
            "type": "object",
            "required": [
                "policy_end_date"
            ],
            "properties": {
                "policy_description": {
                    "type": "string",
                    "maxLength": 200
                },
                "policy_end_date": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Seller": {
            "type": "object",
            "properties": {
                "contact_info": {
                    "$ref": "#/definitions/receiptv2.ContactInfo"
                },
                "country_code": {
                    "type": "string"
                },
                "org_number": {
                    "type": "string"
                }
            }
        },
        "receiptv2.SendRequest": {
            "type": "object",
            "required": [
                "merchant",
                "receipt_number",
                "receipt_type",
                "timestamp",
                "total"
            ],
            "properties": {
                "articles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Article"
                    }
                },
                "customer_deliveries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.CustomerDelivery"
                    }
                },
                "data_one_time_keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "01AN4Z07BY79KA1307SR9X4MV3",
                        "01AN4Z07BY79KA1307SR0X4MV3"
                    ]
                },
                "extended_receipt_logic": {
                    "$ref": "#/definitions/receiptv2.ExtendedLogic"
                },
                "extra_receipt_view": {
                    "$ref": "#/definitions/receiptv2.ExtraView"
                },
                "invites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.InviteItem"
                    }
                },
                "invoices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Invoice"
                    }
                },
                "merchant": {
                    "$ref": "#/definitions/receiptv2.Merchant"
                },
                "payments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Payment"
                    }
                },
                "receipt_description": {
                    "type": "string"
                },
                "receipt_number": {
                    "type": "string"
                },
                "receipt_producer_certificate": {
                    "type": "string"
                },
                "receipt_type": {
                    "type": "string",
                    "enum": [
                        "elektronisk salgskvittering",
                        "elektronisk returkvittering",
                        "elektronisk proforma-kvittering",
                        "elektronisk treningskvittering",
                        "elektronisk utleveringsseddel"
                    ]
                },
                "relate_extended_references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.ExtendedReference"
                    }
                },
                "relate_one_time_keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.OneTimeKeys"
                    }
                },
                "relate_order_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timestamp": {
                    "type": "string"
                },
                "total": {
                    "$ref": "#/definitions/receiptv2.Total"
                },
                "version": {
                    "type": "string",
                    "enum": [
                        "2.1.0"
                    ],
                    "example": "2.1.0"
                }
            }
        },
        "receiptv2.SendResponse": {
            "type": "object",
            "properties": {
                "assigned_references_used": {
                    "$ref": "#/definitions/receiptv2.AssignedReferences"
                },
                "bar_code": {
                    "$ref": "#/definitions/receiptv2.BarCodeWithValue"
                },
                "extended_objects": {
                    "$ref": "#/definitions/receiptv2.ExtendedObject"
                },
                "extended_view_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.ExtendedViewLogic"
                    }
                },
                "un_assigned_references_saved": {
                    "$ref": "#/definitions/receiptv2.UnassignedReferences"
                },
                "zeipt_receipt_transr": {
                    "type": "string"
                },
                "zeipt_view_logics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.ViewLogic2"
                    }
                }
            }
        },
        "receiptv2.Specified": {
            "type": "object",
            "properties": {
                "entrance": {
                    "type": "string"
                },
                "event_ending": {
                    "type": "string"
                },
                "event_start": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "floor_number": {
                    "type": "string"
                },
                "room_number": {
                    "type": "string"
                },
                "row_number": {
                    "type": "string"
                },
                "seat_number": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Subtraction": {
            "type": "object",
            "properties": {
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.SubtractionDiscount"
                    }
                }
            }
        },
        "receiptv2.SubtractionDiscount": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "bar_code_value": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "logic": {
                    "type": "string"
                },
                "merchant_reference": {
                    "type": "string"
                },
                "merchant_sorting": {
                    "type": "string"
                },
                "per_quantity": {
                    "type": "boolean"
                },
                "percentage": {
                    "type": "number",
                    "minimum": 0
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.Total": {
            "type": "object",
            "required": [
                "additions",
                "final_price"
            ],
            "properties": {
                "additions": {
                    "$ref": "#/definitions/receiptv2.Addition"
                },
                "extra_sum_values": {
                    "$ref": "#/definitions/receiptv2.ExtraSumValue"
                },
                "final_price": {
                    "type": "number",
                    "minimum": 0
                },
                "subtractions": {
                    "$ref": "#/definitions/receiptv2.TotalSubtraction"
                },
                "total_art_price_with_vat": {
                    "type": "number",
                    "minimum": 0
                },
                "total_currency": {
                    "type": "string"
                },
                "total_moneyback": {
                    "type": "boolean"
                },
                "total_price_with_vat": {
                    "type": "number",
                    "minimum": 0
                },
                "total_price_without_vat": {
                    "type": "number",
                    "minimum": 0
                },
                "total_vat_name": {
                    "type": "string"
                }
            }
        },
        "receiptv2.TotalSubtraction": {
            "type": "object",
            "properties": {
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.TotalSubtractionDiscount"
                    }
                }
            }
        },
        "receiptv2.TotalSubtractionDiscount": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "bar_code_value": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "logic": {
                    "type": "string"
                },
                "merchant_reference": {
                    "type": "string"
                },
                "merchant_sorting": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number",
                    "minimum": 0
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.TravelReference": {
            "type": "object",
            "required": [
                "car_license_plate",
                "travel_driver_id",
                "travel_driver_name"
            ],
            "properties": {
                "car_license_plate": {
                    "type": "string"
                },
                "travel_company_certification": {
                    "type": "string"
                },
                "travel_driver_certification": {
                    "type": "string"
                },
                "travel_driver_id": {
                    "type": "string"
                },
                "travel_driver_name": {
                    "type": "string"
                }
            }
        },
        "receiptv2.UnassignedCredit": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "cashier_reference": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "logic": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                }
            }
        },
        "receiptv2.UnassignedReferences": {
            "type": "object",
            "properties": {
                "credits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.UnassignedCredit"
                    }
                },
                "discounts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.Discount4"
                    }
                },
                "point_schemes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/receiptv2.PointScheme2"
                    }
                }
            }
        },
        "receiptv2.VatGroup": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "base_amount": {
                    "type": "number",
                    "minimum": 0
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "percentage": {
                    "type": "number",
                    "minimum": 0
                }
            }
        },
        "receiptv2.ViewLogic2": {
            "type": "object",
            "properties": {
                "zeipt_template_logic": {
                    "type": "string"
                },
                "zeipt_view_address": {
                    "type": "string"
                },
                "zeipt_view_type": {
                    "type": "string"
                }
            }
        },
        "roles.Role": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/permissions.Permission"
                    }
                },
                "ulid": {
                    "type": "string"
                }
            }
        },
        "session.CreateRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "PLAsdje4U301aoiA"
                },
                "username": {
                    "type": "string",
                    "minLength": 1,
                    "example": "useremail@example.com"
                }
            }
        },
        "settingv2.AddFinalPriceFilter": {
            "type": "object",
            "properties": {
                "above_final_price": {
                    "type": "number"
                },
                "total_currency": {
                    "type": "string"
                }
            }
        },
        "settingv2.CardRegisterSettings": {
            "type": "object",
            "properties": {
                "failure_url": {
                    "type": "boolean"
                },
                "success_url": {
                    "type": "boolean"
                }
            }
        },
        "settingv2.CardRegisterURL": {
            "type": "object",
            "properties": {
                "failure_url": {
                    "type": "string"
                },
                "success_url": {
                    "type": "string"
                }
            }
        },
        "settingv2.DefaultTimestampFilter": {
            "type": "object",
            "properties": {
                "after_time_of_day": {
                    "type": "boolean"
                },
                "before_time_of_day": {
                    "type": "boolean"
                }
            }
        },
        "settingv2.ExtendedFilter": {
            "type": "object",
            "properties": {
                "final_price_filter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/settingv2.FinalPriceFilter"
                    }
                },
                "timestamp_filter": {
                    "$ref": "#/definitions/settingv2.TimestampFilter"
                }
            }
        },
        "settingv2.ExtendedFilterSettings": {
            "type": "object",
            "properties": {
                "final_price_filter": {
                    "type": "boolean"
                },
                "timestamp_filter": {
                    "$ref": "#/definitions/settingv2.DefaultTimestampFilter"
                }
            }
        },
        "settingv2.FinalPriceFilter": {
            "type": "object",
            "properties": {
                "above_final_price": {
                    "type": "number"
                },
                "total_currency": {
                    "type": "string"
                }
            }
        },
        "settingv2.FollowPolicy": {
            "type": "object",
            "properties": {
                "follow_assigned_point_scheme": {
                    "type": "string"
                },
                "follow_group_default_encoding": {
                    "type": "string"
                },
                "follow_group_direct_delivery_message": {
                    "type": "string"
                },
                "follow_group_filter": {
                    "type": "string"
                },
                "follow_group_permission": {
                    "type": "string"
                },
                "follow_group_receipt_logo": {
                    "type": "string"
                },
                "follow_group_receipt_storage": {
                    "type": "string"
                },
                "follow_group_thirdparty": {
                    "type": "string"
                }
            }
        },
        "settingv2.InfoGlobalFilterSetting": {
            "type": "object",
            "properties": {
                "whitelist_all": {
                    "type": "boolean"
                }
            }
        },
        "settingv2.InfoReceiptImages": {
            "type": "object",
            "properties": {
                "merchant_logo": {
                    "type": "string"
                },
                "merchant_thumbnail": {
                    "type": "string"
                }
            }
        },
        "settingv2.RawReceiptInputExamples": {
            "type": "object",
            "properties": {
                "example_transnr": {
                    "type": "string"
                },
                "raw_receipt_input_example_name": {
                    "type": "string"
                }
            }
        },
        "settingv2.RawReceiptTemplates": {
            "type": "object",
            "properties": {
                "activated_raw_receipt_template": {
                    "type": "boolean"
                },
                "latest_example_transnr": {
                    "type": "string"
                },
                "raw_receipt_template_name": {
                    "type": "string"
                },
                "template_number": {
                    "type": "string"
                }
            }
        },
        "settingv2.ReceiptEmailSmsMessage": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "settingv2.ReceiptEmailSmsSettings": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "boolean"
                },
                "email_message": {
                    "type": "boolean"
                },
                "email_subject": {
                    "type": "boolean"
                },
                "telephone_message": {
                    "type": "boolean"
                }
            }
        },
        "settingv2.ReceiptImages": {
            "type": "object",
            "properties": {
                "merchant_logo": {
                    "type": "boolean"
                },
                "merchant_thumbnail": {
                    "type": "boolean"
                }
            }
        },
        "settingv2.RemoveFinalPriceFilter": {
            "type": "object",
            "properties": {
                "above_final_price": {
                    "type": "number"
                },
                "total_currency": {
                    "type": "string"
                }
            }
        },
        "settingv2.ResponseGlobalFilterSetting": {
            "type": "object",
            "properties": {
                "whitelist_all": {
                    "type": "boolean"
                }
            }
        },
        "settingv2.SetCardRegisterURL": {
            "type": "object",
            "properties": {
                "failure_url": {
                    "type": "string"
                },
                "success_url": {
                    "type": "string"
                }
            }
        },
        "settingv2.SetExtendedFilter": {
            "type": "object",
            "properties": {
                "add_final_price_filter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/settingv2.AddFinalPriceFilter"
                    }
                },
                "remove_final_price_filter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/settingv2.RemoveFinalPriceFilter"
                    }
                },
                "timestamp_filter": {
                    "$ref": "#/definitions/settingv2.TimestampFilter"
                }
            }
        },
        "settingv2.SetReceiptEmailSmsMessage": {
            "type": "object",
            "properties": {
                "email_logo": {
                    "type": "string"
                },
                "email_message": {
                    "type": "string"
                },
                "email_subject": {
                    "type": "string"
                },
                "telephone_message": {
                    "type": "string"
                }
            }
        },
        "settingv2.SetReceiptImages": {
            "type": "object",
            "properties": {
                "merchant_logo": {
                    "type": "string"
                },
                "merchant_thumbnail": {
                    "type": "string"
                }
            }
        },
        "settingv2.SetReceiptStorageSettings": {
            "type": "object",
            "properties": {
                "delete_receipt_object_after_read": {
                    "type": "boolean"
                }
            }
        },
        "settingv2.SharingPolicy": {
            "type": "object",
            "properties": {
                "brand_number": {
                    "type": "string"
                },
                "sharing_of_credits_references": {
                    "type": "boolean"
                },
                "sharing_of_direct_delivery_id": {
                    "type": "boolean"
                },
                "sharing_of_discount_references": {
                    "type": "boolean"
                },
                "sharing_of_receipts": {
                    "type": "boolean"
                }
            }
        },
        "settingv2.TimestampFilter": {
            "type": "object",
            "properties": {
                "after_time_of_day": {
                    "type": "string"
                },
                "before_time_of_day": {
                    "type": "string"
                }
            }
        },
        "statisticsv2.SegmentResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 9023020
                },
                "detailed": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/statisticsv2.Statistic"
                    }
                },
                "segment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "2021-11": "29834",
                        "2021-12": "38948",
                        "2022-01": "39238",
                        "2022-02": "43242"
                    }
                }
            }
        },
        "statisticsv2.Statistic": {
            "type": "object",
            "properties": {
                "additional_data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/statisticsv2.StatisticSegment"
                    }
                },
                "client_number": {
                    "type": "string",
                    "example": "01G1QSNSE2THEFPKYCGCRMNRFX"
                },
                "recorded_at": {
                    "type": "string",
                    "example": "12ee6139-7efd-4409-9428-426ec39a072b"
                },
                "request_size": {
                    "description": "in bytes",
                    "type": "integer",
                    "example": 8839484
                },
                "request_time": {
                    "description": "in nanoseconds",
                    "type": "integer",
                    "example": 230203
                },
                "transaction_number": {
                    "type": "string",
                    "example": "01G1QSNSE2THEFPKYCGCRMNRFX"
                }
            }
        },
        "statisticsv2.StatisticSegment": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "email"
                },
                "value": {
                    "type": "string",
                    "example": "3"
                }
            }
        },
        "tokens.TokenRequest": {
            "type": "object",
            "properties": {
                "client_numbers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "permission_ulidss": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role_ulids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "tokens.TokenResponse": {
            "type": "object",
            "properties": {
                "expire_at": {
                    "type": "string"
                },
                "token_value": {
                    "type": "string"
                }
            }
        },
        "users.CreateRequest": {
            "type": "object",
            "required": [
                "email",
                "password",
                "type"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email",
                    "example": "useremail@example.com"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "example": "PLAsdje4U301aoiA"
                },
                "type": {
                    "description": "TODO How does the type affect the user? Why is it needed?",
                    "type": "string",
                    "enum": [
                        "merchant",
                        "application"
                    ],
                    "example": "merchant"
                }
            }
        },
        "users.CreateResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "users.Permission": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "permission_ulid": {
                    "type": "string"
                }
            }
        },
        "users.PermissionRoleRequest": {
            "type": "object",
            "properties": {
                "clients": {
                    "description": "array of client numbers",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "providers": {
                    "description": "array of pids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "users.Role": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "role_ulid": {
                    "type": "string"
                }
            }
        },
        "users.UserInfo": {
            "type": "object",
            "properties": {
                "dgcid": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/users.Permission"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/users.Role"
                    }
                }
            }
        },
        "users.UsersResponse": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/users.UserInfo"
                    }
                }
            }
        },
        "userv2.Cards": {
            "type": "object",
            "properties": {
                "card_type": {
                    "type": "string"
                },
                "last_digits": {
                    "type": "string"
                },
                "token_expiration_date": {
                    "type": "string"
                },
                "zeipt_card_transnr": {
                    "type": "string"
                }
            }
        },
        "userv2.DeleteRequest": {
            "type": "object",
            "required": [
                "provider_gcid"
            ],
            "properties": {
                "provider_gcid": {
                    "type": "string",
                    "example": "user_1"
                }
            }
        },
        "userv2.IDList": {
            "type": "object",
            "properties": {
                "cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userv2.Cards"
                    }
                },
                "custom_customer_references": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dynamic_customer_references": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "email_addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "telephones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/userv2.Telephones"
                    }
                },
                "zeipt_bank_account_transnrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "userv2.InfoRequest": {
            "type": "object",
            "required": [
                "provider_gcid"
            ],
            "properties": {
                "credits_reference_list": {
                    "type": "boolean"
                },
                "discount_reference_list": {
                    "type": "boolean"
                },
                "id_list": {
                    "type": "boolean"
                },
                "invoice_reference_list": {
                    "type": "boolean"
                },
                "point_object_reference_list": {
                    "type": "boolean"
                },
                "provider_gcid": {
                    "type": "string",
                    "example": "user_1"
                },
                "zeipt_card_transnrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zeipt_receipt_transnr_list": {
                    "type": "boolean"
                }
            }
        },
        "userv2.InfoResponse": {
            "type": "object",
            "properties": {
                "application_number": {
                    "type": "string"
                },
                "credit_references": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "discount_references": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id_list": {
                    "$ref": "#/definitions/userv2.IDList"
                },
                "invoice_references": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "point_object_references": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "zeipt_receipt_transnrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "userv2.RegisterRequest": {
            "type": "object",
            "required": [
                "application_gcid",
                "provider_gcid"
            ],
            "properties": {
                "application_gcid": {
                    "type": "string",
                    "example": "app_1"
                },
                "provider_gcid": {
                    "type": "string",
                    "example": "user_1"
                }
            }
        },
        "userv2.Telephones": {
            "type": "object",
            "properties": {
                "country_calling_code": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "webhookv2.InfoRequest": {
            "type": "object",
            "properties": {
                "pid": {
                    "type": "string"
                }
            }
        },
        "webhookv2.MessageRequest": {
            "type": "object",
            "properties": {
                "pid": {
                    "type": "string"
                },
                "zeipt_receipt_transnrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "webhookv2.RegisterRequest": {
            "type": "object",
            "required": [
                "pid",
                "webhooks"
            ],
            "properties": {
                "pid": {
                    "type": "string"
                },
                "webhooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/webhookv2.Webhook"
                    }
                }
            }
        },
        "webhookv2.UpdateRequest": {
            "type": "object",
            "required": [
                "webhooks"
            ],
            "properties": {
                "delete_hmac_token": {
                    "type": "boolean"
                },
                "delete_webhooks": {
                    "type": "boolean"
                },
                "hmac_token": {
                    "type": "string"
                },
                "message_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pid": {
                    "type": "string"
                },
                "webhooks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "webhookv2.Webhook": {
            "type": "object",
            "required": [
                "message_types",
                "webhook_url"
            ],
            "properties": {
                "hmac_token": {
                    "type": "string"
                },
                "message_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "webhook_url": {
                    "type": "string"
                }
            }
        },
        "webhookv2.WebhookResponse": {
            "type": "object",
            "properties": {
                "hmac_token": {
                    "type": "string"
                },
                "message_types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pid": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "APIKey": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "3.0.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Zeipt API",
	Description: "This is the documentation for the Zeipt API. The specification is specific to the Monolith service and all routes may not be relevant if other services still handle some routes.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
