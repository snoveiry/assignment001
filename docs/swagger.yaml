definitions:
  authv2.DashboardRequest:
    properties:
      email:
        example: useremail@example.com
        type: string
      password:
        example: PLAsdje4U301aoiA
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  authv2.ProviderRequest:
    properties:
      api_key:
        example: ff629c91-7158-4abb-a4e0-de915f159573
        type: string
    required:
    - api_key
    type: object
  authv2.PublicRequest:
    properties:
      api_key:
        example: ff629c91-7158-4abb-a4e0-de915f159573
        type: string
      provider_gcid:
        example: ff629c91-7158-4acb-a4e0-de815f159573
        type: string
    required:
    - api_key
    - provider_gcid
    type: object
  authv2.UserRequest:
    properties:
      provider_gcid:
        example: user_1
        type: string
    required:
    - provider_gcid
    type: object
  clients.ClientInfo:
    properties:
      gcid:
        type: string
      number:
        type: string
      org_name:
        type: string
      org_number:
        type: string
      type:
        type: string
    type: object
  clients.ClientsResponse:
    properties:
      clients:
        items:
          $ref: '#/definitions/clients.ClientInfo'
        type: array
    type: object
  clientv2.ActivateRequest:
    properties:
      caas:
        example: true
        type: boolean
      client:
        $ref: '#/definitions/clientv2.ClientActivate'
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      daas:
        example: true
        type: boolean
      edaas:
        example: true
        type: boolean
      evaas:
        example: true
        type: boolean
      iaas:
        example: true
        type: boolean
      psaas:
        example: true
        type: boolean
      raas:
        example: true
        type: boolean
    type: object
  clientv2.Client:
    properties:
      client_gcid:
        example: client_1
        type: string
      client_type:
        enum:
        - merchant
        - application
        - brand
        example: merchant
        type: string
    required:
    - client_gcid
    - client_type
    type: object
  clientv2.ClientActivate:
    properties:
      client_gcid:
        example: client_1
        type: string
      client_type:
        enum:
        - merchant
        - application
        - brand
        example: merchant
        type: string
    type: object
  clientv2.ClientDeactivate:
    properties:
      client_gcid:
        example: client_1
        type: string
      client_type:
        enum:
        - merchant
        - application
        - brand
        example: merchant
        type: string
    type: object
  clientv2.ClientOutput:
    properties:
      client_number:
        type: string
      client_type:
        type: string
    type: object
  clientv2.ClientUpdate:
    properties:
      client_gcid:
        example: client_1
        type: string
      client_type:
        enum:
        - merchant
        - application
        - brand
        example: merchant
        type: string
    type: object
  clientv2.ContactInfo:
    properties:
      address:
        type: string
      city:
        type: string
      contact_person:
        $ref: '#/definitions/clientv2.ContactPerson'
      country_code:
        type: string
      email:
        example: useremail@example.com
        format: email
        type: string
      telephone:
        $ref: '#/definitions/clientv2.Telephone'
      website:
        type: string
      zip_code:
        type: string
    type: object
  clientv2.ContactPerson:
    properties:
      contact_first_name:
        type: string
      contact_surname:
        type: string
      email:
        example: useremail@example.com
        format: email
        type: string
      telephone:
        $ref: '#/definitions/clientv2.Telephone'
    type: object
  clientv2.DeactivateRequest:
    properties:
      caas:
        example: false
        type: boolean
      client:
        $ref: '#/definitions/clientv2.ClientDeactivate'
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      daas:
        example: false
        type: boolean
      edaas:
        example: false
        type: boolean
      evaas:
        example: false
        type: boolean
      iaas:
        example: false
        type: boolean
      psaas:
        example: false
        type: boolean
      raas:
        example: false
        type: boolean
    type: object
  clientv2.DeleteRequest:
    properties:
      client:
        properties:
          client_gcid:
            example: client_1
            type: string
          client_type:
            enum:
            - merchant
            - application
            - brand
            example: merchant
            type: string
        type: object
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
    type: object
  clientv2.RegisterRequest:
    properties:
      client:
        $ref: '#/definitions/clientv2.Client'
      common_name:
        example: Zeipt Receipts
        type: string
      country_code:
        example: "NO"
        type: string
      demo:
        example: false
        type: boolean
      org_name:
        example: Zeipt
        type: string
      org_number:
        example: 915271383MVA
        type: string
      org_suffix:
        example: AS
        type: string
      pid:
        description: RegisterResponse
        example: 01AN4Z07BY79KA1307SR9X4MV3
        type: string
    type: object
  clientv2.RegisterResponse:
    properties:
      client:
        $ref: '#/definitions/clientv2.ClientOutput'
      common_name:
        example: Zeipt Receipts
        type: string
      country_code:
        example: "NO"
        type: string
      demo:
        example: false
        type: boolean
      org_name:
        example: Zeipt
        type: string
      org_number:
        example: 915271383MVA
        type: string
      org_suffix:
        example: AS
        type: string
    type: object
  clientv2.Telephone:
    properties:
      country_calling_code:
        type: string
      number:
        type: string
    type: object
  clientv2.UpdateRequest:
    properties:
      add_demo:
        example: false
        type: boolean
      client:
        $ref: '#/definitions/clientv2.ClientUpdate'
      client_logo:
        type: string
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      common_name:
        example: Zeipt Receipts
        type: string
      contact_info:
        $ref: '#/definitions/clientv2.ContactInfo'
      country_code:
        example: "NO"
        type: string
      integration_lvl:
        items:
          type: integer
        type: array
      org_name:
        example: Zeipt
        type: string
      org_number:
        type: string
      org_suffix:
        example: AS
        type: string
      remove_demo:
        example: false
        type: boolean
    type: object
  creditv2.CreateCredit:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      client:
        properties:
          client_gcid:
            type: string
          client_type:
            enum:
            - brand
            - merchant
            - application
            type: string
        type: object
      client_number:
        type: string
      credit_logic_name:
        type: string
      triggers:
        properties:
          all_of_article_numbers:
            items:
              type: string
            type: array
          any_of_article_numbers:
            items:
              type: string
            type: array
          general_triggers:
            properties:
              art_final_price_triggers:
                properties:
                  above_art_final_price:
                    type: integer
                  total_currency:
                    type: string
                type: object
              art_quantity:
                type: integer
              art_quantity_objects:
                type: integer
              final_price_triggers:
                properties:
                  above_final_price:
                    type: integer
                  total_currency:
                    type: string
                type: object
            type: object
          payment_method_types:
            items:
              type: string
            type: array
          timestamp_trigger:
            properties:
              after_time_of_day:
                type: string
              before_time_of_day:
                type: string
            type: object
        type: object
      view_text:
        type: string
      view_title:
        type: string
      write_logic:
        properties:
          amount:
            type: integer
          art_description:
            type: string
          art_name:
            type: string
          background_image_uri:
            type: string
          bar_code:
            properties:
              display_value:
                type: string
              encoding:
                enum:
                - code_128
                - code_39
                - ean_13
                - ean_8
                - interleaved_2_of_5
                - qr
                type: string
            required:
            - encoding
            type: object
          box_image_uri:
            type: string
          currency:
            type: string
          generate_ticket:
            type: boolean
          geographic:
            properties:
              arrival_reference:
                type: string
              departure_reference:
                type: string
              distance_value:
                type: integer
              distance_value_definition:
                enum:
                - km
                - miles
                type: string
              end_location:
                properties:
                  address:
                    type: string
                  city:
                    type: string
                  country_code:
                    type: string
                  zip_code:
                    type: string
                required:
                - country_code
                type: object
              start_location:
                properties:
                  address:
                    type: string
                  city:
                    type: string
                  country_code:
                    type: string
                  zip_code:
                    type: string
                required:
                - country_code
                type: object
            type: object
          handling_uri:
            type: string
          html_template:
            type: string
          manual_uri:
            type: string
          specified:
            properties:
              entrance:
                type: string
              event_ending:
                type: string
              event_start:
                type: string
              floor_number:
                type: string
              room_number:
                type: string
              row_number:
                type: string
              seat_number:
                type: string
              ttl_in_minutes:
                type: integer
            type: object
          thumbnail_image_uri:
            type: string
          ticket_reference:
            type: string
          vat_amount:
            type: integer
          vat_percentage:
            type: number
        type: object
    type: object
  creditv2.ResponseCreditFetch:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      credit_logic_name:
        type: string
      triggers:
        properties:
          all_of_article_numbers:
            items:
              type: string
            type: array
          any_of_article_numbers:
            items:
              type: string
            type: array
          general_triggers:
            properties:
              art_final_price_triggers:
                properties:
                  above_art_final_price:
                    type: number
                  total_currency:
                    type: string
                type: object
              art_quantity:
                type: number
              art_quantity_objects:
                type: integer
              final_price_triggers:
                properties:
                  above_final_price:
                    type: number
                  total_currency:
                    type: string
                type: object
            type: object
          payment_method_types:
            items:
              type: string
            type: array
          timestamp_trigger:
            properties:
              after_time_of_day:
                type: string
              before_time_of_day:
                type: string
            type: object
        type: object
      view_text:
        type: string
      view_title:
        type: string
      write_logic:
        properties:
          amount:
            type: number
          background_image_uri:
            type: string
          bar_code:
            properties:
              display_value:
                type: string
              encoding:
                enum:
                - code_128
                - code_39
                - ean_13
                - ean_8
                - interleaved_2_of_5
                - qr
                type: string
            required:
            - encoding
            type: object
          box_image_uri:
            type: string
          creator_logo:
            type: string
          credit_logic:
            type: string
          description:
            type: string
          expiration_date:
            type: string
          percentage:
            type: number
          thumbnail_uri:
            type: string
          title:
            type: string
          total_currency:
            type: string
        type: object
    type: object
  creditv2.UpdateCredit:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      client:
        properties:
          client_gcid:
            type: string
          client_type:
            enum:
            - brand
            - merchant
            - application
            type: string
        type: object
      client_number:
        type: string
      credit_logic:
        type: string
      credit_logic_name:
        type: string
      triggers:
        properties:
          all_of_article_numbers:
            items:
              type: string
            type: array
          any_of_article_numbers:
            items:
              type: string
            type: array
          general_triggers:
            properties:
              art_final_price_triggers:
                properties:
                  above_art_final_price:
                    type: integer
                  total_currency:
                    type: string
                type: object
              art_quantity:
                type: integer
              art_quantity_objects:
                type: integer
              final_price_triggers:
                properties:
                  above_final_price:
                    type: integer
                  total_currency:
                    type: string
                type: object
            type: object
          payment_method_types:
            items:
              enum:
              - bankaxept
              - visa
              - mastercard
              - amex
              - point_scheme
              - gift_card
              - other
              type: string
            type: array
          timestamp_trigger:
            properties:
              after_time_of_day:
                type: string
              before_time_of_day:
                type: string
            type: object
        type: object
      view_text:
        type: string
      view_title:
        type: string
      write_logic:
        properties:
          amount:
            type: integer
          art_description:
            type: string
          art_name:
            type: string
          background_image_uri:
            type: string
          bar_code:
            properties:
              display_value:
                type: string
              encoding:
                enum:
                - code_128
                - code_39
                - ean_13
                - ean_8
                - interleaved_2_of_5
                - qr
                type: string
            required:
            - encoding
            type: object
          box_image_uri:
            type: string
          currency:
            type: string
          generate_ticket:
            type: boolean
          geographic:
            properties:
              arrival_reference:
                type: string
              departure_reference:
                type: string
              distance_value:
                type: integer
              distance_value_definition:
                enum:
                - km
                - miles
                type: string
              end_location:
                properties:
                  address:
                    type: string
                  city:
                    type: string
                  country_code:
                    type: string
                  zip_code:
                    type: string
                required:
                - country_code
                type: object
              start_location:
                properties:
                  address:
                    type: string
                  city:
                    type: string
                  country_code:
                    type: string
                  zip_code:
                    type: string
                required:
                - country_code
                type: object
            type: object
          handling_uri:
            type: string
          html_template:
            type: string
          manual_uri:
            type: string
          specified:
            properties:
              entrance:
                type: string
              event_ending:
                type: string
              event_start:
                type: string
              floor_number:
                type: string
              room_number:
                type: string
              row_number:
                type: string
              seat_number:
                type: string
              ttl_in_minutes:
                type: integer
            type: object
          thumbnail_image_uri:
            type: string
          ticket_reference:
            type: string
          vat_amount:
            type: integer
          vat_percentage:
            type: number
        type: object
    type: object
  dashboardv2.DeleteProviderRequest:
    properties:
      pid:
        type: string
    required:
    - pid
    type: object
  dashboardv2.GenerateApikeyRequest:
    properties:
      delete:
        type: boolean
      delete_timestamp:
        type: string
      pid:
        example: 01AN4Z07BY79KA1307SR9X4MV3
        type: string
      zeipt_api_key_transnr:
        type: string
    required:
    - pid
    type: object
  dashboardv2.PasswordResetRequest:
    properties:
      email:
        example: useremail@example.com
        format: email
        type: string
    required:
    - email
    type: object
  dashboardv2.PasswordResetTokenRequest:
    properties:
      password:
        example: PLAsdje4U301aoiA
        format: password
        minLength: 8
        type: string
    required:
    - password
    type: object
  dashboardv2.RegisterProviderRequest:
    properties:
      common_name:
        example: Zeipt Receipts
        type: string
      country_code:
        example: "NO"
        type: string
      org_name:
        example: Zeipt
        type: string
      org_number:
        example: 915271383MVA
        type: string
      org_suffix:
        example: AS
        type: string
    type: object
  dashboardv2.RegisterProviderResponse:
    properties:
      common_name:
        example: Zeipt Receipts
        type: string
      country_code:
        example: "NO"
        type: string
      org_name:
        example: Zeipt
        type: string
      org_number:
        example: 915271383MVA
        type: string
      org_suffix:
        example: AS
        type: string
      pid:
        example: 01AN4Z07BY79KA1307SR9X4MV3
        type: string
    type: object
  dashboardv2.RegisterRequest:
    properties:
      application:
        example: false
        type: boolean
      email:
        example: useremail@example.com
        format: email
        type: string
      merchant:
        example: false
        type: boolean
      password:
        example: PLAsdje4U301aoiA
        format: password
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  dashboardv2.Telephone:
    properties:
      country_calling_code:
        type: string
      number:
        type: string
    type: object
  dashboardv2.UpdateProviderRequest:
    properties:
      common_name:
        type: string
      contact_info:
        properties:
          address:
            type: string
          city:
            type: string
          contact_person:
            properties:
              contact_first_name:
                type: string
              contact_surname:
                type: string
              email:
                example: useremail@example.com
                format: email
                type: string
              telephone:
                $ref: '#/definitions/dashboardv2.Telephone'
            type: object
          country_code:
            type: string
          email:
            example: useremail@example.com
            format: email
            type: string
          telephone:
            $ref: '#/definitions/dashboardv2.Telephone'
          website:
            type: string
          zip_code:
            type: string
        type: object
      country_code:
        type: string
      org_name:
        type: string
      org_number:
        type: string
      org_suffix:
        type: string
      pid:
        type: string
      provider_logo:
        type: string
    required:
    - country_code
    - org_name
    - org_number
    - org_suffix
    - pid
    type: object
  dashboardv2.UserRequest:
    properties:
      application:
        example: false
        type: boolean
      email:
        example: useremail@example.com
        format: email
        type: string
      guide_progression:
        type: object
      merchant:
        example: false
        type: boolean
      name:
        example: Petra Johanssen
        type: string
      new_password:
        example: PLAsdje4U301aoiA
        format: password
        minLength: 8
        type: string
      old_password:
        example: PLAsdje4U301aoiA
        format: password
        minLength: 8
        type: string
      org_role:
        example: Developer
        type: string
      state:
        additionalProperties: true
        type: object
      telephone:
        $ref: '#/definitions/receiptv2.Phone'
    type: object
  dashboardv2.UserResponse:
    properties:
      activated_at:
        type: string
      application:
        example: false
        type: boolean
      dgcid:
        type: string
      disabled_at:
        type: string
      email:
        type: string
      guide_progression: {}
      inserted_at:
        type: string
      merchant:
        example: false
        type: boolean
      name:
        example: Petra Johanssen
        type: string
      org_role:
        example: Developer
        type: string
      state:
        additionalProperties: true
        type: object
      telephone:
        $ref: '#/definitions/receiptv2.Phone'
    type: object
  delete.TimestampRequest:
    properties:
      delete_all_receipts:
        example: true
        type: boolean
      delete_receipt_timeframe:
        $ref: '#/definitions/fetch.AllData'
      provider_gcid:
        example: user_1
        type: string
    required:
    - provider_gcid
    type: object
  delete.TransnrRequest:
    properties:
      provider_gcid:
        example: user_1
        type: string
      zeipt_receipt_transnrs:
        example:
        - 01AN4Z07BY79KA1307SR9X4MV3
        items:
          type: string
        type: array
    required:
    - provider_gcid
    - zeipt_receipt_transnrs
    type: object
  error.Default:
    properties:
      errors:
        items:
          $ref: '#/definitions/error.E'
        type: array
      reference:
        example: PROD01FXKSPD0G1Q6VCJZED41WHXEE
        type: string
    type: object
  error.E:
    properties:
      docs:
        example: https://www.zeipt.com/api-doc/#/
        type: string
      error:
        example: A description explaining  the error may be shown here.
        type: string
      field:
        example: FirstName
        type: string
      rule:
        example: name_validator
        type: string
      type:
        example: BAD_VALUE
        type: string
    type: object
  extendedv2.CustomerDelivery:
    properties:
      application_number:
        type: string
      custom_customer_reference:
        type: string
      email:
        $ref: '#/definitions/extendedv2.Email'
      payment_medium_reference:
        $ref: '#/definitions/extendedv2.PaymentMediumReference'
      telephone:
        $ref: '#/definitions/extendedv2.Telephone'
    type: object
  extendedv2.Email:
    properties:
      email_address:
        type: string
      email_delivery:
        type: boolean
    type: object
  extendedv2.LookupRequest:
    properties:
      customer_delivery:
        $ref: '#/definitions/extendedv2.CustomerDelivery'
      merchant_gcid:
        type: string
    type: object
  extendedv2.LookupResponse:
    properties:
      credit_references:
        items:
          type: string
        type: array
      discount_references:
        items:
          type: string
        type: array
      point_references:
        items:
          $ref: '#/definitions/extendedv2.PointReferences'
        type: array
    type: object
  extendedv2.PaymentMediumReference:
    properties:
      token_provider:
        type: string
      zeipt_card_token:
        type: string
    type: object
  extendedv2.PointReferences:
    properties:
      point_scheme:
        type: string
      reference:
        type: string
    type: object
  extendedv2.Telephone:
    properties:
      country_calling_code:
        type: string
      number:
        type: string
      sms_delivery:
        type: boolean
    type: object
  fetch.AllData:
    properties:
      from_timestamp:
        type: string
      to_timestamp:
        type: string
    type: object
  fetch.TimestampResponse:
    properties:
      only_transnrs:
        items:
          type: string
        type: array
      zeipt_receipt_objects:
        type: string
    type: object
  fetchv2.APIKey:
    properties:
      expiration_date:
        type: string
      last_characters:
        type: string
      zeipt_api_key_transnr:
        type: string
    type: object
  fetchv2.ClientResponse:
    properties:
      client_gcid:
        type: string
      client_logo:
        type: string
      client_number:
        type: string
      client_type:
        type: string
      common_name:
        type: string
      contact_info:
        $ref: '#/definitions/fetchv2.ContactInfo'
      country_code:
        type: string
      dashboard_client:
        type: boolean
      demo_client:
        type: boolean
      id:
        type: integer
      org_name:
        type: string
      org_number:
        type: string
      org_suffix:
        type: string
      pid:
        type: string
    type: object
  fetchv2.Contact:
    properties:
      contact_first_name:
        type: string
      contact_surname:
        type: string
      email:
        type: string
      telephone:
        $ref: '#/definitions/receiptv2.Phone'
    type: object
  fetchv2.ContactInfo:
    properties:
      address:
        type: string
      city:
        type: string
      contact_person:
        $ref: '#/definitions/fetchv2.Contact'
      country_code:
        type: string
      email:
        type: string
      telephone:
        $ref: '#/definitions/receiptv2.Phone'
      website:
        type: string
      zip_code:
        type: string
    type: object
  fetchv2.PidResponse:
    properties:
      common_name:
        type: string
      contact_info:
        $ref: '#/definitions/fetchv2.ContactInfo'
      country_code:
        type: string
      id:
        type: integer
      org_name:
        type: string
      org_number:
        type: string
      org_suffix:
        type: string
      pid:
        type: string
      provider_logo:
        type: string
      registered_api_keys:
        items:
          $ref: '#/definitions/fetchv2.APIKey'
        type: array
    type: object
  files.FileMetaData:
    properties:
      byte_size:
        type: integer
      client_number:
        type: string
      extension:
        type: string
      id:
        type: string
      name:
        type: string
      pid:
        type: string
    type: object
  files.UploadResponse:
    properties:
      id:
        type: string
    type: object
  followv2.DefaultRequest:
    properties:
      follow_assigned_point_scheme:
        type: boolean
      follow_group_default_encoding:
        type: boolean
      follow_group_email_sms_message:
        type: boolean
      follow_group_filter:
        type: boolean
      follow_group_permission:
        type: boolean
      follow_group_receipt_logo:
        type: boolean
      follow_group_receipt_storage:
        type: boolean
      follow_group_thirdparty:
        type: boolean
      merchant_gcid:
        example: merchant01
        type: string
      merchant_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
    type: object
  followv2.MerchantFollowSettings:
    properties:
      follow_group_default_encoding:
        type: string
      follow_group_email_sms_message:
        type: string
      follow_group_filter:
        type: string
      follow_group_permission:
        type: string
      follow_group_receipt_logo:
        type: string
      follow_group_receipt_storage:
        type: string
      follow_group_thirdparty:
        type: string
      follow_point_scheme:
        type: string
    type: object
  followv2.SetRequest:
    properties:
      merchant_follow_settings:
        $ref: '#/definitions/followv2.MerchantFollowSettings'
      merchant_gcid:
        example: merchant01
        type: string
      merchant_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
    type: object
  general.FieldError:
    properties:
      error:
        example: Validation for 'email' failed on the 'email' tag
        type: string
      field:
        example: email
        type: string
      rule:
        example: email
        type: string
    type: object
  general.ValidationError:
    properties:
      field_errors:
        items:
          $ref: '#/definitions/general.FieldError'
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_permissionv2.GrantRequest:
    properties:
      application_gcid:
        example: app01
        type: string
      application_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      grant_permission:
        items:
          $ref: '#/definitions/permissionv2.GrantPermission'
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_permissionv2.RemoveRequest:
    properties:
      application_gcid:
        example: app01
        type: string
      application_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      remove_permission:
        items:
          $ref: '#/definitions/permissionv2.RemovePermission'
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ActivatedPointLogics:
    properties:
      point_logic:
        type: string
      point_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.CreditLogics:
    properties:
      credit_logic:
        type: string
      credit_logic_activated:
        type: boolean
      credit_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.DefaultRequest:
    properties:
      accepted_thirdparty_settings:
        type: boolean
      application_gcid:
        type: string
      application_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      barcode_settings:
        type: boolean
      card_register_settings:
        $ref: '#/definitions/settingv2.CardRegisterSettings'
      delete_after_read_settings:
        type: boolean
      extended_filter_settings:
        $ref: '#/definitions/settingv2.ExtendedFilterSettings'
      external_url_message_settings:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLMessageSettings'
        type: array
      filter_settings:
        type: boolean
      initiation_message_settings:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InitiationMessageSettings'
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.DiscountLogics:
    properties:
      discount_logic:
        type: string
      discount_logic_activated:
        type: boolean
      discount_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLLogicActivated:
    properties:
      external_url_address:
        type: string
      external_url_type:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLLogics:
    properties:
      external_url_logic:
        type: string
      external_url_logic_activated:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLLogicActivated'
        type: array
      external_url_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLMessageSettings:
    properties:
      email_logo:
        type: boolean
      email_message:
        type: boolean
      email_subject:
        type: boolean
      initiation_type:
        enum:
        - invite
        - finance
        - survey
        - consent
        - insurance
        example: invite
        type: string
      telephone_message:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLMessages:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      initiation_type:
        type: string
      telephone_message:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.FilterSettings:
    properties:
      client_number_exceptions:
        items:
          type: string
        type: array
      global_filter_setting:
        $ref: '#/definitions/settingv2.ResponseGlobalFilterSetting'
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GlobalFilterSetting:
    properties:
      blacklist_all:
        type: boolean
      whitelist_all:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GrantedPermissions:
    properties:
      client_number:
        type: string
      trusted_third_party:
        type: boolean
      user_lookup:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GrantingPermissions:
    properties:
      client_number:
        type: string
      trusted_third_party:
        type: boolean
      user_lookup:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InfoRequest:
    properties:
      application_gcid:
        example: application01
        type: string
      application_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      logic_list:
        type: boolean
      permission_list:
        type: boolean
      service_activation:
        type: boolean
      settings_list:
        type: boolean
      share_data_number_list:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InfoResponse:
    properties:
      accepted_thirdparty_strings:
        items:
          type: string
        type: array
      application_number:
        type: string
      barcode_default_encoding:
        type: string
      card_register_url:
        $ref: '#/definitions/settingv2.CardRegisterURL'
      credit_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.CreditLogics'
        type: array
      delete_receipt_object_after_read:
        type: boolean
      discount_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.DiscountLogics'
        type: array
      extended_filter:
        $ref: '#/definitions/settingv2.ExtendedFilter'
      external_url_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLLogics'
        type: array
      external_url_messages:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ExternalURLMessages'
        type: array
      filter_settings:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.FilterSettings'
      granted_permissions:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GrantedPermissions'
        type: array
      granting_permissions:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GrantingPermissions'
        type: array
      initiation_messages:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InitiationMessages'
        type: array
      point_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.PointLogics'
        type: array
      point_schemes:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.PointSchemes'
        type: array
      service_activation:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ServiceActivation'
      share_data_objects:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ShareDataObjects'
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InitiationMessageSettings:
    properties:
      email_logo:
        type: boolean
      email_message:
        type: boolean
      email_subject:
        type: boolean
      initiation_type:
        enum:
        - discount
        - credit
        - create_point
        - add_point
        - invoice
        example: discount
        type: string
      telephone_message:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InitiationMessages:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      initiation_type:
        type: string
      telephone_message:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InputRequest:
    properties:
      application_gcid:
        type: string
      application_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      set_accepted_thirdparty_values:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetAcceptedThirdpartyValues'
      set_barcode_default:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetBarcodeDefault'
      set_card_register_url:
        $ref: '#/definitions/settingv2.SetCardRegisterURL'
      set_extended_filter:
        $ref: '#/definitions/settingv2.SetExtendedFilter'
      set_external_url_messages:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetExternalURLMessages'
        type: array
      set_filter_settings:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetFilterSettings'
      set_initiation_messages:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetInitiationMessages'
        type: array
      set_receipt_storage_settings:
        $ref: '#/definitions/settingv2.SetReceiptStorageSettings'
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.PointLogics:
    properties:
      point_logic:
        type: string
      point_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.PointSchemes:
    properties:
      activated_point_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ActivatedPointLogics'
        type: array
      allow_create:
        type: boolean
      assigned_scheme:
        type: boolean
      point_scheme:
        type: string
      point_scheme_name:
        type: string
      set_public:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ServiceActivation:
    properties:
      caas:
        type: boolean
      daas:
        type: boolean
      edaas:
        type: boolean
      evaas:
        type: boolean
      iaas:
        type: boolean
      psaas:
        type: boolean
      raas:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetAcceptedThirdpartyValues:
    properties:
      add_accepted_thirdparty_strings:
        items:
          type: string
        type: array
      remove_accepted_thirdparty_strings:
        items:
          type: string
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetBarcodeDefault:
    properties:
      barcode_encoding:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetExternalURLMessages:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      initiation_type:
        enum:
        - invite
        - finance
        - survey
        - consent
        - insurance
        example: invite
        type: string
      telephone_message:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetFilterSettings:
    properties:
      add_client_number_exceptions:
        items:
          type: string
        type: array
      global_filter_setting:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.GlobalFilterSetting'
      remove_client_number_exceptions:
        items:
          type: string
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.SetInitiationMessages:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      initiation_type:
        enum:
        - discount
        - credit
        - create_point
        - add_point
        - invoice
        example: discount
        type: string
      telephone_message:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.ShareDataObjects:
    properties:
      share_data_number:
        type: string
      share_data_number_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_permissionv2.GrantRequest:
    properties:
      grant_permission:
        items:
          properties:
            client_number:
              example: 81945843-f79e-412b-af80-8f7bda69c5ae
              type: string
            trusted_third_party:
              type: boolean
          type: object
        type: array
      merchant_gcid:
        example: merchant01
        type: string
      merchant_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_permissionv2.RemoveRequest:
    properties:
      merchant_gcid:
        example: merchant01
        type: string
      merchant_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      remove_permission:
        items:
          properties:
            client_number:
              example: 81945843-f79e-412b-af80-8f7bda69c5ae
              type: string
            trusted_third_party:
              type: boolean
          type: object
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ActivatedPointLogics:
    properties:
      point_logic:
        type: string
      point_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.CreditLogics:
    properties:
      credit_logic:
        type: string
      credit_logic_activated:
        type: boolean
      credit_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.DefaultRequest:
    properties:
      accepted_thirdparty_settings:
        type: boolean
      barcode_settings:
        type: boolean
      delete_after_process_settings:
        type: boolean
      external_url_message_settings:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLMessageSettings'
        type: array
      filter_settings:
        type: boolean
      initiation_message_settings:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InitiationMessageSettings'
        type: array
      merchant_gcid:
        example: merchant01
        type: string
      merchant_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      receipt_email_sms_settings:
        $ref: '#/definitions/settingv2.ReceiptEmailSmsSettings'
      receipt_images:
        $ref: '#/definitions/settingv2.ReceiptImages'
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.DiscountLogics:
    properties:
      discount_logic:
        type: string
      discount_logic_activated:
        type: boolean
      discount_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLLogicActivated:
    properties:
      external_url_address:
        type: string
      external_url_type:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLLogics:
    properties:
      external_url_logic:
        type: string
      external_url_logic_activated:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLLogicActivated'
        type: array
      external_url_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLMessageSettings:
    properties:
      email_logo:
        type: boolean
      email_message:
        type: boolean
      email_subject:
        type: boolean
      initiation_type:
        enum:
        - invite
        - finance
        - survey
        - consent
        - insurance
        example: invite
        type: string
      telephone_message:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLMessages:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      initiation_type:
        type: string
      telephone_message:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.FilterSettings:
    properties:
      client_number_exceptions:
        items:
          type: string
        type: array
      global_filter_setting:
        $ref: '#/definitions/settingv2.InfoGlobalFilterSetting'
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GlobalFilterSetting:
    properties:
      blacklist_all:
        type: boolean
      whitelist_all:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GrantedPermissions:
    properties:
      client_number:
        type: string
      trusted_third_party:
        type: boolean
      user_lookup:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GrantingPermissions:
    properties:
      client_number:
        type: string
      trusted_third_party:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InfoRequest:
    properties:
      follow_policy:
        type: boolean
      logic_list:
        type: boolean
      merchant_gcid:
        example: merchant01
        type: string
      merchant_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      permission_list:
        type: boolean
      raw_receipt_list:
        type: boolean
      service_activation:
        type: boolean
      settings_list:
        type: boolean
      share_data_number_list:
        type: boolean
      sharing_policy:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InfoResponse:
    properties:
      accepted_thirdparty_strings:
        items:
          type: string
        type: array
      assigned_to_brand:
        items:
          type: string
        type: array
      barcode_default_encoding:
        type: string
      credit_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.CreditLogics'
        type: array
      delete_receipt_object_after_processing:
        type: boolean
      discount_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.DiscountLogics'
        type: array
      external_url_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLLogics'
        type: array
      external_url_messages:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ExternalURLMessages'
        type: array
      filter_settings:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.FilterSettings'
      follow_policy:
        $ref: '#/definitions/settingv2.FollowPolicy'
      granted_permissions:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GrantedPermissions'
        type: array
      granting_permissions:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GrantingPermissions'
        type: array
      initiation_messages:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InitiationMessages'
        type: array
      merchant_number:
        type: string
      point_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.PointLogics'
        type: array
      point_schemes:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.PointSchemes'
        type: array
      raw_receipt_input_examples:
        items:
          $ref: '#/definitions/settingv2.RawReceiptInputExamples'
        type: array
      raw_receipt_templates:
        items:
          $ref: '#/definitions/settingv2.RawReceiptTemplates'
        type: array
      receipt_email_sms_message:
        $ref: '#/definitions/settingv2.ReceiptEmailSmsMessage'
      receipt_images:
        $ref: '#/definitions/settingv2.InfoReceiptImages'
      service_activation:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ServiceActivation'
      share_data_objects:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ShareDataObjects'
        type: array
      sharing_policy:
        items:
          $ref: '#/definitions/settingv2.SharingPolicy'
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InitiationMessageSettings:
    properties:
      email_logo:
        type: boolean
      email_message:
        type: boolean
      email_subject:
        type: boolean
      initiation_type:
        enum:
        - discount
        - credit
        - create_point
        - add_point
        - invoice
        example: discount
        type: string
      telephone_message:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InitiationMessages:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      initiation_type:
        type: string
      telephone_message:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InputRequest:
    properties:
      merchant_gcid:
        example: merchant01
        type: string
      merchant_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      set_accepted_thirdparty_values:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetAcceptedThirdpartyValues'
      set_barcode_default:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetBarcodeDefault'
      set_delete_receipt_object_after_processing:
        type: boolean
      set_external_url_messages:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetExternalURLMessages'
        type: array
      set_filter_settings:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetFilterSettings'
      set_initiation_messages:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetInitiationMessages'
        type: array
      set_receipt_email_sms_message:
        $ref: '#/definitions/settingv2.SetReceiptEmailSmsMessage'
      set_receipt_images:
        $ref: '#/definitions/settingv2.SetReceiptImages'
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.PointLogics:
    properties:
      point_logic:
        type: string
      point_logic_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.PointSchemes:
    properties:
      activated_point_logics:
        items:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ActivatedPointLogics'
        type: array
      allow_create:
        type: boolean
      assigned_scheme:
        type: boolean
      point_scheme:
        type: string
      point_scheme_name:
        type: string
      set_public:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ServiceActivation:
    properties:
      caas:
        type: boolean
      daas:
        type: boolean
      edaas:
        type: boolean
      evaas:
        type: boolean
      iaas:
        type: boolean
      psaas:
        type: boolean
      raas:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetAcceptedThirdpartyValues:
    properties:
      add_accepted_thirdparty_strings:
        items:
          type: string
        type: array
      remove_accepted_thirdparty_strings:
        items:
          type: string
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetBarcodeDefault:
    properties:
      barcode_encoding:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetExternalURLMessages:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      initiation_type:
        enum:
        - invite
        - finance
        - survey
        - consent
        - insurance
        example: invite
        type: string
      telephone_message:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetFilterSettings:
    properties:
      add_client_number_exceptions:
        items:
          type: string
        type: array
      global_filter_setting:
        $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.GlobalFilterSetting'
      remove_client_number_exceptions:
        items:
          type: string
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.SetInitiationMessages:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      initiation_type:
        enum:
        - discount
        - credit
        - create_point
        - add_point
        - invoice
        example: discount
        type: string
      telephone_message:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.ShareDataObjects:
    properties:
      share_data_number:
        type: string
      share_data_number_name:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_receiptv2_appuser_fetch.TimestampRequest:
    properties:
      all_data:
        $ref: '#/definitions/fetch.AllData'
      only_transnrs:
        type: boolean
      provider_gcid:
        type: string
    type: object
  github.com_zeipts_monolith_v2_models_receiptv2_appuser_fetch.TransactionNumberRequest:
    properties:
      provider_gcid:
        type: string
      zeipt_receipt_transnrs:
        items:
          type: string
        type: array
    type: object
  github.com_zeipts_monolith_v2_models_receiptv2_merchant_fetch.TimestampRequest:
    properties:
      all_data:
        $ref: '#/definitions/fetch.AllData'
      merchant_gcid:
        type: string
      only_transnrs:
        type: boolean
    type: object
  github.com_zeipts_monolith_v2_models_receiptv2_merchant_fetch.TransactionNumberRequest:
    properties:
      merchant_gcid:
        type: string
      zeipt_receipt_transnrs:
        items:
          type: string
        type: array
    type: object
  identificationv2.BankAccount:
    properties:
      bank_account_number:
        type: string
      zeipt_bank_account_transnr:
        type: string
    type: object
  identificationv2.BankAccountToken:
    properties:
      bank_account_token:
        type: string
      token_provider:
        type: string
      zeipt_bank_account_transnr:
        type: string
    type: object
  identificationv2.Card:
    properties:
      card_type:
        type: string
      last_digits:
        type: string
      token_expiration_date:
        type: string
      token_provider:
        enum:
        - verifone
        - nets
        type: string
      zeipt_card_token:
        type: string
      zeipt_card_transnr:
        type: string
    type: object
  identificationv2.DeleteRequest:
    properties:
      custom_customer_reference:
        items:
          type: string
        type: array
      delete_all_bank_accounts:
        type: boolean
      delete_all_cards:
        type: boolean
      delete_all_custom_customer_references:
        type: boolean
      delete_all_emails:
        type: boolean
      delete_all_telephones:
        type: boolean
      email_addresses:
        items:
          type: string
        type: array
      provider_gcid:
        example: user_1
        type: string
      telephones:
        items:
          $ref: '#/definitions/identificationv2.Telephone'
        type: array
      zeipt_bank_account_transnr:
        items:
          type: string
        type: array
      zeipt_card_transnr:
        items:
          type: string
        type: array
    required:
    - provider_gcid
    type: object
  identificationv2.RegisterRequest:
    properties:
      bank_account:
        $ref: '#/definitions/identificationv2.BankAccount'
      bank_account_token:
        $ref: '#/definitions/identificationv2.BankAccountToken'
      card:
        $ref: '#/definitions/identificationv2.Card'
      custom_customer_reference:
        type: string
      dynamic_customer_reference:
        type: boolean
      email_address:
        example: useremail@example.com
        format: email
        type: string
      generate_custom_customer_reference:
        type: boolean
      provider_gcid:
        example: user_1
        type: string
      telephone:
        $ref: '#/definitions/identificationv2.Telephone'
    required:
    - provider_gcid
    type: object
  identificationv2.RegisterResponse:
    properties:
      bank_account:
        $ref: '#/definitions/identificationv2.ResponseBankAccount'
      bank_account_token:
        $ref: '#/definitions/identificationv2.ResponseBankAccountToken'
      custom_customer_reference:
        type: string
      dynamic_customer_reference:
        type: string
      zeipt_card_transnr:
        type: string
    type: object
  identificationv2.ResponseBankAccount:
    properties:
      zeipt_bank_account_transnr:
        type: string
    type: object
  identificationv2.ResponseBankAccountToken:
    properties:
      zeipt_bank_account_transnr:
        type: string
    type: object
  identificationv2.Telephone:
    properties:
      country_calling_code:
        type: string
      number:
        type: string
    type: object
  invite.Permission:
    properties:
      description:
        type: string
      name:
        type: string
      ulid:
        type: string
    type: object
  invite.PostResponse:
    properties:
      id:
        type: integer
      ulid:
        type: string
    type: object
  invite.Request:
    properties:
      client_ids:
        example:
        - "123"
        - "456"
        - 01G2ZG7JXDZZCRBC6X7CDAYY0Q
        items:
          type: string
        type: array
      email:
        example: useremail@example.com
        format: email
        type: string
      permission_ids:
        description: Permission and client ids can be strings or ints
        example:
        - "123"
        - "456"
        - 01G2ZG7JXDZZCRBC6X7CDAYY0Q
        items:
          type: string
        type: array
      provider_ids:
        example:
        - "123"
        - "456"
        - 01G2ZG7JXDZZCRBC6X7CDAYY0Q
        items:
          type: string
        type: array
      role_ids:
        example:
        - "123"
        - "456"
        - 01G2ZG7JXDZZCRBC6X7CDAYY0Q
        items:
          type: string
        type: array
    required:
    - email
    type: object
  invite.ResponseData:
    properties:
      action:
        example: received
        type: string
      client_numbers:
        items:
          type: string
        type: array
      email:
        type: string
      id:
        example: 8493
        type: integer
      organization_name:
        type: string
      organization_number:
        type: string
      organization_suffix:
        type: string
      permissions:
        items:
          $ref: '#/definitions/invite.Permission'
        type: array
      provider_ids:
        example:
        - 01FK07P4QC26RMKYBA77XA0W1X
        items:
          type: string
        type: array
      roles:
        items:
          $ref: '#/definitions/invite.Role'
        type: array
      status:
        example: pending
        type: string
      token:
        type: string
      token_created:
        type: string
      ulid:
        example: 01FK07P4QC26RMKYBA77XA0W1X
        type: string
    type: object
  invite.Role:
    properties:
      name:
        type: string
      ulid:
        type: string
    type: object
  invite.UpdateRequest:
    properties:
      status:
        enum:
        - accepted
        - declined
        example: accepted
        type: string
    required:
    - status
    type: object
  locationv2.Response:
    properties:
      address:
        example: Øvre Slottsgate 18
        type: string
      city:
        example: Oslo
        type: string
      coords:
        description: 0 is Longitude, 1 is Latitude
        example:
        - 10.74274
        - 59.91318
        items:
          type: number
        type: array
      country_code:
        example: "NO"
        type: string
      id:
        example: 6786
        type: integer
      identification_levels:
        example:
        - 1
        - 2
        items:
          type: integer
        type: array
      settings:
        $ref: '#/definitions/locationv2.Settings'
        description: The filter settings of the retailer, if there are any whitelisted
          or blacklisted applications and the application_numbers of these
      store_name:
        example: Sebastian's Gulebøjer
        type: string
      zip_code:
        example: "0157"
        type: string
    type: object
  locationv2.Settings:
    properties:
      exceptions_to_global_filter:
        example:
        - 81945843-f79e-412b-af80-8f7bda69c5ae
        - 81945855-f79e-412b-af80-8f7bda69c5ae
        items:
          type: string
        type: array
      global_filter_whitelist_all:
        example: false
        type: boolean
    type: object
  logicv2.ActivateRequest:
    properties:
      client:
        $ref: '#/definitions/logicv2.Client'
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      discount_logic:
        example: 01AN4Z07BY79KA1307SR9X4MV3
        type: string
    required:
    - discount_logic
    type: object
  logicv2.ArtFinalPriceTriggers:
    properties:
      above_art_final_price:
        type: integer
      total_currency:
        type: string
    type: object
  logicv2.BarCode:
    properties:
      display_value:
        type: string
      encoding:
        type: string
    type: object
  logicv2.Client:
    properties:
      client_gcid:
        type: string
      client_type:
        enum:
        - merchant
        - application
        - brand
        example: merchant
        type: string
    type: object
  logicv2.CreateRequest:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      client:
        $ref: '#/definitions/logicv2.Client'
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      discount_logic_name:
        example: logic01
        type: string
      triggers:
        $ref: '#/definitions/logicv2.Triggers'
      view_text:
        type: string
      view_title:
        type: string
      write_logic:
        $ref: '#/definitions/logicv2.WriteLogic'
    required:
    - discount_logic_name
    type: object
  logicv2.DeactivateRequest:
    properties:
      client:
        $ref: '#/definitions/logicv2.Client'
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      discount_logic:
        example: 01AN4Z07BY79KA1307SR9X4MV3
        type: string
    required:
    - discount_logic
    type: object
  logicv2.DeleteRequest:
    properties:
      client:
        $ref: '#/definitions/logicv2.Client'
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      discount_logic:
        example: 01AN4Z07BY79KA1307SR9X4MV3
        type: string
    required:
    - discount_logic
    type: object
  logicv2.FetchRequest:
    properties:
      client:
        $ref: '#/definitions/logicv2.Client'
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      discount_logic:
        example: 01AN4Z07BY79KA1307SR9X4MV3
        type: string
    required:
    - discount_logic
    type: object
  logicv2.FetchResponse:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      discount_logic_name:
        type: string
      triggers:
        $ref: '#/definitions/logicv2.Triggers'
      view_text:
        type: string
      view_title:
        type: string
      write_logic:
        $ref: '#/definitions/logicv2.WriteLogic'
    type: object
  logicv2.FinalPriceTriggers:
    properties:
      above_final_price:
        type: integer
      total_currency:
        type: string
    type: object
  logicv2.GeneralTriggers:
    properties:
      art_final_price_triggers:
        $ref: '#/definitions/logicv2.ArtFinalPriceTriggers'
      art_quantity:
        type: integer
      art_quantity_objects:
        type: integer
      final_price_triggers:
        $ref: '#/definitions/logicv2.FinalPriceTriggers'
    type: object
  logicv2.TimestampTrigger:
    properties:
      after_time_of_day:
        type: string
      before_time_of_day:
        type: string
    type: object
  logicv2.Triggers:
    properties:
      all_of_article_numbers:
        items:
          type: string
        type: array
      any_of_article_numbers:
        items:
          type: string
        type: array
      general_triggers:
        $ref: '#/definitions/logicv2.GeneralTriggers'
      payment_method_types:
        items:
          type: string
        type: array
      timestamp_trigger:
        $ref: '#/definitions/logicv2.TimestampTrigger'
    type: object
  logicv2.UpdateRequest:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      client:
        $ref: '#/definitions/logicv2.Client'
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      discount_logic:
        example: 01AN4Z07BY79KA1307SR9X4MV3
        type: string
      discount_logic_name:
        example: logic01
        type: string
      triggers:
        $ref: '#/definitions/logicv2.Triggers'
      view_text:
        type: string
      view_title:
        type: string
      write_logic:
        $ref: '#/definitions/logicv2.WriteLogic'
    required:
    - discount_logic
    - discount_logic_name
    type: object
  logicv2.WriteLogic:
    properties:
      amount:
        type: integer
      art_numbers:
        items:
          type: string
        type: array
      background_image_uri:
        type: string
      bar_code:
        $ref: '#/definitions/logicv2.BarCode'
      box_image_uri:
        type: string
      currency:
        type: string
      discount_logic:
        type: string
      html_template:
        type: string
      percentage:
        type: integer
      thumbnail_uri:
        type: string
      ttl_in_minutes:
        type: integer
    type: object
  monolith.echoResponse:
    properties:
      message:
        example: Welcome to Zeipt services
        type: string
    type: object
  permissions.Permission:
    properties:
      description:
        type: string
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      ulid:
        type: string
    type: object
  permissionv2.GrantPermission:
    properties:
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      trusted_third_party:
        type: boolean
      user_lookup:
        type: boolean
    type: object
  permissionv2.RemovePermission:
    properties:
      client_number:
        example: 81945843-f79e-412b-af80-8f7bda69c5ae
        type: string
      trusted_third_party:
        type: boolean
      user_lookup:
        type: boolean
    type: object
  receipt.CreateRequest:
    properties:
      articles:
        items:
          $ref: '#/definitions/receiptv2.Article'
        type: array
      customer_deliveries:
        description: TODO validation at least 1 MISSING CUSTOMER Value
        items:
          $ref: '#/definitions/receiptv2.CustomerDelivery'
        type: array
      extended_receipt_logic:
        $ref: '#/definitions/receiptv2.ExtendedLogic'
      extra_receipt_view:
        $ref: '#/definitions/receiptv2.ExtraView'
      invoices:
        items:
          $ref: '#/definitions/receiptv2.Invoice'
        type: array
      merchant:
        $ref: '#/definitions/receiptv2.Merchant'
      payments:
        description: TODO at least one payment or invoice
        items:
          $ref: '#/definitions/receiptv2.Payment'
        type: array
      total:
        $ref: '#/definitions/receiptv2.Total'
    type: object
  receiptv2.AddSchemePoint:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      no_addition:
        type: boolean
      point_scheme:
        type: string
      points:
        minimum: 0
        type: number
      reference:
        type: string
    type: object
  receiptv2.Addition:
    properties:
      total_recycling:
        minimum: 0
        type: number
      total_tip:
        minimum: 0
        type: number
      total_vat:
        minimum: 0
        type: number
    type: object
  receiptv2.Addition2:
    properties:
      art_recycling_fee:
        minimum: 0
        type: number
      quantity_recycling_fee:
        minimum: 0
        type: number
      vat_groups:
        items:
          $ref: '#/definitions/receiptv2.VatGroup'
        type: array
    type: object
  receiptv2.ArtOriginalValues:
    properties:
      art_original_price:
        minimum: 0
        type: number
      quantity_original_price:
        minimum: 0
        type: number
    type: object
  receiptv2.Article:
    properties:
      additions:
        $ref: '#/definitions/receiptv2.Addition2'
      art_description:
        type: string
      art_final_price:
        minimum: 0
        type: number
      art_name:
        type: string
      art_number:
        type: string
      art_original_values:
        $ref: '#/definitions/receiptv2.ArtOriginalValues'
      art_price_with_vat:
        minimum: 0
        type: number
      art_price_without_vat:
        minimum: 0
        type: number
      art_saft_articlegroup_id:
        type: string
      bar_codes:
        items:
          $ref: '#/definitions/receiptv2.BarCodeWithValue'
        type: array
      button_text:
        type: string
      credit:
        $ref: '#/definitions/receiptv2.Credit'
      geographic:
        $ref: '#/definitions/receiptv2.Geographic'
      html_styling:
        type: string
      marketing_text:
        type: string
      merchant_reference:
        type: string
      merchant_sorting:
        type: string
      quantity:
        minimum: 0
        type: number
      quantity_final_price:
        minimum: 0
        type: number
      quantity_price_with_vat:
        minimum: 0
        type: number
      quantity_price_without_vat:
        minimum: 0
        type: number
      quantity_type:
        maxLength: 3
        minLength: 1
        type: string
      reference_of_origin:
        $ref: '#/definitions/receiptv2.ReferenceOfOrigin'
      return:
        type: boolean
      specified:
        $ref: '#/definitions/receiptv2.Specified'
      subtractions:
        $ref: '#/definitions/receiptv2.Subtraction'
      type:
        enum:
        - credit
        - ticket
        type: string
    required:
    - art_final_price
    type: object
  receiptv2.AssignedCredit:
    properties:
      amount:
        minimum: 0
        type: number
      amount_remaining:
        minimum: 0
        type: number
      logic:
        type: string
      reference:
        type: string
      ticket:
        type: boolean
    type: object
  receiptv2.AssignedReferences:
    properties:
      credits:
        items:
          $ref: '#/definitions/receiptv2.AssignedCredit'
        type: array
      discounts:
        items:
          $ref: '#/definitions/receiptv2.Discount5'
        type: array
      point_schemes:
        items:
          $ref: '#/definitions/receiptv2.PointScheme2'
        type: array
    type: object
  receiptv2.BarCodeWithValue:
    properties:
      display_value:
        type: string
      encoding:
        enum:
        - code_128
        - code_39
        - ean_13
        - ean_8
        - interleaved_2_of_5
        - qr
        type: string
      value:
        type: string
    required:
    - encoding
    - value
    type: object
  receiptv2.CompanyBuyer:
    properties:
      company_common_name:
        type: string
      company_country_code:
        type: string
      company_name:
        type: string
      company_number:
        type: string
      company_suffix:
        type: string
    type: object
  receiptv2.ContactInfo:
    properties:
      address:
        type: string
      city:
        type: string
      country_code:
        type: string
      email:
        type: string
      name:
        type: string
      telephone:
        $ref: '#/definitions/receiptv2.Phone'
      website:
        type: string
      zip_code:
        type: string
    type: object
  receiptv2.CreatePointScheme:
    properties:
      allready_created:
        type: boolean
      application_ownerships:
        items:
          type: string
        type: array
      bar_code:
        $ref: '#/definitions/receiptv2.BarCodeWithValue'
      point_scheme:
        type: string
      points:
        minimum: 0
        type: number
      reference:
        type: string
    type: object
  receiptv2.CreatePointScheme2:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      button_text:
        type: string
      generate:
        type: boolean
      html_styling:
        type: string
      marketing_text:
        type: string
      merchant_reference:
        type: string
      merchant_sorting:
        type: string
      point_scheme:
        type: string
      points:
        minimum: 0
        type: number
      points_name:
        type: string
    type: object
  receiptv2.Credit:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      generate:
        type: boolean
      logic:
        type: string
    type: object
  receiptv2.CreditReference:
    properties:
      bar_code:
        $ref: '#/definitions/receiptv2.BarCodeWithValue'
      credit_logic:
        type: string
      logic_group:
        type: string
      reference:
        type: string
      ticket:
        type: boolean
      ticket_reference:
        type: string
    type: object
  receiptv2.CreditWithBarCodeValue:
    properties:
      bar_code_value:
        type: string
      logic:
        type: string
      merchant_reference:
        type: string
      merchant_sorting:
        type: string
      reference:
        type: string
    type: object
  receiptv2.CustomerBuyer:
    properties:
      customer_first_name:
        type: string
      customer_surname:
        type: string
      customer_telephone:
        $ref: '#/definitions/receiptv2.Phone'
    type: object
  receiptv2.CustomerDelivery:
    properties:
      application_number:
        type: string
      custom_customer_reference:
        type: string
      email:
        $ref: '#/definitions/receiptv2.Email'
      payment_medium_reference:
        $ref: '#/definitions/receiptv2.PaymentMediumReference'
      telephone:
        $ref: '#/definitions/receiptv2.PhoneWithSMS'
    type: object
  receiptv2.Discount3:
    properties:
      amount:
        minimum: 0
        type: number
      application_ownerships:
        items:
          type: string
        type: array
      art_numbers:
        items:
          type: string
        type: array
      bar_code:
        $ref: '#/definitions/receiptv2.BarCodeWithValue'
      button_text:
        type: string
      expiration_date:
        type: string
      generate:
        type: boolean
      html_styling:
        type: string
      logic:
        type: string
      marketing_text:
        type: string
      merchant_reference:
        type: string
      merchant_sorting:
        type: string
      percentage:
        minimum: 0
        type: number
    type: object
  receiptv2.Discount4:
    properties:
      amount:
        minimum: 0
        type: number
      cashier_reference:
        type: string
      logic_group:
        type: string
      percentage:
        minimum: 0
        type: number
      reference:
        type: string
    type: object
  receiptv2.Discount5:
    properties:
      logic_group:
        type: string
      reference:
        type: string
    type: object
  receiptv2.Discount6:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      bar_code:
        $ref: '#/definitions/receiptv2.GeneratedBarCode'
      discount_logic:
        type: string
      logic_group:
        type: string
      reference:
        type: string
    type: object
  receiptv2.Email:
    properties:
      email_address:
        type: string
      email_delivery:
        type: boolean
    required:
    - email_address
    type: object
  receiptv2.ExtendedLogic:
    properties:
      add_scheme_points:
        items:
          $ref: '#/definitions/receiptv2.PointScheme'
        type: array
      create_point_scheme:
        items:
          $ref: '#/definitions/receiptv2.CreatePointScheme2'
        type: array
      discounts:
        items:
          $ref: '#/definitions/receiptv2.Discount3'
        type: array
      external_view_logics:
        items:
          $ref: '#/definitions/receiptv2.ExternalViewLogic'
        type: array
    type: object
  receiptv2.ExtendedObject:
    properties:
      add_scheme_points:
        items:
          $ref: '#/definitions/receiptv2.AddSchemePoint'
        type: array
      create_point_scheme:
        items:
          $ref: '#/definitions/receiptv2.CreatePointScheme'
        type: array
      credits:
        items:
          $ref: '#/definitions/receiptv2.ResponseCredit'
        type: array
      discounts:
        items:
          $ref: '#/definitions/receiptv2.Discount6'
        type: array
      invoices:
        items:
          $ref: '#/definitions/receiptv2.Invoice2'
        type: array
    type: object
  receiptv2.ExtendedReference:
    properties:
      extended_object_type:
        enum:
        - discount
        - credit
        - create_point
        - add_point
        - invoice
        type: string
      reference:
        type: string
    required:
    - extended_object_type
    - reference
    type: object
  receiptv2.ExtendedViewLogic:
    properties:
      add_scheme_points:
        $ref: '#/definitions/receiptv2.PointScheme2'
      create_point_scheme:
        $ref: '#/definitions/receiptv2.PointScheme3'
      credit_logic:
        type: string
      discount_logic:
        type: string
      external_url_address:
        type: string
      external_url_type:
        type: string
      share_data_number:
        type: string
    type: object
  receiptv2.ExternalViewLogic:
    properties:
      add_scheme_points:
        $ref: '#/definitions/receiptv2.PointSchemeWithReference'
      logic:
        type: string
    required:
    - logic
    type: object
  receiptv2.ExtraSumValue:
    properties:
      final_price_rounded:
        minimum: 0
        type: number
      total_discount:
        minimum: 0
        type: number
      total_return:
        minimum: 0
        type: number
    type: object
  receiptv2.ExtraView:
    properties:
      bar_code:
        $ref: '#/definitions/receiptv2.BarCodeWithValue'
      cashier_goodbye_message:
        maxLength: 200
        type: string
      company_buyers:
        items:
          $ref: '#/definitions/receiptv2.CompanyBuyer'
        type: array
      customer_buyers:
        items:
          $ref: '#/definitions/receiptv2.CustomerBuyer'
        type: array
      opening_hours:
        maxLength: 200
        type: string
      operator_id:
        type: string
      operator_name:
        type: string
      operator_text:
        maxLength: 200
        type: string
      return_policy:
        $ref: '#/definitions/receiptv2.ReturnPolicy'
      seller_id:
        type: string
      seller_name:
        type: string
    type: object
  receiptv2.GeneratedBarCode:
    properties:
      display_value:
        type: string
      encoding:
        type: string
      generated_by_zeipt:
        type: boolean
      value:
        type: string
    type: object
  receiptv2.Geographic:
    properties:
      arrival_reference:
        type: string
      departure_reference:
        type: string
      distance_value:
        minimum: 0
        type: number
      distance_value_definition:
        enum:
        - km
        - mi
        type: string
      end_location:
        $ref: '#/definitions/receiptv2.Location'
      start_location:
        $ref: '#/definitions/receiptv2.Location'
    type: object
  receiptv2.InviteItem:
    properties:
      custom_customer_references:
        type: boolean
      emails:
        type: boolean
      one_time_key:
        example: 01AN4Z07BY79KA1307SR9X4MV3
        type: string
      payment_medium_references:
        type: boolean
      telephones:
        type: boolean
    required:
    - one_time_key
    type: object
  receiptv2.Invoice:
    properties:
      account_number:
        type: string
      application_ownerships:
        items:
          type: string
        type: array
      button_text:
        type: string
      currency:
        type: string
      due_date:
        type: string
      generate:
        type: boolean
      html_styling:
        type: string
      invoice_number:
        type: string
      marketing_text:
        type: string
      national_customer_invoice_number:
        type: string
      payment_amount:
        minimum: 0
        type: number
      seller:
        $ref: '#/definitions/receiptv2.Seller'
      vat_amount:
        minimum: 0
        type: number
      vat_percentage:
        minimum: 0
        type: number
    required:
    - account_number
    - due_date
    - invoice_number
    type: object
  receiptv2.Invoice2:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      invoice_number:
        type: string
      reference:
        type: string
    type: object
  receiptv2.Location:
    properties:
      address:
        type: string
      city:
        type: string
      country_code:
        type: string
      zip_code:
        type: string
    type: object
  receiptv2.LookupRequest:
    properties:
      application_number:
        type: string
      custom_customer_reference:
        type: string
      email_address:
        type: string
      issuer:
        type: string
      merchant_gcid:
        type: string
      payment_medium_reference:
        $ref: '#/definitions/receiptv2.PaymentMediumReference'
      telephone:
        $ref: '#/definitions/receiptv2.Phone'
    type: object
  receiptv2.LookupResponse:
    properties:
      identification_types:
        items:
          type: string
        type: array
    type: object
  receiptv2.Merchant:
    properties:
      email:
        type: string
      merchant_country_code:
        type: string
      merchant_gcid:
        type: string
      org_number:
        type: string
      purchase_location:
        $ref: '#/definitions/receiptv2.PurchaseLocation'
      telephone:
        $ref: '#/definitions/receiptv2.Phone'
      travel_reference:
        $ref: '#/definitions/receiptv2.TravelReference'
      website:
        type: string
    required:
    - merchant_country_code
    - merchant_gcid
    - org_number
    type: object
  receiptv2.OneTimeKeys:
    properties:
      otk:
        type: string
      otk_type:
        enum:
        - invite
        - finance
        - survey
        - consent
        - insurance
        type: string
    required:
    - otk
    - otk_type
    type: object
  receiptv2.Payment:
    properties:
      aid_nr:
        type: string
      application_ownerships:
        items:
          type: string
        type: array
      bank_terminal_id:
        type: string
      credit:
        $ref: '#/definitions/receiptv2.CreditWithBarCodeValue'
      currency:
        type: string
      exchange_rate:
        minimum: 0
        type: number
      identification:
        type: boolean
      issuer:
        type: string
      masked_pan:
        type: string
      moneyback:
        type: boolean
      national_merchant_number:
        type: string
      payment_amount:
        minimum: 0
        type: number
      payment_method:
        enum:
        - credit_card
        - debit_card
        - cash
        - credit_bank
        - debit_bank
        - own_defined
        type: string
      payment_method_owner:
        type: string
      payment_method_type:
        enum:
        - bankaxept
        - visa
        - mastercard
        - amex
        - point_scheme
        - gift_card
        - other
        type: string
      point_scheme:
        $ref: '#/definitions/receiptv2.PaymentPointScheme'
      ref_nr:
        type: string
      response_code:
        type: string
      timestamp:
        type: string
      tip_amount:
        minimum: 0
        type: number
      tsi_nr:
        type: string
      tvr_nr:
        type: string
    required:
    - payment_method
    - timestamp
    type: object
  receiptv2.PaymentMediumReference:
    properties:
      token_provider:
        type: string
      zeipt_card_token:
        type: string
    type: object
  receiptv2.PaymentPointScheme:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      merchant_reference:
        type: string
      merchant_sorting:
        type: string
      point_scheme:
        type: string
      points:
        minimum: 0
        type: number
      points_name:
        type: string
      reference:
        type: string
    type: object
  receiptv2.Phone:
    properties:
      country_calling_code:
        type: string
      number:
        type: string
    type: object
  receiptv2.PhoneWithSMS:
    properties:
      country_calling_code:
        type: string
      number:
        type: string
      sms_delivery:
        type: boolean
    type: object
  receiptv2.PointScheme:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      button_text:
        type: string
      generate:
        type: boolean
      html_styling:
        type: string
      marketing_text:
        type: string
      merchant_reference:
        type: string
      merchant_sorting:
        type: string
      point_scheme:
        type: string
      points:
        minimum: 0
        type: number
      points_name:
        type: string
      reference:
        type: string
    type: object
  receiptv2.PointScheme2:
    properties:
      point_scheme:
        type: string
      points:
        minimum: 0
        type: number
      reference:
        type: string
    type: object
  receiptv2.PointScheme3:
    properties:
      point_scheme:
        type: string
      points:
        minimum: 0
        type: number
    type: object
  receiptv2.PointSchemeWithReference:
    properties:
      point_scheme:
        type: string
      points:
        minimum: 0
        type: number
      points_name:
        type: string
      reference:
        type: string
    required:
    - point_scheme
    type: object
  receiptv2.PurchaseLocation:
    properties:
      address:
        type: string
      cashier_number:
        type: string
      city:
        type: string
      purchase_country_code:
        type: string
      store_name:
        type: string
      store_number:
        type: string
      zip_code:
        type: string
    required:
    - address
    - city
    - purchase_country_code
    - store_name
    - zip_code
    type: object
  receiptv2.ReferenceOfOrigin:
    properties:
      reason_for_return:
        type: string
      reference_of_origin_receipt:
        type: string
    required:
    - reference_of_origin_receipt
    type: object
  receiptv2.ResponseCredit:
    properties:
      application_ownerships:
        items:
          type: string
        type: array
      references:
        items:
          $ref: '#/definitions/receiptv2.CreditReference'
        type: array
    type: object
  receiptv2.ReturnPolicy:
    properties:
      policy_description:
        maxLength: 200
        type: string
      policy_end_date:
        type: string
    required:
    - policy_end_date
    type: object
  receiptv2.Seller:
    properties:
      contact_info:
        $ref: '#/definitions/receiptv2.ContactInfo'
      country_code:
        type: string
      org_number:
        type: string
    type: object
  receiptv2.SendRequest:
    properties:
      articles:
        items:
          $ref: '#/definitions/receiptv2.Article'
        type: array
      customer_deliveries:
        items:
          $ref: '#/definitions/receiptv2.CustomerDelivery'
        type: array
      data_one_time_keys:
        example:
        - 01AN4Z07BY79KA1307SR9X4MV3
        - 01AN4Z07BY79KA1307SR0X4MV3
        items:
          type: string
        type: array
      extended_receipt_logic:
        $ref: '#/definitions/receiptv2.ExtendedLogic'
      extra_receipt_view:
        $ref: '#/definitions/receiptv2.ExtraView'
      invites:
        items:
          $ref: '#/definitions/receiptv2.InviteItem'
        type: array
      invoices:
        items:
          $ref: '#/definitions/receiptv2.Invoice'
        type: array
      merchant:
        $ref: '#/definitions/receiptv2.Merchant'
      payments:
        items:
          $ref: '#/definitions/receiptv2.Payment'
        type: array
      receipt_description:
        type: string
      receipt_number:
        type: string
      receipt_producer_certificate:
        type: string
      receipt_type:
        enum:
        - elektronisk salgskvittering
        - elektronisk returkvittering
        - elektronisk proforma-kvittering
        - elektronisk treningskvittering
        - elektronisk utleveringsseddel
        type: string
      relate_extended_references:
        items:
          $ref: '#/definitions/receiptv2.ExtendedReference'
        type: array
      relate_one_time_keys:
        items:
          $ref: '#/definitions/receiptv2.OneTimeKeys'
        type: array
      relate_order_numbers:
        items:
          type: string
        type: array
      timestamp:
        type: string
      total:
        $ref: '#/definitions/receiptv2.Total'
      version:
        enum:
        - 2.1.0
        example: 2.1.0
        type: string
    required:
    - merchant
    - receipt_number
    - receipt_type
    - timestamp
    - total
    type: object
  receiptv2.SendResponse:
    properties:
      assigned_references_used:
        $ref: '#/definitions/receiptv2.AssignedReferences'
      bar_code:
        $ref: '#/definitions/receiptv2.BarCodeWithValue'
      extended_objects:
        $ref: '#/definitions/receiptv2.ExtendedObject'
      extended_view_logics:
        items:
          $ref: '#/definitions/receiptv2.ExtendedViewLogic'
        type: array
      un_assigned_references_saved:
        $ref: '#/definitions/receiptv2.UnassignedReferences'
      zeipt_receipt_transr:
        type: string
      zeipt_view_logics:
        items:
          $ref: '#/definitions/receiptv2.ViewLogic2'
        type: array
    type: object
  receiptv2.Specified:
    properties:
      entrance:
        type: string
      event_ending:
        type: string
      event_start:
        type: string
      expiration_date:
        type: string
      floor_number:
        type: string
      room_number:
        type: string
      row_number:
        type: string
      seat_number:
        type: string
    type: object
  receiptv2.Subtraction:
    properties:
      discounts:
        items:
          $ref: '#/definitions/receiptv2.SubtractionDiscount'
        type: array
    type: object
  receiptv2.SubtractionDiscount:
    properties:
      amount:
        minimum: 0
        type: number
      bar_code_value:
        type: string
      description:
        type: string
      logic:
        type: string
      merchant_reference:
        type: string
      merchant_sorting:
        type: string
      per_quantity:
        type: boolean
      percentage:
        minimum: 0
        type: number
      reference:
        type: string
    type: object
  receiptv2.Total:
    properties:
      additions:
        $ref: '#/definitions/receiptv2.Addition'
      extra_sum_values:
        $ref: '#/definitions/receiptv2.ExtraSumValue'
      final_price:
        minimum: 0
        type: number
      subtractions:
        $ref: '#/definitions/receiptv2.TotalSubtraction'
      total_art_price_with_vat:
        minimum: 0
        type: number
      total_currency:
        type: string
      total_moneyback:
        type: boolean
      total_price_with_vat:
        minimum: 0
        type: number
      total_price_without_vat:
        minimum: 0
        type: number
      total_vat_name:
        type: string
    required:
    - additions
    - final_price
    type: object
  receiptv2.TotalSubtraction:
    properties:
      discounts:
        items:
          $ref: '#/definitions/receiptv2.TotalSubtractionDiscount'
        type: array
    type: object
  receiptv2.TotalSubtractionDiscount:
    properties:
      amount:
        minimum: 0
        type: number
      bar_code_value:
        type: string
      description:
        type: string
      logic:
        type: string
      merchant_reference:
        type: string
      merchant_sorting:
        type: string
      percentage:
        minimum: 0
        type: number
      reference:
        type: string
    type: object
  receiptv2.TravelReference:
    properties:
      car_license_plate:
        type: string
      travel_company_certification:
        type: string
      travel_driver_certification:
        type: string
      travel_driver_id:
        type: string
      travel_driver_name:
        type: string
    required:
    - car_license_plate
    - travel_driver_id
    - travel_driver_name
    type: object
  receiptv2.UnassignedCredit:
    properties:
      amount:
        minimum: 0
        type: number
      cashier_reference:
        type: string
      currency:
        type: string
      logic:
        type: string
      reference:
        type: string
    type: object
  receiptv2.UnassignedReferences:
    properties:
      credits:
        items:
          $ref: '#/definitions/receiptv2.UnassignedCredit'
        type: array
      discounts:
        items:
          $ref: '#/definitions/receiptv2.Discount4'
        type: array
      point_schemes:
        items:
          $ref: '#/definitions/receiptv2.PointScheme2'
        type: array
    type: object
  receiptv2.VatGroup:
    properties:
      amount:
        minimum: 0
        type: number
      base_amount:
        minimum: 0
        type: number
      code:
        type: string
      name:
        type: string
      percentage:
        minimum: 0
        type: number
    type: object
  receiptv2.ViewLogic2:
    properties:
      zeipt_template_logic:
        type: string
      zeipt_view_address:
        type: string
      zeipt_view_type:
        type: string
    type: object
  roles.Role:
    properties:
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/permissions.Permission'
        type: array
      ulid:
        type: string
    type: object
  session.CreateRequest:
    properties:
      password:
        example: PLAsdje4U301aoiA
        minLength: 8
        type: string
      username:
        example: useremail@example.com
        minLength: 1
        type: string
    required:
    - password
    - username
    type: object
  settingv2.AddFinalPriceFilter:
    properties:
      above_final_price:
        type: number
      total_currency:
        type: string
    type: object
  settingv2.CardRegisterSettings:
    properties:
      failure_url:
        type: boolean
      success_url:
        type: boolean
    type: object
  settingv2.CardRegisterURL:
    properties:
      failure_url:
        type: string
      success_url:
        type: string
    type: object
  settingv2.DefaultTimestampFilter:
    properties:
      after_time_of_day:
        type: boolean
      before_time_of_day:
        type: boolean
    type: object
  settingv2.ExtendedFilter:
    properties:
      final_price_filter:
        items:
          $ref: '#/definitions/settingv2.FinalPriceFilter'
        type: array
      timestamp_filter:
        $ref: '#/definitions/settingv2.TimestampFilter'
    type: object
  settingv2.ExtendedFilterSettings:
    properties:
      final_price_filter:
        type: boolean
      timestamp_filter:
        $ref: '#/definitions/settingv2.DefaultTimestampFilter'
    type: object
  settingv2.FinalPriceFilter:
    properties:
      above_final_price:
        type: number
      total_currency:
        type: string
    type: object
  settingv2.FollowPolicy:
    properties:
      follow_assigned_point_scheme:
        type: string
      follow_group_default_encoding:
        type: string
      follow_group_direct_delivery_message:
        type: string
      follow_group_filter:
        type: string
      follow_group_permission:
        type: string
      follow_group_receipt_logo:
        type: string
      follow_group_receipt_storage:
        type: string
      follow_group_thirdparty:
        type: string
    type: object
  settingv2.InfoGlobalFilterSetting:
    properties:
      whitelist_all:
        type: boolean
    type: object
  settingv2.InfoReceiptImages:
    properties:
      merchant_logo:
        type: string
      merchant_thumbnail:
        type: string
    type: object
  settingv2.RawReceiptInputExamples:
    properties:
      example_transnr:
        type: string
      raw_receipt_input_example_name:
        type: string
    type: object
  settingv2.RawReceiptTemplates:
    properties:
      activated_raw_receipt_template:
        type: boolean
      latest_example_transnr:
        type: string
      raw_receipt_template_name:
        type: string
      template_number:
        type: string
    type: object
  settingv2.ReceiptEmailSmsMessage:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      telephone_message:
        type: string
    type: object
  settingv2.ReceiptEmailSmsSettings:
    properties:
      email_logo:
        type: boolean
      email_message:
        type: boolean
      email_subject:
        type: boolean
      telephone_message:
        type: boolean
    type: object
  settingv2.ReceiptImages:
    properties:
      merchant_logo:
        type: boolean
      merchant_thumbnail:
        type: boolean
    type: object
  settingv2.RemoveFinalPriceFilter:
    properties:
      above_final_price:
        type: number
      total_currency:
        type: string
    type: object
  settingv2.ResponseGlobalFilterSetting:
    properties:
      whitelist_all:
        type: boolean
    type: object
  settingv2.SetCardRegisterURL:
    properties:
      failure_url:
        type: string
      success_url:
        type: string
    type: object
  settingv2.SetExtendedFilter:
    properties:
      add_final_price_filter:
        items:
          $ref: '#/definitions/settingv2.AddFinalPriceFilter'
        type: array
      remove_final_price_filter:
        items:
          $ref: '#/definitions/settingv2.RemoveFinalPriceFilter'
        type: array
      timestamp_filter:
        $ref: '#/definitions/settingv2.TimestampFilter'
    type: object
  settingv2.SetReceiptEmailSmsMessage:
    properties:
      email_logo:
        type: string
      email_message:
        type: string
      email_subject:
        type: string
      telephone_message:
        type: string
    type: object
  settingv2.SetReceiptImages:
    properties:
      merchant_logo:
        type: string
      merchant_thumbnail:
        type: string
    type: object
  settingv2.SetReceiptStorageSettings:
    properties:
      delete_receipt_object_after_read:
        type: boolean
    type: object
  settingv2.SharingPolicy:
    properties:
      brand_number:
        type: string
      sharing_of_credits_references:
        type: boolean
      sharing_of_direct_delivery_id:
        type: boolean
      sharing_of_discount_references:
        type: boolean
      sharing_of_receipts:
        type: boolean
    type: object
  settingv2.TimestampFilter:
    properties:
      after_time_of_day:
        type: string
      before_time_of_day:
        type: string
    type: object
  statisticsv2.SegmentResponse:
    properties:
      count:
        example: 9023020
        type: integer
      detailed:
        items:
          $ref: '#/definitions/statisticsv2.Statistic'
        type: array
      segment:
        additionalProperties:
          type: string
        example:
          2021-11: "29834"
          2021-12: "38948"
          2022-01: "39238"
          2022-02: "43242"
        type: object
    type: object
  statisticsv2.Statistic:
    properties:
      additional_data:
        items:
          $ref: '#/definitions/statisticsv2.StatisticSegment'
        type: array
      client_number:
        example: 01G1QSNSE2THEFPKYCGCRMNRFX
        type: string
      recorded_at:
        example: 12ee6139-7efd-4409-9428-426ec39a072b
        type: string
      request_size:
        description: in bytes
        example: 8839484
        type: integer
      request_time:
        description: in nanoseconds
        example: 230203
        type: integer
      transaction_number:
        example: 01G1QSNSE2THEFPKYCGCRMNRFX
        type: string
    type: object
  statisticsv2.StatisticSegment:
    properties:
      key:
        example: email
        type: string
      value:
        example: "3"
        type: string
    type: object
  tokens.TokenRequest:
    properties:
      client_numbers:
        items:
          type: string
        type: array
      permission_ulidss:
        items:
          type: string
        type: array
      provider_ids:
        items:
          type: string
        type: array
      role_ulids:
        items:
          type: string
        type: array
    type: object
  tokens.TokenResponse:
    properties:
      expire_at:
        type: string
      token_value:
        type: string
    type: object
  users.CreateRequest:
    properties:
      email:
        example: useremail@example.com
        format: email
        type: string
      password:
        example: PLAsdje4U301aoiA
        format: password
        minLength: 8
        type: string
      type:
        description: TODO How does the type affect the user? Why is it needed?
        enum:
        - merchant
        - application
        example: merchant
        type: string
    required:
    - email
    - password
    - type
    type: object
  users.CreateResponse:
    properties:
      id:
        type: integer
    type: object
  users.Permission:
    properties:
      name:
        type: string
      permission_ulid:
        type: string
    type: object
  users.PermissionRoleRequest:
    properties:
      clients:
        description: array of client numbers
        items:
          type: string
        type: array
      providers:
        description: array of pids
        items:
          type: string
        type: array
    type: object
  users.Role:
    properties:
      name:
        type: string
      role_ulid:
        type: string
    type: object
  users.UserInfo:
    properties:
      dgcid:
        type: string
      email:
        type: string
      name:
        type: string
      permissions:
        items:
          $ref: '#/definitions/users.Permission'
        type: array
      roles:
        items:
          $ref: '#/definitions/users.Role'
        type: array
    type: object
  users.UsersResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/users.UserInfo'
        type: array
    type: object
  userv2.Cards:
    properties:
      card_type:
        type: string
      last_digits:
        type: string
      token_expiration_date:
        type: string
      zeipt_card_transnr:
        type: string
    type: object
  userv2.DeleteRequest:
    properties:
      provider_gcid:
        example: user_1
        type: string
    required:
    - provider_gcid
    type: object
  userv2.IDList:
    properties:
      cards:
        items:
          $ref: '#/definitions/userv2.Cards'
        type: array
      custom_customer_references:
        items:
          type: string
        type: array
      dynamic_customer_references:
        items:
          type: string
        type: array
      email_addresses:
        items:
          type: string
        type: array
      telephones:
        items:
          $ref: '#/definitions/userv2.Telephones'
        type: array
      zeipt_bank_account_transnrs:
        items:
          type: string
        type: array
    type: object
  userv2.InfoRequest:
    properties:
      credits_reference_list:
        type: boolean
      discount_reference_list:
        type: boolean
      id_list:
        type: boolean
      invoice_reference_list:
        type: boolean
      point_object_reference_list:
        type: boolean
      provider_gcid:
        example: user_1
        type: string
      zeipt_card_transnrs:
        items:
          type: string
        type: array
      zeipt_receipt_transnr_list:
        type: boolean
    required:
    - provider_gcid
    type: object
  userv2.InfoResponse:
    properties:
      application_number:
        type: string
      credit_references:
        items:
          type: string
        type: array
      discount_references:
        items:
          type: string
        type: array
      id_list:
        $ref: '#/definitions/userv2.IDList'
      invoice_references:
        items:
          type: string
        type: array
      point_object_references:
        items:
          type: string
        type: array
      zeipt_receipt_transnrs:
        items:
          type: string
        type: array
    type: object
  userv2.RegisterRequest:
    properties:
      application_gcid:
        example: app_1
        type: string
      provider_gcid:
        example: user_1
        type: string
    required:
    - application_gcid
    - provider_gcid
    type: object
  userv2.Telephones:
    properties:
      country_calling_code:
        type: string
      number:
        type: string
    type: object
  webhookv2.InfoRequest:
    properties:
      pid:
        type: string
    type: object
  webhookv2.MessageRequest:
    properties:
      pid:
        type: string
      zeipt_receipt_transnrs:
        items:
          type: string
        type: array
    type: object
  webhookv2.RegisterRequest:
    properties:
      pid:
        type: string
      webhooks:
        items:
          $ref: '#/definitions/webhookv2.Webhook'
        type: array
    required:
    - pid
    - webhooks
    type: object
  webhookv2.UpdateRequest:
    properties:
      delete_hmac_token:
        type: boolean
      delete_webhooks:
        type: boolean
      hmac_token:
        type: string
      message_types:
        items:
          type: string
        type: array
      pid:
        type: string
      webhooks:
        items:
          type: string
        type: array
    required:
    - webhooks
    type: object
  webhookv2.Webhook:
    properties:
      hmac_token:
        type: string
      message_types:
        items:
          type: string
        type: array
      webhook_url:
        type: string
    required:
    - message_types
    - webhook_url
    type: object
  webhookv2.WebhookResponse:
    properties:
      hmac_token:
        type: string
      message_types:
        items:
          type: string
        type: array
      pid:
        type: string
      url:
        type: string
    type: object
info:
  contact:
    email: support@zeipt.com
    name: Zeipt API Support
  description: This is the documentation for the Zeipt API. The specification is specific
    to the Monolith service and all routes may not be relevant if other services still
    handle some routes.
  title: Zeipt API
  version: 3.0.0
paths:
  /app/user/delete:
    post:
      consumes:
      - application/json
      description: Handles delete of a user
      parameters:
      - description: payload to delete a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/userv2.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: user delete
      tags:
      - V2 User
  /app/user/identifications/delete:
    post:
      consumes:
      - application/json
      description: Handles the deletion of an Value
      parameters:
      - description: payload to delete an Value
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/identificationv2.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: identification delete
      tags:
      - V2 User
  /app/user/identifications/register:
    post:
      consumes:
      - application/json
      description: Handles the registration of an Value
      parameters:
      - description: payload to register an identifier for a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/identificationv2.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/identificationv2.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: identification registration
      tags:
      - V2 User
  /app/user/identifications/verify/{token}:
    get:
      description: Handles the verification of identifications for users
      parameters:
      - description: The token used to verify the identification
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
      summary: identification verification
      tags:
      - V2 User
  /app/user/info:
    post:
      consumes:
      - application/json
      description: Handles getting information of a user
      parameters:
      - description: payload to get information of a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/userv2.InfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userv2.InfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: user information
      tags:
      - V2 User
  /app/user/receipt/delete/timestamp:
    post:
      consumes:
      - application/json
      description: deletes receipts based on timestamp
      parameters:
      - description: json payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/delete.TimestampRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: deletes receipts based on timestamp
      tags:
      - V2 Receipt
  /app/user/receipt/delete/transnr:
    post:
      consumes:
      - application/json
      description: deletes receipts based on transnr(s)
      parameters:
      - description: json payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/delete.TransnrRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: deletes receipts based on transnr(s)
      tags:
      - V2 Receipt
  /app/user/receipt/fetch/timestamp:
    post:
      consumes:
      - application/json
      description: returns receipts based on timestamp
      parameters:
      - description: json payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_receiptv2_appuser_fetch.TimestampRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fetch.TimestampResponse'
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: returns receipts based on timestamp
      tags:
      - V2 Receipt
  /app/user/receipt/fetch/transnr:
    post:
      consumes:
      - application/json
      description: returns receipts based on transaction number
      parameters:
      - description: json payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_receiptv2_appuser_fetch.TransactionNumberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: returns receipts based on transaction number
      tags:
      - V2 Receipt
  /app/user/register:
    post:
      consumes:
      - application/json
      description: Handles the registration of a user
      parameters:
      - description: payload to register a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/userv2.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: user registration
      tags:
      - V2 User
  /auth/dashboard:
    post:
      consumes:
      - application/json
      description: Accepts an email and password and returns a JWT token
      parameters:
      - description: payload with email and password
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authv2.DashboardRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: accepts an email and password
      tags:
      - V2 Auth
  /auth/provider:
    post:
      consumes:
      - application/json
      description: Use an authenticated JWT to authenticate as a provider and receive
        a new JWT to be used for the provider
      parameters:
      - description: payload with api key
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authv2.ProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: authenticate as a demo provider
      tags:
      - V2 Auth
  /auth/public:
    post:
      consumes:
      - application/json
      description: Use an authenticated JWT to authenticate as a public provider and
        receive a new JWT to be used for the provider
      parameters:
      - description: payload with api key and provider_gcid
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authv2.PublicRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: authenticate as a public provider
      tags:
      - V2 Auth
  /auth/user:
    post:
      consumes:
      - application/json
      description: Use an authenticated JWT to authenticate as a provider user and
        receive a new JWT to be used for the provider user
      parameters:
      - description: JWT Access token for dashboard user
        in: header
        name: Authorization
        required: true
        type: string
      - description: payload with a provider_gcid
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/authv2.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: authenticate as a provider user
      tags:
      - V2 Auth
  /client/activate:
    post:
      consumes:
      - application/json
      description: Handles the activation of a client
      parameters:
      - description: payload to activate a client
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/clientv2.ActivateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Client activation
      tags:
      - V2 Client
  /client/app/permission/grant:
    post:
      consumes:
      - application/json
      description: Handles permission granting for application
      parameters:
      - description: payload to grant permission
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_permissionv2.GrantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: permission granting
      tags:
      - V2 Client
  /client/app/permission/remove:
    post:
      consumes:
      - application/json
      description: Handles permission removing for application
      parameters:
      - description: payload to remove permission
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_permissionv2.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: permission removing
      tags:
      - V2 Client
  /client/app/settings/default:
    post:
      consumes:
      - application/json
      description: Handles settings for application
      parameters:
      - description: payload set defaults for application settings
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.DefaultRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: default settings for application
      tags:
      - V2 Client
  /client/app/settings/info:
    post:
      consumes:
      - application/json
      description: Handles settings information for application
      parameters:
      - description: payload to get application information
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: settings information for application
      tags:
      - V2 Client
  /client/app/settings/input:
    post:
      consumes:
      - application/json
      description: Handles settings for application
      parameters:
      - description: payload for application settings
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_applicationv2_settingv2.InputRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: settings for application
      tags:
      - V2 Client
  /client/credit/logic/activate:
    post:
      consumes:
      - application/json
      description: Handles the activation of a credit logic
      parameters:
      - description: payload to activate a credit logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/creditv2.UpdateCredit'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Activate credit template so the logic can be triggered when sending
        receipt
      tags:
      - V2 Credit
  /client/credit/logic/create:
    post:
      consumes:
      - application/json
      description: Handles the creation of a credit logic
      parameters:
      - description: payload to create a credit logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/creditv2.CreateCredit'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Create credit template with logic to be used when processing request
        on send receipt or initiate credit endpoints
      tags:
      - V2 Credit
  /client/credit/logic/deactivate:
    post:
      consumes:
      - application/json
      description: Handles the deactivation of a credit logic
      parameters:
      - description: payload to deactivate a credit logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/creditv2.UpdateCredit'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Deactivate credit template so the logic can't be triggered when sending
        receipt
      tags:
      - V2 Credit
  /client/credit/logic/delete:
    post:
      consumes:
      - application/json
      description: Handles delete of a credit logic
      parameters:
      - description: payload to delete a credit logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/creditv2.UpdateCredit'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Delete credit template of the client
      tags:
      - V2 Credit
  /client/credit/logic/fetch:
    post:
      consumes:
      - application/json
      description: Handles fetch of a credit logic
      parameters:
      - description: payload to fetch a credit logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/creditv2.UpdateCredit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/creditv2.ResponseCreditFetch'
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Fetch credit template of the client
      tags:
      - V2 Credit
  /client/credit/logic/update:
    post:
      consumes:
      - application/json
      description: Handles update of a credit logic
      parameters:
      - description: payload to update a credit logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/creditv2.UpdateCredit'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Update existing credit template
      tags:
      - V2 Credit
  /client/deactivate:
    post:
      consumes:
      - application/json
      description: Handles the deactivation of a client
      parameters:
      - description: payload to deactivate a client
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/clientv2.DeactivateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Client deactivation
      tags:
      - V2 Client
  /client/delete:
    post:
      consumes:
      - application/json
      description: Handles the deletion of a client
      parameters:
      - description: payload to delete a client
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/clientv2.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Client deletion
      tags:
      - V2 Client
  /client/discount/logic/activate:
    post:
      consumes:
      - application/json
      description: Handles the activation of a discount logic
      parameters:
      - description: payload to activate a discount logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/logicv2.ActivateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Activate discount template so the logic can be triggered when sending
        receipt
      tags:
      - V2 Discount
  /client/discount/logic/create:
    post:
      consumes:
      - application/json
      description: Handles the creation of a discount logic
      parameters:
      - description: payload to create a discount logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/logicv2.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Create discount template with logic to be used when processing request
        on send receipt or initiate discount endpoints
      tags:
      - V2 Discount
  /client/discount/logic/deactivate:
    post:
      consumes:
      - application/json
      description: Handles the activation of a discount logic
      parameters:
      - description: payload to activate a discount logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/logicv2.DeactivateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Deactivate discount template so the logic can't be triggered when sending
        receipt
      tags:
      - V2 Discount
  /client/discount/logic/delete:
    post:
      consumes:
      - application/json
      description: Handles delete of a discount logic
      parameters:
      - description: payload to delete a discount logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/logicv2.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Delete discount template of the client
      tags:
      - V2 Discount
  /client/discount/logic/fetch:
    post:
      consumes:
      - application/json
      description: Handles fetch of a discount logic
      parameters:
      - description: payload to fetch a discount logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/logicv2.FetchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/logicv2.FetchResponse'
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Fetch discount template of the client
      tags:
      - V2 Discount
  /client/discount/logic/update:
    post:
      consumes:
      - application/json
      description: Handles update of a discount logic
      parameters:
      - description: payload to update a discount logic
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/logicv2.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Update existing discount template
      tags:
      - V2 Discount
  /client/merchant/permission/grant:
    post:
      consumes:
      - application/json
      description: Handles permission granting for merchant
      parameters:
      - description: payload grant permission
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_permissionv2.GrantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: permission granting
      tags:
      - V2 Client
  /client/merchant/permission/remove:
    post:
      consumes:
      - application/json
      description: Handles permission removing for merchant
      parameters:
      - description: payload remove permission
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_permissionv2.RemoveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: permission removing
      tags:
      - V2 Client
  /client/merchant/settings/default:
    post:
      consumes:
      - application/json
      description: Handles default settings for merchant
      parameters:
      - description: payload default settings
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.DefaultRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: default settings
      tags:
      - V2 Client
  /client/merchant/settings/follow/default:
    post:
      consumes:
      - application/json
      description: Handles default follow settings for merchant
      parameters:
      - description: payload default follow settings
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/followv2.DefaultRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: default follow settings
      tags:
      - V2 Client
  /client/merchant/settings/follow/set:
    post:
      consumes:
      - application/json
      description: Handles follow settings for merchant
      parameters:
      - description: payload set follow settings
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/followv2.SetRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: follow settings
      tags:
      - V2 Client
  /client/merchant/settings/info:
    post:
      consumes:
      - application/json
      description: Handles getting merchant information
      parameters:
      - description: payload get merchant info
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: get merchant information
      tags:
      - V2 Client
  /client/merchant/settings/input:
    post:
      consumes:
      - application/json
      description: Handles input settings for merchant
      parameters:
      - description: payload default settings
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_clientv2_merchantv2_settingv2.InputRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: input settings
      tags:
      - V2 Client
  /client/register:
    post:
      consumes:
      - application/json
      description: Handles the registration of a client
      parameters:
      - description: payload to register a client
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/clientv2.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/clientv2.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - JWT_PID: []
      - JWT_DGCID: []
      - APIKey: []
      summary: Client registration
      tags:
      - V2 Client
  /client/update:
    post:
      consumes:
      - application/json
      description: Handles the update of a client
      parameters:
      - description: payload to update a client
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/clientv2.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Client Update
      tags:
      - V2 Client
  /dashboard/activate/{token}:
    get:
      description: Takes a token and activates a user account if a matching token
        is found
      parameters:
      - description: a valid user activation token
        in: path
        name: token
        required: true
        type: string
      responses:
        "200":
          description: ""
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Activate a user
      tags:
      - V2 Auth
  /dashboard/client/{client_number}/users:
    get:
      description: returns all users with permission to perform actions on specific
        client
      parameters:
      - description: a valid client number value
        in: path
        name: client_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UsersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: get all users that has permission to perform actions on specific client
      tags:
      - V2 Client
  /dashboard/fetch/client:
    get:
      consumes:
      - application/json
      description: Returns clients for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/fetchv2.ClientResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Returns clients for authenticated user
      tags:
      - V2 Dashboard
  /dashboard/fetch/pid:
    get:
      consumes:
      - application/json
      description: Returns providers for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/fetchv2.PidResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Returns providers for authenticated user
      tags:
      - V2 Dashboard
  /dashboard/invite:
    post:
      consumes:
      - application/json
      description: Handles sending invitationof for a dashboarduser
      parameters:
      - description: payload to send invitation for a dashboarduser
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/invite.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invite.PostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: invite a dashboarduser
      tags:
      - V2 Invite
  /dashboard/invite/{id}:
    delete:
      parameters:
      - description: a valid invite ulid value
        in: path
        name: invite_ulid
        required: true
        type: string
      responses:
        "204":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: delete a specific invite row
      tags:
      - V2 Invite
    put:
      parameters:
      - description: a valid invite ulid value
        in: path
        name: invite_ulid
        required: true
        type: string
      - description: payload to accept or decline an invitation
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/invite.UpdateRequest'
      responses:
        "204":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: update a specific invite row
      tags:
      - V2 Invite
  /dashboard/invites:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/invite.ResponseData'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
      summary: get all invites for a dashboarduser
      tags:
      - V2 Invite
  /dashboard/invites/:id:
    get:
      description: get an invite
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invite.ResponseData'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error.Default'
      summary: get an invite
      tags:
      - V2 Invite
  /dashboard/invites/token:
    post:
      consumes:
      - application/json
      description: will generate an invite token
      parameters:
      - description: payload to generate an invite token
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/tokens.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tokens.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: generate invite token
      tags:
      - V2 Token
  /dashboard/invites/token/{invite_token}:
    get:
      description: Takes a token and start invitation if a matching token is found
      parameters:
      - description: a valid invite starting token
        in: path
        name: invite_token
        required: true
        type: string
      responses:
        "200":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: matching token and start invite
      tags:
      - V2 Invite
  /dashboard/password/reset:
    post:
      description: Requests a reset password email. The link is valid for 1 hour.
      parameters:
      - description: payload to request a reset a password email
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2.PasswordResetRequest'
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Requests a reset password email
      tags:
      - V2 Auth
  /dashboard/password/reset/{token}:
    post:
      description: Takes a token and if valid, changes the users password
      parameters:
      - description: payload to reset a password
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2.PasswordResetTokenRequest'
      - description: a valid password reset token
        in: path
        name: token
        required: true
        type: string
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Changes the users password
      tags:
      - V2 Auth
  /dashboard/permissions:
    get:
      description: return all permissions we have with name and description
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/permissions.Permission'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: get all permissions
      tags:
      - V2 Permission
  /dashboard/pid/delete:
    post:
      consumes:
      - application/json
      description: Handles the deletion of a provider
      parameters:
      - description: payload to delete a provider
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2.DeleteProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Provider deletion
      tags:
      - V2 Provider
  /dashboard/pid/generate/apikey:
    post:
      consumes:
      - application/json
      description: Handles the generation of apikey
      parameters:
      - description: payload to generate an apikey
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2.GenerateApikeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dashboardv2.RegisterProviderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Apikey generation
      tags:
      - V2 Auth
  /dashboard/pid/register:
    post:
      consumes:
      - application/json
      description: Handles the registration of a provider
      parameters:
      - description: payload to register a provider
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2.RegisterProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dashboardv2.RegisterProviderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Provider registration
      tags:
      - V2 Provider
  /dashboard/pid/update:
    post:
      consumes:
      - application/json
      description: Handles the registration of a provider
      parameters:
      - description: payload to update a provider
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2.UpdateProviderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Provider updatation
      tags:
      - V2 Provider
  /dashboard/provider/{pid}/users:
    get:
      description: returns all users with permission to perform action on specific
        provider
      parameters:
      - description: a valid pid value
        in: path
        name: pid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UsersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: get all users that has permission to perform actions on specific provider
      tags:
      - V2 Provider
  /dashboard/register:
    post:
      consumes:
      - application/json
      description: Handles the registration of a dashboard user
      parameters:
      - description: payload to register a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2.RegisterRequest'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Dashboard user registration
      tags:
      - V2 Auth
  /dashboard/role/{role_ulid}:
    get:
      description: return a specific role
      parameters:
      - description: a valid role ulid value
        in: path
        name: role_ulid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/roles.Role'
        "204":
          description: ""
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: get a specific role
      tags:
      - V2 Role
  /dashboard/roles:
    get:
      description: return all roles we have
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/roles.Role'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: get all roles
      tags:
      - V2 Role
  /dashboard/user:
    get:
      consumes:
      - application/json
      description: Retrieve the registered info about the dashboard user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dashboardv2.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: get dashboard user
      tags:
      - V2 Dashboard
    patch:
      consumes:
      - application/json
      description: Update the dashboard user.
      parameters:
      - description: payload to get a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dashboardv2.UserRequest'
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Update the dashboard user.
      tags:
      - V2 Dashboard
  /dashboard/user/{dgcid}/permission/{permission_ulid}:
    delete:
      description: remove permission for user
      parameters:
      - description: a valid dashboarduser global customer identifier value
        in: path
        name: dgcid
        required: true
        type: string
      - description: a valid permission ulid value
        in: path
        name: permission_ulid
        required: true
        type: string
      - description: payload that contain clients and providers who are subject of
          delete permission
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.PermissionRoleRequest'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: remove permission for user
      tags:
      - V2 User
    post:
      description: Handles adding permission to a user
      parameters:
      - description: a valid dashboarduser global customer identifier value
        in: path
        name: dgcid
        required: true
        type: string
      - description: a valid permission ulid value
        in: path
        name: permission_ulid
        required: true
        type: string
      - description: payload that contain clients and providers who are subject of
          permission
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.PermissionRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: add permission to a user
      tags:
      - V2 User
  /dashboard/user/{dgcid}/role/{role_ulid}:
    delete:
      description: Remove the users associated role
      parameters:
      - description: a valid dashboarduser global customer identifier value
        in: path
        name: dgcid
        required: true
        type: string
      - description: a valid role ulid value
        in: path
        name: role_ulid
        required: true
        type: string
      - description: payload that contain clients and providers who are subject of
          role
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.PermissionRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Remove the users associated roler
      tags:
      - V2 User
    post:
      description: Handles adding role to a user
      parameters:
      - description: a valid dashboarduser global customer identifier value
        in: path
        name: dgcid
        required: true
        type: string
      - description: a valid role ulid value
        in: path
        name: role_ulid
        required: true
        type: string
      - description: payload that contain clients and providers who are subject of
          role
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.PermissionRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: add role to a user
      tags:
      - V2 User
  /echo:
    get:
      description: Sending a get request to the echo endpoint should always return
        a response
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/monolith.echoResponse'
      summary: Uptime endpoint
      tags:
      - Global
  /file/{id}:
    get:
      description: Retrieves a file
      parameters:
      - description: The id of the file
        in: path
        name: id
        required: true
        type: string
      produces:
      - image/*
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Retrieve file
      tags:
      - V2 Files
  /files:
    get:
      description: Lists files for the authorized provider(s)
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/files.FileMetaData'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - JWT_PID: []
      - JWT_DGCID: []
      - APIKey: []
      summary: List files
      tags:
      - V2 Files
    post:
      consumes:
      - multipart/form-data
      description: Handles the uploading of files
      parameters:
      - description: File you would like to upload
        in: formData
        name: file
        required: true
        type: string
      - description: The pid the file should belong to
        in: formData
        name: pid
        type: string
      - description: The client the file should belong to
        in: formData
        name: client_number
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/files.UploadResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      - APIKey: []
      summary: File upload
      tags:
      - V2 Files
  /merchant/extended/lookup:
    post:
      consumes:
      - application/json
      description: Handles getting merchant extended objects
      parameters:
      - description: payload get merchant extended objects
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/extendedv2.LookupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/extendedv2.LookupResponse'
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
      summary: get extended objects
      tags:
      - V2 Extended-Objects
  /merchant/receipt/fetch/timestamp:
    post:
      consumes:
      - application/json
      description: returns receipts based on timestamp
      parameters:
      - description: json payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_receiptv2_merchant_fetch.TimestampRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/fetch.TimestampResponse'
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/error.Default'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: returns receipts based on timestamp
      tags:
      - V2 Receipt
  /merchant/receipt/fetch/transnr:
    post:
      consumes:
      - application/json
      description: returns receipts based on transaction number
      parameters:
      - description: json payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github.com_zeipts_monolith_v2_models_receiptv2_merchant_fetch.TransactionNumberRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: returns receipts based on transaction number
      tags:
      - V2 Receipt
  /merchant/receipt/lookup:
    post:
      consumes:
      - application/json
      description: Checks if identifiers of a user are able to receive a receipt
      parameters:
      - description: json payload with identifiers used for lookup
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/receiptv2.LookupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/receiptv2.LookupResponse'
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Check receivable identifiers
      tags:
      - V2 Receipt
  /merchant/receipt/send:
    post:
      consumes:
      - application/json
      description: Accepts a receipt object from a merchant client and attaches it
        to a provider user
      parameters:
      - description: json payload representing a Zeipt receipt object
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/receiptv2.SendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/receiptv2.SendResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Accepts a receipt object
      tags:
      - V2 Receipt
  /pid/webhook/info:
    post:
      consumes:
      - application/json
      description: Lists webhooks for the provider
      parameters:
      - description: payload get webhooks
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/webhookv2.InfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/webhookv2.WebhookResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Lists webhooks for the provider
      tags:
      - V2 Webhook
  /pid/webhook/message:
    post:
      consumes:
      - application/json
      description: Fetches webhook messages from the database
      parameters:
      - description: payload get webhook messages
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/webhookv2.MessageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Fetches webhook messages
      tags:
      - V2 Webhook
  /pid/webhook/register:
    post:
      consumes:
      - application/json
      description: Creates a new webhook
      parameters:
      - description: payload to create a webhook
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/webhookv2.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Creates a new webhook
      tags:
      - V2 Webhook
  /pid/webhook/test:
    post:
      consumes:
      - application/json
      description: Test is an endpoint for testing webhooks which just outputs the
        data in the log
      parameters:
      - description: payload to get webhooks
        in: body
        name: payload
        required: true
        schema:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Test webhook requests
      tags:
      - V2 Webhook
  /pid/webhook/update:
    post:
      consumes:
      - application/json
      description: Performs CRUD operations on webhooks
      parameters:
      - description: payload to update webhooks
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/webhookv2.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Performs CRUD operations on webhooks
      tags:
      - V2 Webhook
  /public/locations:
    get:
      description: Gets all active purchase locations for merchants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/locationv2.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Gets all active purchase locations for merchants
      tags:
      - V2 Location
  /statistics:
    get:
      description: fetches statistics for the authenticated provider or dashboard
        user
      parameters:
      - description: The provider ULID of the provider to fetch statistics for
        in: query
        name: provider
        type: string
      - description: The client number of the client to fetch statistics for
        in: query
        name: client
        type: string
      - default: NOW - 1 month
        description: The YYYY-MM-DD date you would like statistics to be fetched from
        in: query
        name: from
        type: string
      - default: NOW
        description: The YYYY-MM-DD date you would like statistics to be fetched to
        in: query
        name: to
        type: string
      - description: This will adapt the output accordingly
        enum:
        - day
        - month
        - year
        - detailed
        - count
        in: query
        name: segment
        type: string
      - description: The service to fetch statistics for.
        enum:
        - lookup
        - identification
        - receipt
        in: query
        name: service
        required: true
        type: string
      - description: The action to fetch statistics for.
        enum:
        - extended
        - email
        - sms
        - send
        - matched
        in: query
        name: action
        type: string
      - description: one or more comma seperated keys to further segment the statistics,
          for example 'bank_token,email'
        in: query
        items:
          type: string
        name: key
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statisticsv2.SegmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      - APIKey: []
      summary: fetches statistics
      tags:
      - V2 Statistics
  /statistics/client/segment/{client}/{from}/{to}/{segment}/{service}/{action}:
    get:
      deprecated: true
      description: fetches statistics for the authenticated provider or dashboard
        user <br/><br/>Use /statistics with query parameters instead.
      parameters:
      - description: The client number of the client to fetch statistics for
        in: path
        name: client
        required: true
        type: string
      - description: The YYYY-MM-DD date you would like statistics to be fetched from
        in: path
        name: from
        required: true
        type: string
      - description: The YYYY-MM-DD date you would like statistics to be fetched to
        in: path
        name: to
        required: true
        type: string
      - description: This will adapt the output accordingly
        enum:
        - day
        - month
        - year
        - detailed
        - count
        in: path
        name: segment
        required: true
        type: string
      - description: The service to fetch statistics for. This can be 'receipt' for
          example.
        in: path
        name: service
        required: true
        type: string
      - description: The action to fetch statistics for. This can be 'send' for example.
        in: path
        name: action
        type: string
      - description: one or more comma seperated keys to further segment the statistics,
          example ?key=bank_token,email
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statisticsv2.SegmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - JWT_PID: []
      - JWT_DGCID: []
      - APIKey: []
      summary: fetches statistics for a client
      tags:
      - V2 Statistics
  /statistics/provider/segment/{provider}/{from}/{to}/{segment}/{service}/{action}:
    get:
      deprecated: true
      description: fetches statistics for the authenticated provider or dashboard
        user <br/><br/>Use /statistics with query parameters instead.
      parameters:
      - description: The provider ULID of the provider to fetch statistics for
        in: path
        name: provider
        required: true
        type: string
      - description: The YYYY-MM-DD date you would like statistics to be fetched from
        in: path
        name: from
        required: true
        type: string
      - description: The YYYY-MM-DD date you would like statistics to be fetched to
        in: path
        name: to
        required: true
        type: string
      - description: This will adapt the output accordingly
        enum:
        - day
        - month
        - year
        - detailed
        - count
        in: path
        name: segment
        required: true
        type: string
      - description: The service to fetch statistics for. This can be 'receipt' for
          example.
        in: path
        name: service
        required: true
        type: string
      - description: The action to fetch statistics for. This can be 'send' for example.
        in: path
        name: action
        type: string
      - description: one or more comma seperated keys to further segment the statistics,
          example ?key=bank_token,email
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statisticsv2.SegmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - JWT_PID: []
      - JWT_DGCID: []
      - APIKey: []
      summary: fetches statistics for a provider
      tags:
      - V2 Statistics
  /statistics/segment/{from}/{to}/{segment}/{service}/{action}:
    get:
      deprecated: true
      description: fetches statistics for the authenticated provider or dashboard
        user <br/><br/>Use /statistics with query parameters instead.
      parameters:
      - description: The YYYY-MM-DD date you would like statistics to be fetched from
        in: path
        name: from
        required: true
        type: string
      - description: The YYYY-MM-DD date you would like statistics to be fetched to
        in: path
        name: to
        required: true
        type: string
      - description: This will adapt the output accordingly
        enum:
        - day
        - month
        - year
        - detailed
        - count
        in: path
        name: segment
        required: true
        type: string
      - description: The service to fetch statistics for. This can be 'receipt' for
          example.
        in: path
        name: service
        required: true
        type: string
      - description: The action to fetch statistics for. This can be 'send' for example.
        in: path
        name: action
        type: string
      - description: one or more comma seperated keys to further segment the statistics,
          example ?key=bank_token,email
        in: query
        name: key
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/statisticsv2.SegmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - JWT_PID: []
      - JWT_DGCID: []
      - APIKey: []
      summary: fetches statistics for a specific segment
      tags:
      - V2 Statistics
  /v3.0/clients:
    get:
      description: Returns clients for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/clients.ClientsResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
      summary: Returns clients for authenticated user
      tags:
      - V3 Client
  /v3.0/clients/{client_number}/users:
    get:
      description: returns all users with permission to perform actions on specific
        client
      parameters:
      - description: a valid client id value
        in: path
        name: client_number
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UsersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: get all users that has permission to perform actions on specific client
      tags:
      - V3 Client
  /v3.0/invites:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/invite.ResponseData'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: get all invites for a dashboarduser
      tags:
      - V3 Invite
    post:
      consumes:
      - application/json
      description: Handles sending invitationof for a dashboarduser
      parameters:
      - description: payload to send invitation for a dashboarduser
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/invite.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invite.PostResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: invite a dashboarduser
      tags:
      - V3 Invite
  /v3.0/invites/{id}:
    delete:
      parameters:
      - description: a valid invite id value
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: delete a specific invite row
      tags:
      - V3 Invite
    get:
      description: get an invite
      parameters:
      - description: a valid invite id value
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/invite.ResponseData'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: get an invite
      tags:
      - V3 Invite
    put:
      parameters:
      - description: a valid invite id value
        in: path
        name: id
        required: true
        type: string
      - description: payload to accept or decline an invitation
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/invite.UpdateRequest'
      responses:
        "204":
          description: ""
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: update a specific invite row
      tags:
      - V3 Invite
  /v3.0/locations:
    get:
      description: Gets all active purchase locations for merchants
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/locationv2.Response'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Gets all active purchase locations for merchants
      tags:
      - V3 Location
  /v3.0/permissions:
    get:
      description: return all permissions we have with name and description
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/permissions.Permission'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: get all permissions
      tags:
      - V3 Permission
  /v3.0/providers:
    get:
      description: Returns providers for authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/fetchv2.PidResponse'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
      summary: Returns providers for authenticated user
      tags:
      - V3 Provider
  /v3.0/providers/{pid}/users:
    get:
      description: returns all users with permission to perform action on specific
        provider
      parameters:
      - description: a valid pid value
        in: path
        name: pid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.UsersResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: get all users that has permission to perform actions on specific provider
      tags:
      - V3 Provider
  /v3.0/receipts:
    post:
      consumes:
      - application/json
      description: Accepts a receipt object from a merchant client and attaches it
        to a provider user
      parameters:
      - description: json payload representing a Zeipt object
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/receipt.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - Bearer: []
      - APIKey: []
      summary: Accepts a receipt object
      tags:
      - V3 Receipt
  /v3.0/roles:
    get:
      description: return all roles we have
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/roles.Role'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: get all roles
      tags:
      - V3 Role
  /v3.0/roles/{role_ulid}:
    get:
      description: return a specific role
      parameters:
      - description: a valid role ulid value
        in: path
        name: role_ulid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/roles.Role'
        "204":
          description: ""
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: get a specific role
      tags:
      - V3 Role
  /v3.0/sessions:
    delete:
      description: Deletes the authenticated session
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      - APIKey: []
      summary: Deletes the authenticated session
      tags:
      - V3 Sessions
    post:
      consumes:
      - application/json
      description: Creates a session based on the username and password
      parameters:
      - description: payload with username and password
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/session.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: Creates a session based on the username and password
      tags:
      - V3 Sessions
  /v3.0/tokens:
    post:
      consumes:
      - application/json
      description: will generate an invite token
      parameters:
      - description: payload to generate an invite token
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/tokens.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tokens.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: generate invite token
      tags:
      - V3 Token
  /v3.0/tokens/{invite_token}:
    get:
      description: Takes a token and start invitation if a matching token is found
      parameters:
      - description: a valid invite starting token
        in: path
        name: invite_token
        required: true
        type: string
      responses:
        "200":
          description: ""
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/error.Default'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: matching token and start invite
      tags:
      - V3 Invite
  /v3.0/users:
    post:
      consumes:
      - application/json
      description: Handles the registration of a user
      parameters:
      - description: payload to register a user
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/users.CreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: User registration
      tags:
      - V3 User
  /v3.0/users/{dgcid}/permissions/{permission_ulid}:
    delete:
      description: remove permission for user
      parameters:
      - description: a valid dashboarduser global customer identifier value
        in: path
        name: dgcid
        required: true
        type: string
      - description: a valid permission ulid value
        in: path
        name: permission_ulid
        required: true
        type: string
      - description: payload that contain clients and providers who are subject of
          delete permission
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.PermissionRoleRequest'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: remove permission for user
      tags:
      - V3 User
    post:
      description: Handles adding permissions to a user
      parameters:
      - description: a valid dashboarduser global customer identifier value
        in: path
        name: dgcid
        required: true
        type: string
      - description: a valid permission ulid value
        in: path
        name: permission_ulid
        required: true
        type: string
      - description: payload that contain clients and providers who are subject of
          permission
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.PermissionRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: add permissions to a user
      tags:
      - V3 User
  /v3.0/users/{dgcid}/roles/{role_ulid}:
    delete:
      description: DeleteRole removes a role of a user
      parameters:
      - description: a valid dashboarduser global customer identifier value
        in: path
        name: dgcid
        required: true
        type: string
      - description: a valid role ulid value
        in: path
        name: role_ulid
        required: true
        type: string
      - description: payload that contain clients and providers who are subject of
          delete permission
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.PermissionRoleRequest'
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      summary: removes a role of a user
      tags:
      - V3 User
    post:
      description: Handles adding role to a user
      parameters:
      - description: a valid dashboarduser global customer identifier value
        in: path
        name: dgcid
        required: true
        type: string
      - description: a valid role ulid value
        in: path
        name: role_ulid
        required: true
        type: string
      - description: payload that contain clients and providers who are subject of
          role
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/users.PermissionRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/general.ValidationError'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/error.Default'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/error.Default'
      security:
      - Bearer: []
      summary: add role to a user
      tags:
      - V3 User
securityDefinitions:
  APIKey:
    in: header
    name: api_key
    type: apiKey
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
